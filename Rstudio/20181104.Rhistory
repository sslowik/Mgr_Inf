install.packages("genalg")
getwd()
setwd("D:\INF\Rstudio")
setwd("D:/INF/Rstudio")
getwd()
install.packages("genalg")
library(genalg)
getwd()
load("D:/INF/Rstudio/lab2_20181028.RData")
devtools::install_github("coolbutuseless/nonogram")
View(fitnessFunc)
View(fitnessFunc)
View(fitnessFunc)
View(plecakGenAlg)
View(mat1)
View(macierzowo)
View(C)
View(mat1)
View(C)
C
view(fitnessFunc())
view(fitnessFunc)
view(fitnessFunc(chr))
view(fitnessFunc)
print("asdkljfdsklj")
"asdkljfdsklj"
matrix(nrow = 6, ncol=10)
gora <- matrix(nrow = 6, ncol=10)
gora
matrix
gora
gora <- matrix(data=c(1,2,3,4,5,6,7,8,9,10), nrow = 6, ncol=10)
gora
gora <- matrix(data=c(1,2,3,4,5,6,7,8,9,10), nrow = 6, ncol=15)
gora
gora.data
gora(1,5)
gora(1)
gora()
gora
dim(gora)
class(gora)
matrix(1,3,4,5,6,7,8,9)
matrix(data=c(1,3,4,5,6,7,8,9), nrow=2)
colnames(gora)
rownames(gora) <- c("R1", "R2","R3","R4","R5","R6",)
rownames(gora) <- c("R1", "R2","R3","R4","R5","R6")
gora
gora(1,2)
gora(c(1), c(1))
gora[c(1),c(1)]
gora[c(1),c(2)]
gora[c(1,2),c(1,2)]
gora[1,]
gora[,3]
gora[,3, drop=FALSE]
gora[2:5]
gora
gora[1:6]
gora[1,]
gora[,1]
sum(gora[,1])
fitnessFunc()
fitnessFunc(x)
fitnessFunc(chr)
chromosome
fitnessFunc(chromosome)
as.matrix(1,2,3,4,5,6,7,8,9)
as.matrix(1,2,3,4,5,6,7,8,9)
as.matrix([1:10,])
as.matrix(guliwer[1:10,])
as.matrix(1:10)
as.matrix([1:10],[2:11])
as.matrix(2:10,3:11)
as.matrix(2:10,3:11,4:12)
as.matrix([2:10])
as.matrix(c(2:10))
as.matrix(c(2:10),c(1:9))
warpbreaks[1:10,]
warpbreaks
warpbreaks()
warpbreaks(
warpbreaks
gora
gora[R1,3]
gora[1,3]
gora["R1",3]
gora["R1",4]
gora["R1",4] <- 5
gora["R1",4]
gora_t <- t(gora)
gora_t
x
class(nkldsan)
class(nkldsan) <- asdafsd
gora[2,2] <- 10; gora
gora[2,2] <- 11
gora
lewa <- matrix(nrow=15, ncol = 6)
lewa
lewa <- c(1,2,3,4,5,6)
lewa
lewa
lewa <- matrix(nrow=15, ncol = 6)
lewa
dim(lewa) <- c(10,10)
dim(lewa) <- c(3,30)
lewa
dim(lewa) <- c(15,6)
lewa
n <- floor(rnorm(10000, 500, 100))
t <- table(n)
barplot(t)
n
n
mean(n)
dev(n)
deviance(n)
t
table(chromosome)
table(v100)
table(gora)
gora
(rnorm(90, 3, 100)
rnorm(90, 3, 100)
floor(rnorm(90, 3, 100))
floor(rnorm(90, 3, 10))
-floor(rnorm(90, 3, 10))
10-(rnorm(90, 3, 10))
100-(rnorm(90, 3, 10))
100-floor(rnorm(90, 3, 10))
100-floor(rnorm(90, 10, 3))
floor(rnorm(90, 10, 3))
floor(rnorm(90, 10, 3))
floor(rnorm(90, 10, 3))
floor(rnorm(90, 5, 3))
floor(rnorm(90, 5, 2))
vzdupy <- c(floor(rnorm(90, 5, 2)))
vzdupy
dim(vzdupy) <- c(3,15)
dim(vzdupy) <- c(6,15)
vzdupy
table(vzdupy)
plot(table(vzdupy))
barplot(table(vzdupy))
costam <- table(vzdupy)
costam
barplot(costam)
barplot(table(floor(rnorm(10000, 500, 100))), xlab="Numbers", ylab="Frequencies")
barplot(table(floor(rnorm(10000, 500, 100))), xlab="Numbers", ylab="Frequencies")
n <- floor(rnorm(10000, 500, 100))
t <- table(n)
barplot(t)
n
clear
clear()
barplot(table(floor(rnorm(10000, 500, 100))), xlab="Numbers", ylab="Frequencies")
barplot(table(floor(rnorm(10000, 500, 100))), xlab="Numbers", ylab="Frequencies")
barplot(table(floor(rnorm(10000, 500, 100))), xlab="Numbers", ylab="Frequencies")
barplot(table(floor(rnorm(10000, 500, 100))), xlab="Numbers", ylab="Frequencies")
barplot(table(floor(rnorm(10000, 500, 100))), xlab="Numbers", ylab="Frequencies")
barplothuha <- barplot(table(floor(rnorm(10000, 500, 100))), xlab="Numbers", ylab="Frequencies")
barplothuha <- barplot(table(floor(rnorm(10000, 500, 100))), xlab="Numbers", ylab="Frequencies")
barplothuha
rm barplothuha
rm(barplothuha)
gora
lewa
lewa <- (1:10)
lewa
lewa <- matrix(data=c(1:10), ncol = 2)
lewa
lewa <- rbid(c(1,2,3,4,5), c(3,4,5,6,7))
lewa <- rbind(c(1,2,3,4,5), c(3,4,5,6,7))
lewa
lewa <- cbind(c(1,2,3,4,5), c(3,4,5,6))
lewa <- cbind(c(1,2,3,4,5), c(3,4,5,6,0))
lewa
v100
v100[1]
v100[1:6]
v100[1:6,10:12]
v100([1:6],[10:12])
v100[1:6,10:12]
v100[10:12]
v100[v100 <50]
v100 <- v100[v100 <50]
v100
v10 <- c(1:10)
v20 <- c(11:20)
v30 <- v10+v20
v30
append(v10, v20)
append(v10, [0,0,0,0,0,0])
append(v10, c(0,0,0,0,0,0)
append(v10, c(0,0,0,0,0,0))
append(v10, c(0,0,0,0,0,0))
append(v10, c(0,0,0,0,0,0))[1:12]
append(v10, c(0,0,0,0,0,0))[0:12]
append(v10, c(0,0,0,0,0,0))[9:12]
