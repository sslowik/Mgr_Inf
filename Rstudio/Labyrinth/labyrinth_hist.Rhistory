} else if (chromo[xx] == 1) {
(step_up <- step_up +1)
} else if (chromo[xx] == 2) {
(step_down <- step_down + 1)
} else if (chromo[xx] == 3) {
(step_right <- step_right + 1)
} else { (step_left <- step_left + 1)
}
}
chromo
chromo[1]=3
chromo
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
}
for(xx in 1:path_length) {
if (xx == 1 && (chromo[1] ==  1 ||  chromo[1] ==  4)) {
stop("Koniec wycieczki")
} else if (chromo[xx] == 1) {
(step_up <- step_up +1)
} else if (chromo[xx] == 2) {
(step_down <- step_down + 1)
} else if (chromo[xx] == 3) {
(step_right <- step_right + 1)
} else { (step_left <- step_left + 1)
}
}
step_up;step_down;step_right;step_left
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
}
for(xx in 1:path_length) {
if (xx == 1 && (chromo[1] ==  1 ||  chromo[1] ==  4)) {
stop("Słaby początek")
} else if (chromo[xx] == 1) {
(step_up <- step_up +1)
} else if (chromo[xx] == 2) {
(step_down <- step_down + 1)
} else if (chromo[xx] == 3) {
(step_right <- step_right + 1)
} else { (step_left <- step_left + 1)
}
if (labyrinth[step_down - step_up , step_right - step_left] == 1) {
stop("Koniec wycieczki");
step_down - step_up;step_right - step_left
}
}
labyrinth[step_down - step_up , step_right - step_left]
labyrinth[step_down - step_up , step_right - step_left]
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
}
for(xx in 1:path_length) {
if (xx == 1 && (chromo[1] ==  1 ||  chromo[1] ==  4)) {
stop("Słaby początek")
} else if (chromo[xx] == 1) {
(step_up <- step_up +1)
} else if (chromo[xx] == 2) {
(step_down <- step_down + 1)
} else if (chromo[xx] == 3) {
(step_right <- step_right + 1)
} else { (step_left <- step_left + 1)
}
if (XX > 1 && labyrinth[step_down - step_up , step_right - step_left] == 1) {
stop("Koniec wycieczki");
step_down - step_up;step_right - step_left
}
}
step_down - step_up;step_right - step_left
step_down;step_up;step_right;step_left
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
}
for(xx in 1:path_length) {
if (xx == 1 && (chromo[1] ==  1 ||  chromo[1] ==  4)) {
stop("Słaby początek")
} else if (chromo[xx] == 1) {
(step_up <- step_up +1)
} else if (chromo[xx] == 2) {
(step_down <- step_down + 1)
} else if (chromo[xx] == 3) {
(step_right <- step_right + 1)
} else { (step_left <- step_left + 1)
}
if (XX > 1 && labyrinth[step_down - step_up , step_right - step_left] == 1) {
stop("Koniec wycieczki")
}
}
step_down;step_up;step_right;step_left
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
}
for(xx in 1:path_length) {
if (xx == 1 && (chromo[1] ==  1 ||  chromo[1] ==  4)) {
stop("Słaby początek")
} else if (chromo[xx] == 1) {
(step_up <- step_up +1)
} else if (chromo[xx] == 2) {
(step_down <- step_down + 1)
} else if (chromo[xx] == 3) {
(step_right <- step_right + 1)
} else { (step_left <- step_left + 1)
}
}
step_down;step_up;step_right;step_left
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
}
for(xx in 1:path_length) {
while (labyrinth[step_down - step_up , step_right - step_left] == 0)
{
if (xx == 1 && (chromo[1] ==  1 ||  chromo[1] ==  4)) {
break
} else if (chromo[xx] == 1) {
(step_up <- step_up +1)
} else if (chromo[xx] == 2) {
(step_down <- step_down + 1)
} else if (chromo[xx] == 3) {
(step_right <- step_right + 1)
} else { (step_left <- step_left + 1)
}
}
}
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
}
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
}
for(xx in 1:path_length) {
while (xx ==1 || labyrinth[step_down - step_up , step_right - step_left] == 0)
{
if (xx == 1 && (chromo[1] ==  1 ||  chromo[1] ==  4)) {
break
} else if (chromo[xx] == 1) {
(step_up <- step_up +1)
} else if (chromo[xx] == 2) {
(step_down <- step_down + 1)
} else if (chromo[xx] == 3) {
(step_right <- step_right + 1)
} else { (step_left <- step_left + 1)
}
}
}
step_down - step_up;step_right - step_left
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
}
for(xx in 1:path_length) {
if (xx == 1 && (chromo[1] ==  1 ||  chromo[1] ==  4)) {
break
} else if (xx != 1 && labyrinth[step_down - step_up , step_right - step_left] == 1) {
break
} else if (chromo[xx] == 1) {
(step_up <- step_up +1)
} else if (chromo[xx] == 2) {
(step_down <- step_down + 1)
} else if (chromo[xx] == 3) {
(step_right <- step_right + 1)
} else if (chromo[xx] == 4) {
(step_left <- step_left + 1)
}
}
step_down;step_up;step_right;step_left
labyrinth[step_down - step_up , step_right - step_left]
chromo
labyrinth[0,0]
labyrinth[1,1]
labyrinth[1,1]
labyrinth
labyrinth[1,1]
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
current_row <- 1
current_column <- 1
}
current_row <- 1
current_column
current_row
current_column
current_row
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
current_row <- 1
current_column <- 1
}
current_column
current_row
current_column; current_row
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
current_row <- 1
current_column <- 1
}
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
current_row <- 1
current_column <- 1
}
current_column; current_row
for(xx in 1:path_length) {
if
(
(current_row == 1 && chromo[xx] ==  1) ||
(current_row == lab_size && chromo[xx] ==  2) ||
(current_column == 1 && chromo[xx] ==  4) ||
(current_column == lab_size && chromo[xx] ==  3) ||
(labyrinth[current_row , current_column] == 1)
)
{ break
} else if (chromo[xx] == 1) {
(step_up <- step_up +1)
} else if (chromo[xx] == 2) {
(step_down <- step_down + 1)
} else if (chromo[xx] == 3) {
(step_right <- step_right + 1)
} else if (chromo[xx] == 4) {
(step_left <- step_left + 1)
}
}
{
current_row
current_column
}
current_row
current_column
chromo
{
step_up <- 0
step_down <- 0
step_right <- 0
step_left <- 0
current_row <- 1
current_column <- 1
}
current_column; current_row
current_row <- 1
current_column <- 1
current_column; current_row
for(xx in 1:path_length) {
if
(
(current_row == 1 && chromo[xx] ==  1) ||
(current_row == lab_size && chromo[xx] ==  2) ||
(current_column == 1 && chromo[xx] ==  4) ||
(current_column == lab_size && chromo[xx] ==  3) ||
(labyrinth[current_row , current_column] == 1)
)
{ break
} else if (chromo[xx] == 1) {
(current_row <- current_row +1)
} else if (chromo[xx] == 2) {
(current_row <- current_row - 1)
} else if (chromo[xx] == 3) {
(current_column <- current_column + 1)
} else if (chromo[xx] == 4) {
(current_column <- current_column - 1)
}
}
current_row
current_row
current_column
current_row <- 1
current_column <- 1
current_column; current_row
for(xx in 1:path_length) {
if
(
(current_row == 1 && chromo[xx] ==  2) ||
(current_row == lab_size && chromo[xx] ==  1) ||
(current_column == 1 && chromo[xx] ==  4) ||
(current_column == lab_size && chromo[xx] ==  3)
)
{ break
} else if (chromo[xx] == 1) {
(current_row <- current_row +1)
} else if (chromo[xx] == 2) {
(current_row <- current_row - 1)
} else if (chromo[xx] == 3) {
(current_column <- current_column + 1)
} else if (chromo[xx] == 4) {
(current_column <- current_column - 1)
}
}
current_row
current_column
chromo <- round(runif(path_length,1,4), 0)
chromo
{
current_row <- 1
current_column <- 1
}
current_column; current_row
for(xx in 1:path_length) {
if
(
(current_row == 1 && chromo[xx] ==  2) ||
(current_row == lab_size && chromo[xx] ==  1) ||
(current_column == 1 && chromo[xx] ==  4) ||
(current_column == lab_size && chromo[xx] ==  3)
)
{ break
} else if (chromo[xx] == 1) {
(current_row <- current_row +1)
} else if (chromo[xx] == 2) {
(current_row <- current_row - 1)
} else if (chromo[xx] == 3) {
(current_column <- current_column + 1)
} else if (chromo[xx] == 4) {
(current_column <- current_column - 1)
}
}
{
current_row
current_column
}
current_row
current_column
chromo
chromo <- round(runif(path_length,1,4), 0)
{
chromo <- round(runif(path_length,1,4), 0)
current_row <- 1
current_column <- 1
for(xx in 1:path_length) {
if
(
(current_row == 1 && chromo[xx] ==  2) ||
(current_row == lab_size && chromo[xx] ==  1) ||
(current_column == 1 && chromo[xx] ==  4) ||
(current_column == lab_size && chromo[xx] ==  3)
)
{ break
} else if (chromo[xx] == 1) {
(current_row <- current_row +1)
} else if (chromo[xx] == 2) {
(current_row <- current_row - 1)
} else if (chromo[xx] == 3) {
(current_column <- current_column + 1)
} else if (chromo[xx] == 4) {
(current_column <- current_column - 1)
}
}
current_row
current_column
chromo
}
current_row
current_column
chromo
chromo <- round(runif(path_length,1,4), 0)
chromo
current_row <- 1
current_column <- 1
for(xx in 1:path_length) {
if
(
(current_row == 1 && chromo[xx] ==  2) ||
(current_row == lab_size && chromo[xx] ==  1) ||
(current_column == 1 && chromo[xx] ==  4) ||
(current_column == lab_size && chromo[xx] ==  3)
)
{ break
} else if (chromo[xx] == 1) {
(current_row <- current_row +1)
} else if (chromo[xx] == 2) {
(current_row <- current_row - 1)
} else if (chromo[xx] == 3) {
(current_column <- current_column + 1)
} else if (chromo[xx] == 4) {
(current_column <- current_column - 1)
}
}
current_row
current_column
xx
"steps"
print(steps)
print("steps")
steps <- "steps:" & xx
steps <- "steps:" + xx
steps; current_row; current_column
chromo <- round(runif(path_length,1,4), 0)
chromo
chromo <- round(runif(path_length,1,4), 0)
chromo
chromo <- round(runif(path_length,1,4), 0)
chromo
chromo <- round(runif(path_length,1,4), 0)
chromo
chromo <- round(runif(path_length,1,4), 0)
chromo
chromo <- round(runif(path_length,1,4), 0)
chromo
current_row <- 1
current_column <- 1
for(steps in 1:path_length) {
if
(
(current_row == 1 && chromo[steps] ==  2) ||
(current_row == lab_size && chromo[steps] ==  1) ||
(current_column == 1 && chromo[steps] ==  4) ||
(current_column == lab_size && chromo[steps] ==  3)
)
{ break
} else if (chromo[steps] == 1) {
(current_row <- current_row +1)
} else if (chromo[steps] == 2) {
(current_row <- current_row - 1)
} else if (chromo[steps] == 3) {
(current_column <- current_column + 1)
} else if (chromo[steps] == 4) {
(current_column <- current_column - 1)
}
}
steps; current_row; current_column
to_exit <- (lab_size * 2) - (current_column + current_row)
steps; current_row; current_column; to_exit
labyrinth
current_row <- 1
current_column <- 1
for(steps in 1:path_length) {
if
(
(current_row == 1 && chromo[steps] ==  2) ||
(current_row == lab_size && chromo[steps] ==  1) ||
(current_column == 1 && chromo[steps] ==  4) ||
(current_column == lab_size && chromo[steps] ==  3) ||
(labyrinth[current_row , current_column] == 1)
)
{ break
} else if (chromo[steps] == 1) {
(current_row <- current_row +1)
} else if (chromo[steps] == 2) {
(current_row <- current_row - 1)
} else if (chromo[steps] == 3) {
(current_column <- current_column + 1)
} else if (chromo[steps] == 4) {
(current_column <- current_column - 1)
}
}
to_exit <- (lab_size * 2) - (current_column + current_row)
steps; current_row; current_column; to_exit
chromo
labyrinth
current_row <- 1
current_column <- 1
for(steps in 1:path_length) {
if
(
(current_row == 1 && chromo[steps] ==  2) ||
(current_row == lab_size && chromo[steps] ==  1) ||
(current_column == 1 && chromo[steps] ==  4) ||
(current_column == lab_size && chromo[steps] ==  3) ||
(steps != 1 && labyrinth[current_row , current_column] == 1)
)
{ break
} else if (chromo[steps] == 1) {
(current_row <- current_row +1)
} else if (chromo[steps] == 2) {
(current_row <- current_row - 1)
} else if (chromo[steps] == 3) {
(current_column <- current_column + 1)
} else if (chromo[steps] == 4) {
(current_column <- current_column - 1)
}
}
to_exit <- (lab_size * 2) - (current_column + current_row)
steps; current_row; current_column; to_exit
chromo
labyrinth
save.image("D:/INF/Rstudio/Labyrinth/lab_environment.RData")
savehistory("D:/INF/Rstudio/Labyrinth/labyrinth_hist.Rhistory")
