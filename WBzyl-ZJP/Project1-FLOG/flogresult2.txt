 81916.9: flog total
    10.4: flog/method average

  4097.0: main#none
   265.7: describe#POST #create            mastodon/spec/controllers/settings/two_factor_authentications_controller_spec.rb:43-72
   256.0: describe(GET #show)::it#returns http success mastodon/spec/controllers/well_known/host_meta_controller_spec.rb:7-12
   218.2: let#token                        mastodon/spec/controllers/api/v2/search_controller_spec.rb:9-9
   215.0: describe(PUT #update)::it#changes alert settings mastodon/spec/controllers/api/web/push_subscriptions_controller_spec.rb:71-87
   207.8: describe#GET #index              mastodon/spec/controllers/settings/exports/muted_accounts_controller_spec.rb:6-14
   200.5: describe##perform                mastodon/spec/workers/activitypub/update_distribution_worker_spec.rb:9-17
   195.8: let#user                         mastodon/spec/services/notify_service_spec.rb:8-8
   195.5: describe(GET #index)::it#returns http success mastodon/spec/controllers/api/v2/search_controller_spec.rb:16-19
   188.8: let#json                         mastodon/spec/services/activitypub/process_collection_service_spec.rb:20-20
   185.2: Account#none
   171.1: Mastodon::MigrationHelpers#update_column_in_batches mastodon/lib/mastodon/migration_helpers.rb:308-404
   153.1: describe(GET #index)::context(provided multiple IDs)::it#returns JSON with correct data mastodon/spec/controllers/api/v1/accounts/relationships_controller_spec.rb:49-67
   150.2: describe(POST #create)::it#saves push subscriptions mastodon/spec/controllers/api/web/push_subscriptions_controller_spec.rb:36-49
   136.1: describe(stream_entries/show.html.haml)::it#has valid h-cites for p-in-reply-to and p-comment mastodon/spec/views/stream_entries/show.html.haml_spec.rb:40-66
   127.7: describe#GET #show               mastodon/spec/controllers/well_known/webfinger_controller_spec.rb:6-96
   123.7: Status#none
   122.9: Status::as_direct_timeline       mastodon/app/models/status.rb:244-281
   119.5: describe(POST #create)::context(with initial data)::it#saves alert settings mastodon/spec/controllers/api/web/push_subscriptions_controller_spec.rb:53-65
   118.7: describe#DELETE #destroy         mastodon/spec/controllers/settings/sessions_controller_spec.rb:10-27
   117.7: User#none
   110.8: describe#remote ActivityPub      mastodon/spec/services/unfollow_service_spec.rb:42-56
   105.9: describe(perform)::context(when the account is updated)::it#calls the follow service and destroys the follow mastodon/spec/workers/after_remote_follow_worker_spec.rb:44-55
   105.5: context#with an oauth token      mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:10-64
   104.1: describe(jpeg)::it#sets meta for different style mastodon/spec/models/media_attachment_spec.rb:128-134
   104.0: Remotable#remotable_attachment   mastodon/app/models/concerns/remotable.rb:7-59
   102.9: Formatter#encode_custom_emojis   mastodon/app/lib/formatter.rb:127-176
   102.4: describe#remote OStatus          mastodon/spec/services/unfollow_service_spec.rb:21-38
   101.3: describe(home timeline)::it#clears account's statuses mastodon/spec/services/mute_service_spec.rb:20-26
   101.0: describe#.initialize             mastodon/spec/presenters/account_relationships_presenter_spec.rb:6-78
   100.1: context(with a user context)::describe(GET #show)::it#returns http success mastodon/spec/controllers/api/v1/timelines/tag_controller_spec.rb:22-25
    98.4: AccountsController#show          mastodon/app/controllers/accounts_controller.rb:10-46
    94.4: context(with an oauth token)::describe(POST #create)::it#return json with updated attributes mastodon/spec/controllers/api/v1/statuses/reblogs_controller_spec.rb:36-41
    91.0: describe(GET #show)::it#returns JSON when account can be found mastodon/spec/controllers/well_known/webfinger_controller_spec.rb:59-67
    88.8: describe(GET #index)::it#filters with parameters mastodon/spec/controllers/admin/accounts_controller_spec.rb:18-50
    87.7: Mastodon::MigrationHelpers#cleanup_concurrent_column_type_change mastodon/lib/mastodon/migration_helpers.rb:569-671
    87.6: Mastodon::FeedsCLI#build         mastodon/lib/mastodon/feeds_cli.rb:28-67
    86.8: context(property values)::it#parses out of attachment mastodon/spec/services/activitypub/process_account_service_spec.rb:19-28
    86.2: describe(#trim)::it#cleans up reblog tracking keys mastodon/spec/lib/feed_manager_spec.rb:313-338
    84.7: describe(#unpush)::it#leaves a reblogged status if original was on feed mastodon/spec/lib/feed_manager_spec.rb:345-360
    83.6: it#clears feeds of inactives     mastodon/spec/workers/scheduler/feed_cleanup_scheduler_spec.rb:9-20
    83.5: OStatus::Activity::Creation#process_status mastodon/app/lib/ostatus/activity/creation.rb:26-77
    81.7: describe(with valid params)::it#combines filters on Account mastodon/spec/models/account_filter_spec.rb:38-59
    79.6: OStatus::AtomSerializer#entry    mastodon/app/lib/ostatus/atom_serializer.rb:66-97
    78.6: describe#local                   mastodon/spec/services/unfollow_service_spec.rb:8-17
    78.6: describe(GET #index)::context(when format is html)::it#assigns follows mastodon/spec/controllers/following_accounts_controller_spec.rb:17-23
    78.3: describe#POST #update            mastodon/spec/controllers/api/subscriptions_controller_spec.rb:35-65
    76.9: PostStatusService#call           mastodon/app/services/post_status_service.rb:16-52
    76.7: context(with an oauth token)::describe(PATCH #update)::describe(with valid data)::it#updates account info mastodon/spec/controllers/api/v1/accounts/credentials_controller_spec.rb:46-54
    76.3: Mastodon::MediaCLI#remove        mastodon/lib/mastodon/media_cli.rb:31-57
    76.2: RSS::AccountSerializer#render    mastodon/app/serializers/rss/account_serializer.rb:8-33
    75.8: UserSettingsDecorator#process_update mastodon/app/lib/user_settings_decorator.rb:17-33
    75.2: Admin::DashboardController#index mastodon/app/controllers/admin/dashboard_controller.rb:6-30
    75.2: describe(POST #create)::it#redirects to admin accounts page mastodon/spec/controllers/admin/suspensions_controller_spec.rb:11-17
    73.9: describe##style_classes          mastodon/spec/helpers/stream_entries_helper_spec.rb:82-122
    73.9: describe##microformats_h_class   mastodon/spec/helpers/stream_entries_helper_spec.rb:163-203
    73.3: Paginable#none
    73.0: describe##call                   mastodon/spec/services/suspend_account_service_spec.rb:4-43
    71.5: Mastodon::EmojiCLI#import        mastodon/lib/mastodon/emoji_cli.rb:28-62
    71.3: Mastodon::AccountsCLI#cull       mastodon/lib/mastodon/accounts_cli.rb:218-260
    71.3: describe(GET #index)::it#sets pagination header for next path mastodon/spec/controllers/api/v1/mutes_controller_spec.rb:37-40
    71.3: describe(#pushable?)::it#obeys alert settings mastodon/spec/models/web/push_subscription_spec.rb:8-13
    71.3: describe(reconfirmation_instructions)::it#renders reconfirmation instructions mastodon/spec/mailers/user_mailer_spec.rb:39-46
    71.0: context(with an oauth token)::describe#POST #destroy mastodon/spec/controllers/api/v1/statuses/reblogs_controller_spec.rb:45-62
    70.8: describe(with nsfw action)::context#nsfw_on mastodon/spec/models/form/status_batch_spec.rb:14-20
    70.8: describe(with nsfw action)::context#nsfw_off mastodon/spec/models/form/status_batch_spec.rb:23-29
    70.7: ProcessInteractionService#call   mastodon/app/services/process_interaction_service.rb:10-51
    70.6: Paperclip::LazyThumbnail#make    mastodon/lib/paperclip/lazy_thumbnail.rb:5-17
    70.6: FetchLinkCardService#attempt_oembed mastodon/app/services/fetch_link_card_service.rb:89-125
    70.4: FeedManager#filter_from_home?    mastodon/app/lib/feed_manager.rb:154-181
    70.3: describe(POST #create)::context(when signed in)::describe(when creation succeeds)::it#renders page with success mastodon/spec/controllers/settings/two_factor_authentication/confirmations_controller_spec.rb:58-75
    70.0: ActivityPub::CollectionSerializer#none
    70.0: InitialStateSerializer#meta      mastodon/app/serializers/initial_state_serializer.rb:9-33
    69.3: describe(GET #update)::it#returns http success mastodon/spec/controllers/auth/registrations_controller_spec.rb:43-47
    69.2: describe(DELETE #destroy)::it#redirects to admin accounts page mastodon/spec/controllers/admin/two_factor_authentications_controller_spec.rb:12-17
    68.6: let#sender                       mastodon/spec/workers/activitypub/delivery_worker_spec.rb:8-8
    67.8: describe(.add_status)::it#creates new record when new participants are added mastodon/spec/models/account_conversation_spec.rb:35-48
    67.1: OStatus::AtomSerializer#author   mastodon/app/lib/ostatus/atom_serializer.rb:15-37
    67.1: describe(perform)::describe(with subscribe mode)::it#confirms and updates subscription when challenge matches mastodon/spec/workers/pubsubhubbub/confirmation_worker_spec.rb:15-27
    67.0: OStatus::AtomSerializer#serialize_status_attributes mastodon/app/lib/ostatus/atom_serializer.rb:351-375
    66.5: describe(perform)::context(when the account cannot be updated)::it#returns nil and does not call service when account is nil mastodon/spec/workers/after_remote_follow_worker_spec.rb:20-28
    66.2: describe(.initialize)::context(options are not set)::it#sets default maps mastodon/spec/presenters/account_relationships_presenter_spec.rb:24-30
    66.0: StreamEntriesHelper#account_action_button mastodon/app/helpers/stream_entries_helper.rb:15-34
    65.5: context(with an oauth token)::describe(GET #index)::it#returns http success mastodon/spec/controllers/api/v1/statuses/reblogged_by_accounts_controller_spec.rb:22-25
    65.3: describe(perform)::describe(with subscribe mode)::it#does not update subscription when challenge does not match mastodon/spec/workers/pubsubhubbub/confirmation_worker_spec.rb:30-42
    64.7: describe(non-animated gif non-conversion)::it#sets meta mastodon/spec/models/media_attachment_spec.rb:116-119
    63.3: RSS::TagSerializer#render        mastodon/app/serializers/rss/tag_serializer.rb:9-31
    63.1: describe(.reload_stale_associations!)::context(account_ids are present)::it#reloads associations mastodon/spec/models/notification_spec.rb:122-129
    62.9: describe(.add_status)::it#appends to old record when there is a match mastodon/spec/models/account_conversation_spec.rb:20-32
    62.7: describe(#unpush)::it#leaves a multiply-reblogged status if another reblog was in feed mastodon/spec/lib/feed_manager_spec.rb:377-392
    62.5: describe(DELETE #destroy)::it#unblocks the domain mastodon/spec/controllers/admin/email_domain_blocks_controller_spec.rb:51-56
    62.4: SignatureVerification#signed_request_account mastodon/app/controllers/concerns/signature_verification.rb:16-73
    62.3: create_table#accounts            mastodon/db/schema.rb:58-106
    62.1: StatusesController#set_descendants mastodon/app/controllers/statuses_controller.rb:86-136
    61.9: describe#stream_entries/show.html.haml mastodon/spec/views/stream_entries/show.html.haml_spec.rb:5-86
    61.9: Mastodon::AccountsCLI#create     mastodon/lib/mastodon/accounts_cli.rb:69-104
    61.9: describe(#show)::context(account is not suspended and status is permitted)::it#assigns @descendant_threads for several threads sharing the same descendant mastodon/spec/controllers/statuses_controller_spec.rb:95-103
    61.8: describe##microformats_classes   mastodon/spec/helpers/stream_entries_helper_spec.rb:126-159
    61.2: MediaAttachment#none
    61.1: describe(POST #create)::it#redirects to account path mastodon/spec/controllers/account_unfollow_controller_spec.rb:24-29
    61.1: BatchedRemoveStatusService#call  mastodon/app/services/batched_remove_status_service.rb:12-46
    61.0: it#removes blocking cache after destruction mastodon/spec/models/block_spec.rb:35-45
    60.4: describe(#username)::describe(with a URL value)::it#raises with a route whose action is not show mastodon/spec/lib/webfinger_resource_spec.rb:22-34
    60.3: describe(stream_entries/show.html.haml)::it#has valid author h-card and basic data for a detailed_status mastodon/spec/views/stream_entries/show.html.haml_spec.rb:19-37
    60.1: describe(GET #index)::context(when format is json)::context(with page)::it#returns followers mastodon/spec/controllers/following_accounts_controller_spec.rb:34-37
    60.1: describe(GET #index)::context(when format is json)::context(without page)::it#returns followers mastodon/spec/controllers/following_accounts_controller_spec.rb:44-47
    59.6: describe(PUT #update)::it#updates notifications settings mastodon/spec/controllers/settings/notifications_controller_spec.rb:20-34
    58.9: BackupService#dump_actor!        mastodon/app/services/backup_service.rb:81-95
    58.1: RemoveStatusService#remove_from_remote_affected mastodon/app/services/remove_status_service.rb:62-80
    58.1: context(Remotable module is included)::describe(#hoge_remote_url)::context(scheme is https, parsed_url.host isn't empty, and foo[attribute_name] != url)::context(response.code == 200)::context(response contains headers["content-disposition"])::it#calls send mastodon/spec/models/concerns/remotable_spec.rb:143-153
    56.4: context(with a user context)::describe#GET #show mastodon/spec/controllers/api/v1/timelines/tag_controller_spec.rb:17-25
    56.2: describe(#call)::it#deletes associated records mastodon/spec/services/suspend_account_service_spec.rb:25-37
    56.1: HomeHelper#account_link_to       mastodon/app/helpers/home_helper.rb:10-37
    56.1: let#status                       mastodon/spec/workers/activitypub/distribution_worker_spec.rb:6-6
    55.9: describe(#save_with_optional_media!)::context(with valid properties)::it#unchanges avatar, header, avatar_remote_url, and header_remote_url mastodon/spec/models/account_spec.rb:114-118
    55.7: AccountRelationshipsPresenter#initialize mastodon/app/presenters/account_relationships_presenter.rb:8-28
    55.2: describe(POST #create)::it#blocks the domain when succeeded to save mastodon/spec/controllers/admin/email_domain_blocks_controller_spec.rb:42-46
    55.2: UpdateRemoteProfileService#update_account mastodon/app/services/update_remote_profile_service.rb:24-45
    54.8: StatusRelationshipsPresenter#initialize mastodon/app/presenters/status_relationships_presenter.rb:6-21
    54.8: it#removes blocking cache after creation mastodon/spec/models/block_spec.rb:23-32
    54.1: let#account                      mastodon/spec/workers/activitypub/update_distribution_worker_spec.rb:6-6
    53.0: FeedManager#phrase_filtered?     mastodon/app/lib/feed_manager.rb:200-223
    52.7: describe(GET #index)::it#sets pagination header for previous path mastodon/spec/controllers/api/v1/mutes_controller_spec.rb:43-46
    52.6: it#does not accept tampered reblogs mastodon/spec/services/process_feed_service_spec.rb:106-166
    52.5: TrendingTags::increment_vote!    mastodon/app/models/trending_tags.rb:39-52
    51.8: describe(scopes)::describe(by_domain_accounts)::it#returns accounts grouped by domain sorted by accounts mastodon/spec/models/account_spec.rb:703-712
    51.8: ResolveAccountService#call       mastodon/app/services/resolve_account_service.rb:14-61
    51.5: describe(confirmation_instructions)::it#renders confirmation instructions mastodon/spec/mailers/user_mailer_spec.rb:24-28
    51.3: describe(#perform)::context(as a reply)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:140-147
    51.3: FeedManager#add_to_feed          mastodon/app/lib/feed_manager.rb:229-269
    50.8: describe(GET #show)::it#assigns @domains mastodon/spec/controllers/settings/follower_domains_controller_spec.rb:23-33
    50.7: Admin::ActionLogsHelper#relevant_log_changes mastodon/app/helpers/admin/action_logs_helper.rb:45-58
    50.5: describe(#show)::context(account is not suspended and status is permitted)::it#assigns @descendant_threads for threads with :next_status key if they are hitting the depth limit mastodon/spec/controllers/statuses_controller_spec.rb:117-125
    50.4: describe(.reload_stale_associations!)::context#account_ids are present mastodon/spec/models/notification_spec.rb:100-129
    50.1: context(with an OStatus account)::it#returns a new remote account mastodon/spec/services/resolve_account_service_spec.rb:65-70
    50.0: context#without an oauth token   mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:69-127
    49.7: describe(GET #new)::it#returns http success mastodon/spec/controllers/auth/sessions_controller_spec.rb:13-15
    49.7: describe(GET #index)::context(with token)::context(with read scope and valid resource owner)::it#adds pagination headers if necessary mastodon/spec/controllers/api/v1/favourites_controller_spec.rb:61-67
    49.5: describe(POST #create)::it#returns http success mastodon/spec/controllers/api/v1/lists_controller_spec.rb:37-38
    48.9: Mastodon::AccountsCLI#refresh    mastodon/lib/mastodon/accounts_cli.rb:277-303
    48.9: Mastodon::AccountsCLI#modify     mastodon/lib/mastodon/accounts_cli.rb:130-158
    48.4: Omniauthable#user_params_from_auth mastodon/app/models/concerns/omniauthable.rb:55-69
    48.1: describe(validations)::it#has a valid fabricator mastodon/spec/models/mention_spec.rb:5-7
    48.0: create_table#users               mastodon/db/schema.rb:562-599
    47.7: describe(POST #create)::it#updates the codes and shows them on a view when signed in mastodon/spec/controllers/settings/two_factor_authentication/recovery_codes_controller_spec.rb:9-23
    47.5: shared_examples(namespaces)::it#adds namespaces mastodon/spec/lib/ostatus/atom_serializer_spec.rb:44-54
    47.5: OStatus::AtomSerializer#object   mastodon/app/lib/ostatus/atom_serializer.rb:100-119
    47.3: describe#GET #new                mastodon/spec/controllers/settings/two_factor_authentication/confirmations_controller_spec.rb:23-41
    47.0: describe(#entry)::context(if status is present)::it#returns element whose rendered view triggers creation when processed mastodon/spec/lib/ostatus/atom_serializer_spec.rb:410-429
    47.0: describe(digest)::it#renders the body mastodon/spec/mailers/notification_mailer_spec.rb:122-125
    46.8: describe(POST #create)::describe(when signed in)::it#follows account when found mastodon/spec/controllers/authorize_interactions_controller_spec.rb:96-107
    46.5: describe(.[])::context(rails_initialized? is truthy)::context#Rails.cache does not exists mastodon/spec/models/setting_spec.rb:45-91
    46.2: describe(GTE #show)::it#assigns json mastodon/spec/controllers/shares_controller_spec.rb:15-19
    46.2: describe(GET #index)::it#returns a csv of the exported data when signed in mastodon/spec/controllers/concerns/export_controller_concern_spec.rb:18-26
    46.2: it#gets distributed              mastodon/spec/services/post_status_service_spec.rb:100-111
    46.0: context(with streaming api on different host)::describe(GET #index)::it#redirects to streaming host mastodon/spec/controllers/api/v1/streaming_controller_spec.rb:33-41
    45.7: describe(#author)::it#appends link element for header if present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:239-248
    45.7: describe(#author)::it#has link element for avatar if present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:217-226
    45.7: OStatus::AtomSerializer#feed     mastodon/app/lib/ostatus/atom_serializer.rb:40-63
    45.7: describe(#excluded_from_timeline_account_ids)::it#includes account ids of blockings, blocked_bys and mutes mastodon/spec/models/account_spec.rb:309-319
    45.6: Status::permitted_for            mastodon/app/models/status.rb:337-356
    45.5: describe(POST #create)::context(using password authentication)::context#logging in from the user's page mastodon/spec/controllers/auth/sessions_controller_spec.rb:168-187
    45.4: context(without a user context)::describe(GET #show)::it#returns http unprocessable entity mastodon/spec/controllers/api/v1/timelines/list_controller_spec.rb:48-52
    45.1: describe(#unfollow_salmon)::it#appends id element with unique tag mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1178-1188
    44.9: describe(#unpush)::it#removes a reblogged status if it was only reblogged once mastodon/spec/lib/feed_manager_spec.rb:363-374
    44.6: describe(GET #show)::it#returns JSON when account can be found with alternate domains mastodon/spec/controllers/well_known/webfinger_controller_spec.rb:76-87
    44.4: shared_examples(localized subject)::it#renders subject localized for the locale of the receiver mastodon/spec/mailers/user_mailer_spec.rb:9-12
    44.2: shared_examples(localized subject)::it#renders subject localized for the default locale if the locale of the receiver is unavailable mastodon/spec/mailers/user_mailer_spec.rb:15-17
    44.1: describe(POST #destroy)::context(when signed in)::it#turns off otp requirement with correct code mastodon/spec/controllers/settings/two_factor_authentications_controller_spec.rb:87-98
    43.9: context(with an oauth token)::describe(POST #create)::it#returns http success mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:46-47
    43.7: describe(PUT #update)::it#updates user settings mastodon/spec/controllers/settings/preferences_controller_spec.rb:29-43
    43.7: describe(GET #index)::it#limits according to limit parameter mastodon/spec/controllers/api/v1/mutes_controller_spec.rb:13-16
    43.6: describe(#authorize_follow_request_salmon)::it#appends id element with unique tag mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1327-1336
    43.6: describe(#unfavourite_salmon)::it#appends id element with unique tag mastodon/spec/lib/ostatus/atom_serializer_spec.rb:994-1003
    43.6: describe(#unblock_salmon)::it#appends id element with unique tag mastodon/spec/lib/ostatus/atom_serializer_spec.rb:815-824
    43.6: describe(#block_salmon)::it#appends id element with unique tag mastodon/spec/lib/ostatus/atom_serializer_spec.rb:728-737
    43.4: describe#history                 mastodon/spec/models/report_spec.rb:102-116
    43.3: describe(.remove_status)::it#updates last status to a previous value mastodon/spec/models/account_conversation_spec.rb:53-61
    43.3: Subscription#none
    43.2: describe(#status)::context(with a status url)::it#raises an error if action is not :show mastodon/spec/lib/status_finder_spec.rb:19-24
    43.0: describe(POST #create)::context(when action is delete)::it#removes a status mastodon/spec/controllers/admin/statuses_controller_spec.rb:65-68
    43.0: IdsToBigints#migrate_columns     mastodon/db/migrate/20170918125918_ids_to_bigints.rb:71-108
    42.9: AccountInteractions#none
    42.8: describe(#call)::it#fetches remote accounts for feed types mastodon/spec/services/resolve_url_service_spec.rb:19-33
    42.8: describe(#call)::it#fetches remote statuses for entry types mastodon/spec/services/resolve_url_service_spec.rb:36-50
    42.8: context(without a user context)::describe(GET #show)::it#returns http success mastodon/spec/controllers/api/v1/timelines/tag_controller_spec.rb:34-37
    42.5: describe(GET #index)::context(when signed in)::it#assigns @initial_state_json mastodon/spec/controllers/home_controller_spec.rb:31-38
    42.3: it#sends Salmon slap to previously mentioned users mastodon/spec/services/remove_status_service_spec.rb:45-49
    41.9: ApplicationController#cache_collection mastodon/app/controllers/application_controller.rb:106-123
    41.7: BackupService#build_json!        mastodon/app/services/backup_service.rb:18-35
    41.4: describe(#author)::it#appends link element for an alternative mastodon/spec/lib/ostatus/atom_serializer_spec.rb:206-214
    41.4: ActivityPub::ProcessAccountService#call mastodon/app/services/activitypub/process_account_service.rb:8-41
    41.3: describe(processing a feed)::context(when domain does not reject media)::it#creates posts with media mastodon/spec/services/process_feed_service_spec.rb:63-69
    41.2: describe(GET #index)::it#queries mutes in range according to since_id mastodon/spec/controllers/api/v1/mutes_controller_spec.rb:28-34
    41.2: describe(GET #index)::it#queries blocks in range according to since_id mastodon/spec/controllers/api/v1/blocks_controller_spec.rb:28-34
    41.2: describe(#statuses_count)::it#is decremented when status is removed when account is not preloaded mastodon/spec/models/account_spec.rb:478-484
    41.2: TagsController#show              mastodon/app/controllers/tags_controller.rb:9-33
    41.1: describe(GET #index)::it#queries mutes in range according to max_id mastodon/spec/controllers/api/v1/mutes_controller_spec.rb:19-25
    41.1: describe(GET #index)::it#queries blocks in range according to max_id mastodon/spec/controllers/api/v1/blocks_controller_spec.rb:19-25
    40.9: describe(#reject_follow_request_salmon)::it#appends id element with unique tag mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1396-1405
    40.7: describe(POST #create)::it#creates a filter mastodon/spec/controllers/api/v1/filter_controller_spec.rb:34-40
    40.5: ActivityPub::Activity::Flag#perform mastodon/app/lib/activitypub/activity/flag.rb:4-18
    40.4: Mastodon::Application#none
    40.1: describe(#create)::context(with a valid acct)::context(when webfinger values are wrong)::it#renders new when template is nil mastodon/spec/controllers/remote_follow_controller_spec.rb:45-52
    40.0: describe(when signed in)::describe(feed regeneration)::it#regenerates feed when sign in is older than two weeks mastodon/spec/controllers/concerns/user_tracking_concern_spec.rb:78-83
    40.0: Notification::reload_stale_associations! mastodon/app/models/notification.rb:73-82
    39.9: describe(#entry)::it#appends link element for an alternative mastodon/spec/lib/ostatus/atom_serializer_spec.rb:531-539
    39.8: context#ActivityPub              mastodon/spec/services/reblog_service_spec.rb:26-53
    39.7: describe(GET #index)::context(provided multiple IDs)::it#returns JSON with correct data after change too mastodon/spec/controllers/api/v1/accounts/relationships_controller_spec.rb:80-89
    39.6: describe(#unfollow!)::it#destroys a follow mastodon/spec/models/account_spec.rb:23-29
    39.6: ActivityPub::FetchFeaturedCollectionService#process_items mastodon/app/services/activitypub/fetch_featured_collection_service.rb:25-47
    39.4: describe(scopes)::describe(expiring)::it#returns remote accounts with followers whose subscription expiration date is past or not given mastodon/spec/models/account_spec.rb:680-690
    39.4: Formatter#format                 mastodon/app/lib/formatter.rb:12-40
    39.1: describe(#save_with_optional_media!)::context(with invalid properties)::it#sets default avatar, header, avatar_remote_url, and header_remote_url mastodon/spec/models/account_spec.rb:128-132
    39.1: Status::reload_stale_associations! mastodon/app/models/status.rb:317-333
    39.0: describe(for a silence with reject media)::it#leaves the domains status and attachements, but clears media mastodon/spec/services/block_domain_service_spec.rb:51-55
    39.0: describe(PUT #update)::describe(with an outsome of `silence`)::it#silences the reported account mastodon/spec/controllers/admin/reports_controller_spec.rb:72-80
    38.9: describe(#entry)::context(if status is present)::it#does not append link element for the public collection if status is not publicly visible mastodon/spec/lib/ostatus/atom_serializer_spec.rb:366-376
    38.8: FetchAtomService#process_response mastodon/app/services/fetch_atom_service.rb:37-61
    38.7: describe(.add_status)::it#creates new record when no others exist mastodon/spec/models/account_conversation_spec.rb:9-17
    38.5: describe(#authorize!)::it#calls Account#follow!, MergeWorker.perform_async, and #destroy! mastodon/spec/models/follow_request_spec.rb:9-13
    38.5: describe(rate limiting)::context(throttling is off)::it#does not apply rate limiting mastodon/spec/controllers/concerns/rate_limit_headers_spec.rb:24-29
    38.5: OStatus::AtomSerializer#unfavourite_salmon mastodon/app/lib/ostatus/atom_serializer.rb:301-320
    38.4: context(with an oauth token)::describe#POST #create mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:39-47
    38.4: describe(stream_entries/show.html.haml)::it#has valid opengraph tags mastodon/spec/views/stream_entries/show.html.haml_spec.rb:69-86
    38.3: describe(#create)::context(with a valid acct)::context(when webfinger values are wrong)::it#renders new when redirect url is nil mastodon/spec/controllers/remote_follow_controller_spec.rb:36-42
    38.3: describe(#push_to_home)::context(reblogs)::it#does not save a new reblog of a multiply-reblogged-then-unreblogged status mastodon/spec/lib/feed_manager_spec.rb:242-255
    38.3: HomeController#authenticate_user! mastodon/app/controllers/home_controller.rb:14-39
    38.3: describe(#object)::it#appends link element for an alternative mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1512-1520
    38.2: describe(perform)::context(for a user who receives digests)::it#sends the email mastodon/spec/workers/digest_mailer_worker_spec.rb:10-17
    38.1: context#protocol is :activitypub mastodon/spec/services/fetch_remote_status_service_spec.rb:18-32
    38.0: describe(#perform)::context(with valid host)::it#executes a HTTP request when the first address is private mastodon/spec/lib/request_spec.rb:50-56
    37.9: describe(GET #show)::describe(when signed in)::it#sets resource from url mastodon/spec/controllers/authorize_interactions_controller_spec.rb:42-51
    37.9: describe(GET #show)::describe(when signed in)::it#sets resource from acct uri mastodon/spec/controllers/authorize_interactions_controller_spec.rb:54-63
    37.9: shared_examples(before_action)::context(when account is not suspended and stream_entry is available)::it#assigns instance variables mastodon/spec/controllers/stream_entries_controller_spec.rb:8-15
    37.9: describe(with valid params)::it#combines filters on Report mastodon/spec/models/report_filter_spec.rb:21-29
    37.9: describe(#entry)::it#appends link element for itself mastodon/spec/lib/ostatus/atom_serializer_spec.rb:542-550
    37.9: describe(#entry)::context(if status is present)::it#appends link elements for media attachments mastodon/spec/lib/ostatus/atom_serializer_spec.rb:389-398
    37.9: describe(POST #create)::context(when parameter is valid)::context(when report is resolved)::context(when create_and_unresolve flag is false)::it#creates a report note and does not unresolve report mastodon/spec/controllers/admin/report_notes_controller_spec.rb:60-63
    37.9: describe(POST #create)::context(when parameter is valid)::context(when report is resolved)::context(when create_and_unresolve flag is on)::it#creates a report note and unresolves report mastodon/spec/controllers/admin/report_notes_controller_spec.rb:50-53
    37.9: describe(POST #create)::context(when parameter is valid)::context(when report is unsolved)::context(when create_and_resolve flag is false)::it#creates a report note and does not resolve report mastodon/spec/controllers/admin/report_notes_controller_spec.rb:35-38
    37.9: describe(#object)::it#appends thr:in-reply-to element if it is a reply and thread is not nil mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1523-1532
    37.9: describe(#unfavourite_salmon)::it#appends thr:in-reply-to element for status mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1044-1053
    37.9: describe(#favourite_salmon)::it#appends thr:in-reply-to element for status mastodon/spec/lib/ostatus/atom_serializer_spec.rb:944-953
    37.8: describe(perform)::context(when there are real records)::it#pushes the status onto the home timeline without filter mastodon/spec/workers/feed_insert_worker_spec.rb:42-48
    37.6: describe(perform)::it#raises when request fails mastodon/spec/workers/pubsubhubbub/delivery_worker_spec.rb:25-30
    37.6: OStatus::AtomSerializer#authorize_follow_request_salmon mastodon/app/lib/ostatus/atom_serializer.rb:163-186
    37.6: OStatus::AtomSerializer#reject_follow_request_salmon mastodon/app/lib/ostatus/atom_serializer.rb:189-212
    37.5: describe(#reject_follow_request_salmon)::it#returns element whose rendered view deletes follow request when processed mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1431-1441
    37.5: describe(#authorize_follow_request_salmon)::it#returns element whose rendered view creates follow from follow request when processed mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1368-1378
    37.5: FeedManager#remove_from_feed     mastodon/app/lib/feed_manager.rb:276-303
    37.4: describe(#unpush)::it#sends push updates mastodon/spec/lib/feed_manager_spec.rb:395-404
    37.4: describe(perform)::describe(with unsubscribe mode)::it#confirms and destroys subscription when challenge matches mastodon/spec/workers/pubsubhubbub/confirmation_worker_spec.rb:47-56
    37.2: describe(remote ActivityPub)::let#bob mastodon/spec/services/unfollow_service_spec.rb:43-43
    37.2: describe(remote OStatus)::let#bob mastodon/spec/services/unfollow_service_spec.rb:22-22
    37.2: describe(local)::let#bob         mastodon/spec/services/unfollow_service_spec.rb:9-9
    37.2: describe(#unfollow_salmon)::it#returns element whose rendered view triggers unfollow when processed mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1255-1265
    37.1: describe(validations)::it#is invalid without an account mastodon/spec/models/user_spec.rb:19-22
    37.1: BatchedRemoveStatusService#batch_salmon_slaps mastodon/app/services/batched_remove_status_service.rb:98-104
    37.0: let#alice                        mastodon/spec/services/reblog_service_spec.rb:4-4
    37.0: AddForeignKeysForAccounts#change mastodon/db/migrate/20170604144747_add_foreign_keys_for_accounts.rb:2-40
    36.9: OStatus::AtomSerializer#favourite_salmon mastodon/app/lib/ostatus/atom_serializer.rb:279-298
    36.8: describe(#filter?)::context(for home feed)::context(for irreversibly muted phrases)::it#returns true if phrase is contained mastodon/spec/lib/feed_manager_spec.rb:138-143
    36.8: context(given a relay)::let#json mastodon/spec/lib/activitypub/activity/reject_spec.rb:42-53
    36.5: Mastodon::MigrationHelpers#rename_column_concurrently mastodon/lib/mastodon/migration_helpers.rb:479-537
    36.3: Notification#none
    36.3: describe(#feed)::it#appends link element for the next if it has 20 stream entries mastodon/spec/lib/ostatus/atom_serializer_spec.rb:665-673
    36.3: Rack::Attack#none
    36.2: describe(#call)::describe(with a non-url query)::context(that matches a tag)::it#includes the tag in the results mastodon/spec/services/search_service_spec.rb:77-84
    36.1: Api::Web::PushSubscriptionsController#create mastodon/app/controllers/api/web/push_subscriptions_controller.rb:8-42
    35.8: describe(#show)::context(account is not suspended and status is permitted)::it#assigns @descendant_threads for a thread with several statuses mastodon/spec/controllers/statuses_controller_spec.rb:85-92
    35.7: describe#PUT #update             mastodon/spec/controllers/settings/profiles_controller_spec.rb:18-26
    35.7: describe(GET #show)::describe(when signed in)::it#renders error when account cant be found mastodon/spec/controllers/authorize_interactions_controller_spec.rb:31-39
    35.7: Formatter#rewrite                mastodon/app/lib/formatter.rb:179-199
    35.6: Admin::ReportNotesController#create mastodon/app/controllers/admin/report_notes_controller.rb:7-34
    35.6: FetchLinkCardService#attempt_opengraph mastodon/app/services/fetch_link_card_service.rb:128-155
    35.6: describe(perform)::describe(with unsubscribe mode)::it#does not destroy subscription when challenge does not match mastodon/spec/workers/pubsubhubbub/confirmation_worker_spec.rb:59-68
    35.5: Status#searchable_by             mastodon/app/models/status.rb:109-122
    35.5: describe(POST #create)::context(when parameter is valid)::context(when report is unsolved)::context(when create_and_resolve flag is on)::it#creates a report note and resolves report mastodon/spec/controllers/admin/report_notes_controller_spec.rb:25-28
    35.5: describe(#entry)::context(if status is present)::it#appends link element for the public collection if status is publicly visible mastodon/spec/lib/ostatus/atom_serializer_spec.rb:353-363
    35.4: describe(POST #create)::context(when action is nsfw_off)::it#updates sensitive column mastodon/spec/controllers/admin/statuses_controller_spec.rb:55-58
    35.4: EntityCache#emoji                mastodon/app/lib/entity_cache.rb:14-28
    35.3: RemoveStatusService#call         mastodon/app/services/remove_status_service.rb:6-35
    35.2: describe(animated gif conversion)::it#sets meta mastodon/spec/models/media_attachment_spec.rb:92-94
    35.2: shared_examples(renders :new)::it#renders the new view mastodon/spec/controllers/settings/two_factor_authentication/confirmations_controller_spec.rb:12-19
    35.1: context(with an oauth token)::describe(POST #destroy)::it#returns http success mastodon/spec/controllers/api/v1/statuses/reblogs_controller_spec.rb:53-54
    35.0: describe(perform)::context(when the account cannot be updated)::it#returns nil and does not call service when account is not locked mastodon/spec/workers/after_remote_follow_worker_spec.rb:31-39
    35.0: describe(perform)::context(when the account cannot be updated)::it#returns nil and does not call service when account is locked mastodon/spec/workers/after_remote_follow_request_worker_spec.rb:31-39
    35.0: describe(.as_public_timeline)::describe(with an account passed in)::context(with language preferences)::it#excludes statuses in languages not allowed by the account user mastodon/spec/models/status_spec.rb:541-551
    35.0: context(Remotable module is included)::describe(#reset_hoge!)::context(if url.blank?)::it#returns nil, without clearing foo[attribute_name] and calling #hoge_remote_url= mastodon/spec/models/concerns/remotable_spec.rb:200-205
    35.0: BatchedRemoveStatusService#unpush_from_public_timelines mastodon/app/services/batched_remove_status_service.rb:77-93
    35.0: describe##object_type            mastodon/spec/models/stream_entry_spec.rb:12-55
    34.9: context(Remotable module is included)::describe(#hoge_remote_url)::context(scheme is https, parsed_url.host isn't empty, and foo[attribute_name] != url)::context(response.code == 200)::context(if has_attribute?)::it#calls foo[attribute_name] = url mastodon/spec/models/concerns/remotable_spec.rb:158-161
    34.9: context(Remotable module is included)::describe(#hoge_remote_url)::context(scheme is https, parsed_url.host isn't empty, and foo[attribute_name] != url)::context(response.code == 200)::context(unless has_attribute?)::it#calls not foo[attribute_name] = url mastodon/spec/models/concerns/remotable_spec.rb:166-170
    34.9: describe(POST #destroy)::context(when signed in)::it#does not turn off otp if code is incorrect mastodon/spec/controllers/settings/two_factor_authentications_controller_spec.rb:101-111
    34.9: Attachmentable#check_image_dimensions mastodon/app/models/concerns/attachmentable.rb:27-36
    34.9: shared_examples(ScopedSettings)::it#can update settings with [] and can read with []= mastodon/spec/support/examples/lib/settings/scoped_settings.rb:49-63
    34.7: describe(#feed)::it#appends link element for an alternative mastodon/spec/lib/ostatus/atom_serializer_spec.rb:645-652
    34.7: describe(#create)::context(with an invalid acct)::it#renders new with error when goldfinger fails mastodon/spec/controllers/remote_follow_controller_spec.rb:83-88
    34.7: describe(#create)::context(with an invalid acct)::itrenders new when occur HTTP::ConnectionError mastodon/spec/controllers/remote_follow_controller_spec.rb:91-96
    34.7: describe(#push_to_home)::context(reblogs)::it#saves a new reblog of a long-ago-reblogged status mastodon/spec/lib/feed_manager_spec.rb:258-272
    34.5: context(Remotable module is included)::describe(#hoge_remote_url)::context(scheme is https, parsed_url.host isn't empty, and foo[attribute_name] != url)::context(response.code != 200)::it#calls not send mastodon/spec/models/concerns/remotable_spec.rb:129-132
    34.5: CreateDoorkeeperTables#change    mastodon/db/migrate/20160306172223_create_doorkeeper_tables.rb:2-49
    34.5: describe(POST #create)::context(when user is an admin)::it#succeeds to create a invite mastodon/spec/controllers/invites_controller_spec.rb:45-48
    34.5: describe(GET #index)::it#renders instances mastodon/spec/controllers/admin/instances_controller_spec.rb:18-29
    34.4: ActivityPub::Activity::Create#process_attachments mastodon/app/lib/activitypub/activity/create.rb:136-159
    34.4: describe(#follow_request_salmon)::it#returns element whose rendered view triggers follow request when processed mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1298-1307
    34.3: Api::V1::StatusesController#create mastodon/app/controllers/api/v1/statuses_controller.rb:46-58
    34.2: describe(#favourite_salmon)::it#returns element whose rendered view triggers favourite when processed mastodon/spec/lib/ostatus/atom_serializer_spec.rb:968-976
    34.2: describe(when signed in)::describe#feed regeneration mastodon/spec/controllers/concerns/user_tracking_concern_spec.rb:46-83
    34.2: context(with an oauth token)::describe(GET #show)::it#returns http success mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:19-21
    34.1: describe(to_csv)::it#returns a csv of the blocked accounts mastodon/spec/models/export_spec.rb:10-17
    34.1: describe(to_csv)::it#returns a csv of the muted accounts mastodon/spec/models/export_spec.rb:20-27
    34.1: describe(to_csv)::it#returns a csv of the following accounts mastodon/spec/models/export_spec.rb:30-37
    34.1: StatusPinValidator#validate      mastodon/app/validators/status_pin_validator.rb:4-9
    34.1: FollowerAccountsController#collection_presenter mastodon/app/controllers/follower_accounts_controller.rb:36-53
    34.1: FollowingAccountsController#collection_presenter mastodon/app/controllers/following_accounts_controller.rb:36-53
    34.1: describe(GET #index)::it#renders index page mastodon/spec/controllers/admin/invites_controller_spec.rb:17-19
    33.9: describe(recent)::it#sorts so that more recent follows comes earlier mastodon/spec/models/follow_spec.rb:43-51
    33.7: context(with an ActivityPub account)::context(with multiple types)::it#returns new remote account mastodon/spec/services/resolve_account_service_spec.rb:113-119
    33.6: describe(POST #create)::context(when action is nsfw_on)::it#updates sensitive column mastodon/spec/controllers/admin/statuses_controller_spec.rb:44-47
    33.6: User::pam_get_user               mastodon/app/models/user.rb:284-300
    33.6: describe(#author)::it#includes username mastodon/spec/lib/ostatus/atom_serializer_spec.rb:303-311
    33.6: Pubsubhubbub::SubscribeWorker#none
    33.5: describe(PUT #update)::it#updates the user profile mastodon/spec/controllers/settings/profiles_controller_spec.rb:19-26
    33.5: describe(#call)::describe(with a non-url query)::context(that matches an account)::it#includes the account in the results mastodon/spec/services/search_service_spec.rb:64-72
    33.4: describe(#reblogs_count)::it#does not fail when original is deleted before reblog mastodon/spec/models/status_spec.rb:186-190
    33.4: describe(perform)::context(for a user who does not receive digests)::it#does not send the email mastodon/spec/workers/digest_mailer_worker_spec.rb:22-28
    33.1: describe(GET #index)::it#returns accounts mastodon/spec/controllers/api/v1/suggestions_controller_spec.rb:28-33
    33.1: ReblogService#create_notification mastodon/app/services/reblog_service.rb:34-43
    33.0: ActivityPub::Activity::Follow#perform mastodon/app/lib/activitypub/activity/follow.rb:4-26
    33.0: describe(DELETE #destroy)::it#returns http success mastodon/spec/controllers/api/v1/lists_controller_spec.rb:70-71
    33.0: Mastodon::AccountsCLI#none
    32.9: describe(#filter?)::context(for home feed)::it#returns true for reblog by followee of blocked account mastodon/spec/lib/feed_manager_spec.rb:42-47
    32.9: describe(#filter?)::context(for home feed)::it#returns true for reblog by followee of muted account mastodon/spec/lib/feed_manager_spec.rb:50-55
    32.9: describe(#filter?)::context(for home feed)::it#returns true for reblog by followee of someone who is blocking recipient mastodon/spec/lib/feed_manager_spec.rb:58-63
    32.9: describe(#filter?)::context(for home feed)::it#returns false for reply by followee to another followee mastodon/spec/lib/feed_manager_spec.rb:73-78
    32.8: Feed#from_redis                  mastodon/app/models/feed.rb:15-24
    32.8: main#setup_redis_env_url         mastodon/lib/mastodon/redis_config.rb:3-17
    32.8: context(with signature header)::context#with request older than a day mastodon/spec/controllers/concerns/signature_verification_spec.rb:76-95
    32.7: describe(#call)::context(with Video object)::it#creates status mastodon/spec/services/activitypub/fetch_remote_status_service_spec.rb:65-70
    32.7: describe(#call)::describe(with an url query)::context(that finds an account)::it#includes the account in the results mastodon/spec/services/search_service_spec.rb:38-45
    32.7: describe(#call)::describe(with an url query)::context(that finds a status)::it#includes the status in the results mastodon/spec/services/search_service_spec.rb:50-57
    32.7: shared_examples(before_action)::context(when account is not suspended and stream_entry is available)::it#sets Link headers mastodon/spec/controllers/stream_entries_controller_spec.rb:18-24
    32.6: describe(POST #create)::it#succeeds to create a invite mastodon/spec/controllers/admin/invites_controller_spec.rb:26-29
    32.6: TrendingTags::get                mastodon/app/models/trending_tags.rb:18-22
    32.6: describe(PUT #update)::it#updates the user record mastodon/spec/controllers/settings/preferences_controller_spec.rb:20-26
    32.5: describe(#call)::context(when actor differs from sender)::it#processes payload with actor if valid signature exists mastodon/spec/services/activitypub/process_collection_service_spec.rb:36-42
    32.5: context(Remotable module is included)::describe(#reset_hoge!)::context(unless url.blank?)::it#clears foo[attribute_name] and calls #hoge_remote_url= mastodon/spec/models/concerns/remotable_spec.rb:210-214
    32.5: describe(GET #index)::context(provided multiple IDs)::it#returns JSON with correct data on cached requests too mastodon/spec/controllers/api/v1/accounts/relationships_controller_spec.rb:70-77
    32.5: describe(.remove_status)::it#removes the record if no other statuses are referenced mastodon/spec/models/account_conversation_spec.rb:64-69
    32.5: FollowerAccountsController#index mastodon/app/controllers/follower_accounts_controller.rb:6-22
    32.5: FollowingAccountsController#index mastodon/app/controllers/following_accounts_controller.rb:6-22
    32.4: describe(#follow_salmon)::it#returns element whose rendered view triggers follow when processed mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1147-1156
    32.4: describe(#block_salmon)::it#returns element whose rendered view triggers block when processed mastodon/spec/lib/ostatus/atom_serializer_spec.rb:788-797
    32.3: describe(#show)::context(account is not suspended and status is permitted)::it#assigns @max_descendant_thread_id for the last thread if it is hitting the status limit mastodon/spec/controllers/statuses_controller_spec.rb:106-114
    32.3: Admin::ActionLogsHelper#linkable_log_target mastodon/app/helpers/admin/action_logs_helper.rb:12-25
    32.3: describe(reset_password_instructions)::it#renders reset password instructions mastodon/spec/mailers/user_mailer_spec.rb:53-56
    32.2: describe(PUT #update)::describe(with an outcome of `resolve`)::it#resolves the report mastodon/spec/controllers/admin/reports_controller_spec.rb:60-67
    32.1: describe(#get)::context(when feed is being generated)::it#gets statuses with ids in the range from database mastodon/spec/models/home_feed_spec.rb:37-41
    32.0: describe(POST #update)::context(with hub.mode=subscribe)::it#creates a subscription mastodon/spec/controllers/api/push_controller_spec.rb:6-26
    32.0: describe(POST #update)::context(with hub.mode=unsubscribe)::it#unsubscribes the account mastodon/spec/controllers/api/push_controller_spec.rb:31-46
    32.0: FetchLinkCardService#process_url mastodon/app/services/fetch_link_card_service.rb:39-61
    31.9: describe(#call)::context(with a valid account)::it#returns a valid topic status and does run confirm when there is a subscription mastodon/spec/services/pubsubhubbub/unsubscribe_service_spec.rb:28-34
    31.9: describe(processing a feed)::context(when domain is set to reject media)::it#creates posts with remote-only media mastodon/spec/services/process_feed_service_spec.rb:96-101
    31.9: it#sends PuSH update to PuSH subscribers mastodon/spec/services/remove_status_service_spec.rb:35-38
    31.9: describe(perform)::context(when there are real records)::it#skips the push when there is a filter mastodon/spec/workers/feed_insert_worker_spec.rb:33-39
    31.9: context(Remotable module is included)::describe(#hoge_remote_url)::context(parsed_url.host is empty)::it#makes no request mastodon/spec/models/concerns/remotable_spec.rb:90-96
    31.5: shared_examples(status attributes)::it#appends link elements for mentioned accounts mastodon/spec/lib/ostatus/atom_serializer_spec.rb:91-104
    31.5: describe(#call)::describe(with a blank query)::it#returns empty results without searching mastodon/spec/services/search_service_spec.rb:10-17
    31.4: Auth::OmniauthCallbacksController::provides_callback_for mastodon/app/controllers/auth/omniauth_callbacks_controller.rb:6-17
    31.4: AccountFilter#scope_for          mastodon/app/models/account_filter.rb:22-51
    31.3: describe(call)::it#fills a user timeline with statuses mastodon/spec/services/precompute_feed_service_spec.rb:10-16
    31.3: Devise::Strategies::LdapAuthenticatable#authenticate! mastodon/lib/devise/ldap_authenticatable.rb:9-33
    31.3: describe(#entry)::it#appends activity:object element with target if present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:515-522
    31.3: describe(validations)::it#does not allow pins above the max mastodon/spec/models/status_pin_spec.rb:42-54
    31.3: describe(validations)::it#allows pins above the max for remote accounts mastodon/spec/models/status_pin_spec.rb:57-69
    31.2: create_table#statuses            mastodon/db/schema.rb:498-521
    31.2: describe(GET #show)::context(atom)::shared_examples(responsed streams)::it#assigns @entries mastodon/spec/controllers/accounts_controller_spec.rb:56-60
    31.2: describe(perform)::it#does not attempt to deliver when domain blocked mastodon/spec/workers/pubsubhubbub/delivery_worker_spec.rb:16-22
    31.1: describe(#filter?)::context(for home feed)::context(for irreversibly muted phrases)::it#considers word boundaries when matching mastodon/spec/lib/feed_manager_spec.rb:131-135
    31.1: describe(#filter?)::context(for home feed)::context(for irreversibly muted phrases)::it#matches substrings if whole_word is false mastodon/spec/lib/feed_manager_spec.rb:146-150
    31.1: ActivityPub::CaseTransform::camel_lower mastodon/app/lib/activitypub/case_transform.rb:9-20
    31.1: describe(#filter?)::context(for home feed)::it#returns true for status by followee mentioning blocked account mastodon/spec/lib/feed_manager_spec.rb:115-119
    31.1: describe(active_nav_class)::it#returns active when on a current page mastodon/spec/helpers/application_helper_spec.rb:12-17
    31.1: describe(#filter?)::context(for home feed)::it#returns true for reblog of a personally blocked domain mastodon/spec/lib/feed_manager_spec.rb:122-127
    31.0: describe(GET #index)::it#returns http success with resolved filter mastodon/spec/controllers/admin/reports_controller_spec.rb:24-34
    31.0: describe(GET #index)::it#shows apps mastodon/spec/controllers/settings/applications_controller_spec.rb:16-20
    30.9: describe(#entry)::it#appends thr:in-reply-to element if threaded mastodon/spec/lib/ostatus/atom_serializer_spec.rb:553-560
    30.9: ActivityPub::LinkedDataSignature#verify_account! mastodon/app/lib/activitypub/linked_data_signature.rb:12-31
    30.9: context#OStatus                  mastodon/spec/services/reblog_service_spec.rb:6-22
    30.9: describe(The account show page)::it#has valid opengraph tags mastodon/spec/requests/account_show_page_spec.rb:17-26
    30.9: describe(processing a feed)::context(when domain does not reject media)::it#updates remote user's account information mastodon/spec/services/process_feed_service_spec.rb:24-28
    30.9: describe(when signed in)::describe(feed regeneration)::it#sets a regeneration marker while regenerating mastodon/spec/controllers/concerns/user_tracking_concern_spec.rb:63-69
    30.9: context(without an oauth token)::context(with a public status)::describe(GET #index)::it#returns http success mastodon/spec/controllers/api/v1/statuses/reblogged_by_accounts_controller_spec.rb:58-60
    30.9: context(without an oauth token)::context(with a private status)::describe(GET #index)::it#returns http unautharized mastodon/spec/controllers/api/v1/statuses/reblogged_by_accounts_controller_spec.rb:43-45
    30.7: describe(#call)::context(with a valid account and callback)::it#returns success status and confirms subscription mastodon/spec/services/pubsubhubbub/subscribe_service_spec.rb:41-47
    30.7: describe(#new)::it#populates the remote follow with session data when session exists mastodon/spec/controllers/remote_follow_controller_spec.rb:18-25
    30.7: describe(GET #show)::context(html)::shared_examples(responsed statuses)::it#assigns @statuses mastodon/spec/controllers/accounts_controller_spec.rb:102-106
    30.7: describe(GET #show)::context(html)::shared_examples(responsed statuses)::it#assigns @pinned_statuses mastodon/spec/controllers/accounts_controller_spec.rb:94-98
    30.6: FixAccountsUniqueIndex#up        mastodon/db/migrate/20180528141303_fix_accounts_unique_index.rb:17-41
    30.6: Admin::ReportsController#process_report mastodon/app/controllers/admin/reports_controller.rb:33-58
    30.6: describe(GET #index)::it#returns http success with no filters mastodon/spec/controllers/admin/reports_controller_spec.rb:12-21
    30.6: describe(#feed)::it#appends link element for itself mastodon/spec/lib/ostatus/atom_serializer_spec.rb:655-662
    30.6: Mastodon::Snowflake::ensure_id_sequences_exist mastodon/lib/mastodon/snowflake.rb:112-131
    30.5: ActivityPub::ProcessAccountService#process_emoji mastodon/app/services/activitypub/process_account_service.rb:225-239
    30.5: ActivityPub::Activity::Create#process_emoji mastodon/app/lib/activitypub/activity/create.rb:119-133
    30.5: Scheduler::FeedCleanupScheduler#clean_feeds! mastodon/app/workers/scheduler/feed_cleanup_scheduler.rb:23-43
    30.5: describe(PATCH #update)::shared_examples(redirects back to followers page)::it#redirects back to followers page mastodon/spec/controllers/settings/follower_domains_controller_spec.rb:53-60
    30.5: CustomEmoji#none
    30.5: FanOutOnWriteService#call        mastodon/app/services/fan_out_on_write_service.rb:6-26
    30.4: describe(call)::it#filters statuses mastodon/spec/services/precompute_feed_service_spec.rb:24-33
    30.4: shared_examples(status attributes)::it#appends link elements for emojis mastodon/spec/lib/ostatus/atom_serializer_spec.rb:107-115
    30.4: it#processes one remote account at a time using locks mastodon/spec/services/resolve_account_service_spec.rb:126-146
    30.4: FetchLinkCardService#call        mastodon/app/services/fetch_link_card_service.rb:14-35
    30.3: describe(#follow!)::it#creates a follow mastodon/spec/models/account_spec.rb:9-14
    30.3: describe#Error handling          mastodon/spec/controllers/api/base_controller_spec.rb:30-50
    30.3: describe(processing a feed)::context(when domain does not reject media)::it#does not create statuses for follows mastodon/spec/services/process_feed_service_spec.rb:51-55
    30.3: Mastodon::AccountsCLI#rotate     mastodon/lib/mastodon/accounts_cli.rb:21-44
    30.3: ActivityPub::FetchRemoteStatusService#call mastodon/app/services/activitypub/fetch_remote_status_service.rb:7-23
    30.3: FollowService#call               mastodon/app/services/follow_service.rb:10-36
    30.2: describe(perform)::it#calls the precompute feed service for the account mastodon/spec/workers/regeneration_worker_spec.rb:11-17
    30.2: describe(perform)::it#returns true for non-existent domain block mastodon/spec/workers/domain_block_worker_spec.rb:11-17
    30.1: shared_examples(before_action)::context(when it is hidden and it is not permitted)::itraises ActiveRecord::RecordNotFound mastodon/spec/controllers/stream_entries_controller_spec.rb:52-61
    30.1: context(Remotable module is included)::describe(#hoge_remote_url)::context(parsed_url.host is nil)::it#makes no request mastodon/spec/models/concerns/remotable_spec.rb:101-107
    30.0: describe(with public status)::it#delivers payload to all subscriptions mastodon/spec/workers/pubsubhubbub/distribution_worker_spec.rb:18-21
    29.9: describe#.as_home_timeline       mastodon/spec/models/status_spec.rb:299-338
    29.9: describe#.as_direct_timeline     mastodon/spec/models/status_spec.rb:342-388
    29.9: describe#processing a feed       mastodon/spec/services/process_feed_service_spec.rb:6-101
    29.8: describe(#get)::context(when feed is generated)::it#gets statuses with ids in the range from redis mastodon/spec/models/home_feed_spec.rb:24-28
    29.8: describe(GET #index)::it#renders domain blocks mastodon/spec/controllers/admin/domain_blocks_controller_spec.rb:18-26
    29.8: describe(GET #index)::it#renders email blacks mastodon/spec/controllers/admin/email_domain_blocks_controller_spec.rb:20-28
    29.8: describe(when signed in)::it#does not track when there is a recent sign in mastodon/spec/controllers/concerns/user_tracking_concern_spec.rb:21-27
    29.7: describe(#perform)::context(with mentions)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:168-172
    29.7: shared_examples(ScopedSettings)::describe(all_as_records)::it#returns records merged with default values except hashes mastodon/spec/support/examples/lib/settings/scoped_settings.rb:19-29
    29.7: describe#follow request slap from known remote user identified by email mastodon/spec/services/process_interaction_service_spec.rb:64-88
    29.7: describe(.call)::describe(when there is a local domain)::it#returns exact match first mastodon/spec/services/account_search_service_spec.rb:111-119
    29.7: describe(#unfavourite_salmon)::it#appends activity:object element with status mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1034-1041
    29.7: describe(#favourite_salmon)::it#appends activity:object element with status mastodon/spec/lib/ostatus/atom_serializer_spec.rb:934-941
    29.6: FixAccountsUniqueIndex#deduplicate_account! mastodon/db/migrate/20180528141303_fix_accounts_unique_index.rb:50-69
    29.5: describe(.as_public_timeline)::describe(with an account passed in)::context(with language preferences)::it#includes all languages when account does not have a user mastodon/spec/models/status_spec.rb:566-573
    29.4: it#processes mentions            mastodon/spec/services/post_status_service_spec.rb:76-85
    29.4: it#processes hashtags            mastodon/spec/services/post_status_service_spec.rb:88-97
    29.4: it#does not allow attaching more than 4 files mastodon/spec/services/post_status_service_spec.rb:137-155
    29.4: describe(#unfavourite_salmon)::it#includes description mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1056-1065
    29.4: describe(#favourite_salmon)::it#includes description mastodon/spec/lib/ostatus/atom_serializer_spec.rb:956-965
    29.3: OStatus::Activity::Creation#save_media mastodon/app/lib/ostatus/activity/creation.rb:150-175
    29.3: describe(POST #resernd)::context(when email is not confirmed)::it#resends confirmation mail mastodon/spec/controllers/admin/confirmations_controller_spec.rb:47-50
    29.2: describe(.advanced_search_for)::it#ranks followed accounts higher mastodon/spec/models/account_spec.rb:438-446
    29.1: describe(#new)::it#returns success when session is empty mastodon/spec/controllers/remote_follow_controller_spec.rb:9-15
    29.1: it#removes the secret and resets expiration on account mastodon/spec/services/unsubscribe_service_spec.rb:7-13
    29.1: describe(GET #show)::context(when not signed in)::it#redirects mastodon/spec/controllers/settings/two_factor_authentications_controller_spec.rb:36-38
    29.1: describe(GET #show)::shared_examples#responses mastodon/spec/controllers/accounts_controller_spec.rb:27-47
    29.1: Auth::SessionsController#find_user mastodon/app/controllers/auth/sessions_controller.rb:39-48
    29.0: describe(GET #show)::context(when signed in)::it#renders export mastodon/spec/controllers/settings/exports_controller_spec.rb:14-20
    28.9: Setting::[]                      mastodon/app/models/setting.rb:23-38
    28.9: AccountConversation::paginate_by_max_id mastodon/app/models/account_conversation.rb:51-55
    28.9: describe(GET #index)::it#renders subscriptions mastodon/spec/controllers/admin/subscriptions_controller_spec.rb:19-29
    28.8: describe(#perform)::it#creates a report mastodon/spec/lib/activitypub/activity/flag_spec.rb:29-34
    28.7: describe(#call)::describe(with an url query)::context(that does not find anything)::it#returns the empty results mastodon/spec/services/search_service_spec.rb:27-33
    28.7: describe(PUT #update)::context(when user is sign in)::context(when migration account is changed)::it#updates moved to account mastodon/spec/controllers/settings/migrations_controller_spec.rb:62-64
    28.6: describe(#unfavourite_salmon)::it#returns element whose rendered view triggers unfavourite when processed mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1068-1076
    28.6: ActivityPub::NoteSerializer#in_reply_to mastodon/app/serializers/activitypub/note_serializer.rb:40-47
    28.5: describe(POST #create)::describe(when signed in)::it#shows error when account not found mastodon/spec/controllers/authorize_interactions_controller_spec.rb:85-93
    28.5: describe(#mute!)::context(Mute already exists)::context(mute.hide_notifications is true)::context(arg :notifications is false)::it#returns Mute, and updates mute.hide_notifications false mastodon/spec/models/concerns/account_interactions_spec.rb:173-176
    28.5: describe(#mute!)::context(Mute already exists)::context(mute.hide_notifications is false)::context(arg :notifications is nil)::it#returns Mute, and updates mute.hide_notifications true mastodon/spec/models/concerns/account_interactions_spec.rb:197-200
    28.5: describe(#mute!)::context(Mute already exists)::context(mute.hide_notifications is false)::context(arg :notifications is true)::it#returns Mute, and updates mute.hide_notifications true mastodon/spec/models/concerns/account_interactions_spec.rb:217-220
    28.5: ProcessMentionsService#call      mastodon/app/services/process_mentions_service.rb:10-37
    28.5: context(with a user context)::describe(GET #show with local only)::it#returns http success mastodon/spec/controllers/api/v1/timelines/public_controller_spec.rb:35-39
    28.4: describe(.as_public_timeline)::context(with a local_only option set)::context(with a viewer)::it#is not affected by personal domain blocks mastodon/spec/models/status_spec.rb:491-494
    28.3: context(Remotable module is included)::describe(#hoge_remote_url)::context(Addressable::URI::InvalidURIError raised)::it#makes no request mastodon/spec/models/concerns/remotable_spec.rb:71-76
    28.3: shared_examples(ScopedSettings)::describe([])::it#inherits default settings mastodon/spec/support/examples/lib/settings/scoped_settings.rb:5-12
    28.3: describe(#call)::context#response success mastodon/spec/services/fetch_atom_service_spec.rb:43-85
    28.2: describe(#track_failure!)::it#marks URL as unavailable after 7 days of being called mastodon/spec/lib/delivery_failure_tracker_spec.rb:24-29
    28.2: describe(PUT #update)::describe(with an outsome of `reopen`)::it#reopens the report mastodon/spec/controllers/admin/reports_controller_spec.rb:85-92
    28.2: BackupService#dump_likes!        mastodon/app/services/backup_service.rb:99-114
    28.2: describe(When signed in as an admin)::describe(PUT #update)::describe(for a record that doesnt exist)::it#cannot create a setting value for a non-admin key mastodon/spec/controllers/admin/settings_controller_spec.rb:31-37
    28.2: describe(When signed in as an admin)::describe(PUT #update)::describe(for a record that doesnt exist)::it#creates a settings value that didnt exist before for eligible key mastodon/spec/controllers/admin/settings_controller_spec.rb:40-46
    28.1: describe#expected_headers        mastodon/spec/workers/pubsubhubbub/delivery_worker_spec.rb:56-64
    28.1: describe(perform)::context(when there are no records)::it#skips push with missing status mastodon/spec/workers/feed_insert_worker_spec.rb:13-19
    28.1: describe(perform)::context(when there are no records)::it#skips push with missing account mastodon/spec/workers/feed_insert_worker_spec.rb:22-28
    28.0: describe(GET #index)::context(when user is a staff)::it#renders index page mastodon/spec/controllers/invites_controller_spec.rb:23-27
    28.0: describe(for a suspension)::it#removes the remote accounts's statuses and media attachments mastodon/spec/services/block_domain_service_spec.rb:31-35
    27.9: Extractor#extract_hashtags_with_indices mastodon/app/lib/extractor.rb:35-58
    27.9: OStatus::AtomSerializer#unfollow_salmon mastodon/app/lib/ostatus/atom_serializer.rb:215-234
    27.8: describe(PATCH #update)::it#redirects to about page mastodon/spec/controllers/api/web/settings_controller_spec.rb:11-17
    27.7: describe(#perform)::context(with emojis)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:329-333
    27.7: describe(#perform)::context(with hashtags)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:282-286
    27.7: describe(#perform)::context(with media attachments with focal points)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:237-241
    27.7: describe(#perform)::context(with media attachments)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:212-216
    27.7: describe(POST #create)::context(when signed in)::describe#when creation fails mastodon/spec/controllers/settings/two_factor_authentication/confirmations_controller_spec.rb:79-95
    27.7: describe(PATCH #update)::context(when select parameter is provided)::it#soft-blocks followers from selected domains mastodon/spec/controllers/settings/follower_domains_controller_spec.rb:72-78
    27.7: describe(#filter?)::context(for home feed)::it#returns false for reblog by followee mastodon/spec/lib/feed_manager_spec.rb:35-39
    27.7: describe(#filter?)::context(for home feed)::it#returns true for reblog from account with reblogs disabled mastodon/spec/lib/feed_manager_spec.rb:66-70
    27.7: describe(#filter?)::context(for home feed)::it#returns false for reply by followee to recipient mastodon/spec/lib/feed_manager_spec.rb:81-85
    27.7: describe(#filter?)::context(for home feed)::it#returns false for reply by followee to self mastodon/spec/lib/feed_manager_spec.rb:88-92
    27.7: describe(#filter?)::context(for home feed)::it#returns true for reply by followee to non-followed account mastodon/spec/lib/feed_manager_spec.rb:95-99
    27.7: describe(#filter?)::context(for home feed)::it#returns true for the second reply by followee to a non-federated status mastodon/spec/lib/feed_manager_spec.rb:102-106
    27.7: describe(#filter?)::context(for mentions feed)::it#returns true for status that replies to a blocked account mastodon/spec/lib/feed_manager_spec.rb:162-166
    27.7: StreamEntriesController#show     mastodon/app/controllers/stream_entries_controller.rb:15-28
    27.6: describe(#push_to_home)::context(reblogs)::it#does not save a new reblog of a recently-reblogged status mastodon/spec/lib/feed_manager_spec.rb:230-239
    27.6: describe(#follow_salmon)::it#includes description mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1136-1144
    27.5: context(Remotable module is included)::describe(#hoge_remote_url)::context(foo[attribute_name] == url)::it#makes no request mastodon/spec/models/concerns/remotable_spec.rb:112-116
    27.5: describe(#filter?)::context(for mentions feed)::it#returns false for status by followed silenced account mastodon/spec/lib/feed_manager_spec.rb:175-179
    27.5: describe(POST #create)::context(when signed in)::describe(when creation succeeds)::it#updates user secret mastodon/spec/controllers/settings/two_factor_authentications_controller_spec.rb:59-64
    27.5: UpdateRemoteProfileService#call  mastodon/app/services/update_remote_profile_service.rb:6-20
    27.3: describe(POST #resernd)::context(when email is confirmed)::it#does not resend confirmation mail mastodon/spec/controllers/admin/confirmations_controller_spec.rb:57-60
    27.3: describe(POST #create)::context(when parameters are valid)::it#successfully creates a note mastodon/spec/controllers/admin/account_moderation_notes_controller_spec.rb:19-21
    27.2: describe(#call)::context#when WebFinger presents different domain than URI mastodon/spec/services/activitypub/fetch_remote_account_service_spec.rb:90-119
    27.2: ActivityPub::FetchRemoteAccountService#verified_webfinger? mastodon/app/services/activitypub/fetch_remote_account_service.rb:32-47
    27.2: ActivityPub::FetchRemoteKeyService#call mastodon/app/services/activitypub/fetch_remote_key_service.rb:7-30
    27.2: Api::V1::Instances::ActivityController#activity mastodon/app/controllers/api/v1/instances/activity_controller.rb:14-30
    27.1: describe(GET #index)::context(provided only one ID)::it#returns JSON with correct data mastodon/spec/controllers/api/v1/accounts/relationships_controller_spec.rb:31-36
    27.1: describe(#object)::it#appends ostatus:conversation element if conversation_id is not nil mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1550-1557
    27.1: describe(#push_to_home)::ittrims timelines if they will have more than FeedManager::MAX_ITEMS mastodon/spec/lib/feed_manager_spec.rb:185-194
    27.1: describe(#call)::it#returns nil when there is no atom url mastodon/spec/services/resolve_url_service_spec.rb:9-16
    27.1: BackupService#build_archive!     mastodon/app/services/backup_service.rb:39-61
    27.0: FetchLinkCardService#parse_urls  mastodon/app/services/fetch_link_card_service.rb:67-76
    26.9: ActivityPub::TagManager#uri_to_resource mastodon/app/lib/activitypub/tag_manager.rb:103-119
    26.9: describe(call)::context(with retroactive)::it#unsilences accounts and removes block mastodon/spec/services/unblock_domain_service_spec.rb:23-29
    26.9: describe(call)::context(with retroactive)::it#unsuspends accounts and removes block mastodon/spec/services/unblock_domain_service_spec.rb:32-38
    26.9: describe(#call)::context(when actor differs from sender)::it#processes payload with sender if no signature exists mastodon/spec/services/activitypub/process_collection_service_spec.rb:29-33
    26.9: OStatus::AtomSerializer#block_salmon mastodon/app/lib/ostatus/atom_serializer.rb:237-255
    26.9: OStatus::AtomSerializer#unblock_salmon mastodon/app/lib/ostatus/atom_serializer.rb:258-276
    26.9: describe(#perform)::context(with valid host)::it#sets headers mastodon/spec/lib/request_spec.rb:59-61
    26.8: it#Uses filter_link_to to create filter links mastodon/spec/helpers/admin/filter_helper_spec.rb:4-12
    26.8: describe(perform)::it#updates subscriptions when delivery succeeds mastodon/spec/workers/pubsubhubbub/delivery_worker_spec.rb:32-38
    26.8: describe(perform)::it#updates subscription without a secret when delivery succeeds mastodon/spec/workers/pubsubhubbub/delivery_worker_spec.rb:41-47
    26.8: describe(#perform)::context(with private host)::itraises Mastodon::ValidationError mastodon/spec/lib/request_spec.rb:83-88
    26.7: describe(#unblock_salmon)::it#returns element whose rendered view triggers block when processed mastodon/spec/lib/ostatus/atom_serializer_spec.rb:875-884
    26.7: describe(#entry)::it#appends ostatus:conversation if conversation id is present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:569-576
    26.7: List#clean_feed_manager          mastodon/app/models/list.rb:33-43
    26.7: describe(#push_to_home)::context(reblogs)::it#saves a new reblog of an old status mastodon/spec/lib/feed_manager_spec.rb:215-227
    26.7: describe(#role?)::it#returns true when exact role match mastodon/spec/models/user_spec.rb:308-315
    26.7: shared_examples(status attributes)::it#appends content element with formatted status mastodon/spec/lib/ostatus/atom_serializer_spec.rb:80-88
    26.7: IntentsController#show           mastodon/app/controllers/intents_controller.rb:7-17
    26.6: describe(#method_missing)::it#sets scoped_setting.method_name = val mastodon/spec/lib/settings/scoped_settings_spec.rb:19-22
    26.6: FeedManager#merge_into_timeline  mastodon/app/lib/feed_manager.rb:81-95
    26.5: describe(POST #clear)::it#clears notifications for the account mastodon/spec/controllers/api/v1/notifications_controller_spec.rb:40-45
    26.5: Status#decrement_counter_caches  mastodon/app/models/status.rb:466-477
    26.4: context(in a local status)::it#works with SJIS mastodon/spec/services/fetch_link_card_service_spec.rb:36-38
    26.4: context(in a local status)::it#works with SJIS even with wrong charset header mastodon/spec/services/fetch_link_card_service_spec.rb:45-47
    26.4: context(in a local status)::it#works with koi8-r mastodon/spec/services/fetch_link_card_service_spec.rb:54-56
    26.4: context(in a local status)::it#works with Japanese path string mastodon/spec/services/fetch_link_card_service_spec.rb:63-65
    26.4: context(with an oauth token)::describe(POST #destroy)::let#status mastodon/spec/controllers/api/v1/statuses/reblogs_controller_spec.rb:46-46
    26.4: context(with an oauth token)::describe(POST #create)::let#status mastodon/spec/controllers/api/v1/statuses/reblogs_controller_spec.rb:18-18
    26.4: AfterBlockService#clear_notifications mastodon/app/services/after_block_service.rb:23-41
    26.4: Account#magic_key                mastodon/app/models/account.rb:260-272
    26.3: describe(.all_as_records)::context(records includes nothing)::context(default_value is not a Hash)::it#includes Setting with value of default_value mastodon/spec/models/setting_spec.rb:145-150
    26.3: Mastodon::MigrationHelpers#copy_indexes mastodon/lib/mastodon/migration_helpers.rb:782-813
    26.3: OStatus::AtomSerializer#follow_salmon mastodon/app/lib/ostatus/atom_serializer.rb:122-141
    26.3: describe(GET #show)::context(when user is sign in)::context(when user does not have moved to account)::it#renders show page mastodon/spec/controllers/settings/migrations_controller_spec.rb:38-41
    26.2: describe(helper_method :current_theme)::it#returns user's theme when it is set mastodon/spec/controllers/application_controller_spec.rb:117-124
    26.1: describe#digest                  mastodon/spec/mailers/notification_mailer_spec.rb:105-144
    26.1: Admin::StatusesController#create mastodon/app/controllers/admin/statuses_controller.rb:25-35
    26.1: describe(#replies_count)::it#is decremented when reply is removed mastodon/spec/models/status_spec.rb:200-204
    26.1: describe(#favourites_count)::it#is decremented when favourite is removed mastodon/spec/models/status_spec.rb:216-220
    26.1: describe(#reblogs_count)::it#is decremented when reblog is removed mastodon/spec/models/status_spec.rb:179-183
    26.0: context#when other reports already exist for the same target mastodon/spec/services/report_service_spec.rb:26-40
    26.0: OStatus::AtomSerializer#follow_request_salmon mastodon/app/lib/ostatus/atom_serializer.rb:144-160
    25.9: describe(#filter?)::context(for home feed)::it#returns false for status by followee mentioning another account mastodon/spec/lib/feed_manager_spec.rb:109-112
    25.9: describe(#filter?)::context(for mentions feed)::it#returns true for status that mentions blocked account mastodon/spec/lib/feed_manager_spec.rb:156-159
    25.9: create_table#preview_cards       mastodon/db/schema.rb:384-404
    25.8: describe(.as_public_timeline)::describe(with an account passed in)::context(with language preferences)::it#includes all languages when user does not have a setting mastodon/spec/models/status_spec.rb:554-563
    25.8: describe(digest)::it#renders the headers mastodon/spec/mailers/notification_mailer_spec.rb:117-119
    25.8: describe(total_follows)::it#returns the total number of the followed accounts mastodon/spec/models/export_spec.rb:49-51
    25.8: describe(total_follows)::it#returns the total number of the blocked accounts mastodon/spec/models/export_spec.rb:54-56
    25.8: describe(total_follows)::it#returns the total number of the muted accounts mastodon/spec/models/export_spec.rb:59-61
    25.7: PostStatusService#validate_media! mastodon/app/services/post_status_service.rb:57-66
    25.7: describe(POST #copy)::it#copies custom emoji mastodon/spec/controllers/admin/custom_emojis_controller_spec.rb:88-90
    25.7: UpdateRemoteProfileService#save_emojis mastodon/app/services/update_remote_profile_service.rb:48-63
    25.7: it#delivers status to local followers mastodon/spec/services/fan_out_on_write_service_spec.rb:25-27
    25.6: describe(#mute!)::context(Mute already exists)::context(mute.hide_notifications is true)::context(arg :notifications is nil)::it#returns Mute without updating mute.hide_notifications mastodon/spec/models/concerns/account_interactions_spec.rb:163-166
    25.6: describe(#mute!)::context(Mute already exists)::context(mute.hide_notifications is true)::context(arg :notifications is true)::it#returns Mute without updating mute.hide_notifications mastodon/spec/models/concerns/account_interactions_spec.rb:183-186
    25.6: describe(#mute!)::context(Mute already exists)::context(mute.hide_notifications is false)::context(arg :notifications is false)::it#returns Mute without updating mute.hide_notifications mastodon/spec/models/concerns/account_interactions_spec.rb:207-210
    25.6: Mastodon::Snowflake::Callbacks::around_create mastodon/lib/mastodon/snowflake.rb:7-26
    25.5: describe(update)::it#decoerces setting values before applying mastodon/spec/lib/user_settings_decorator_spec.rb:73-81
    25.5: describe(#follow!)::it#creates and returns Follow mastodon/spec/models/concerns/account_interactions_spec.rb:95-98
    25.5: describe(#block)::it#creates and returns Block mastodon/spec/models/concerns/account_interactions_spec.rb:103-106
    25.5: InitialStateSerializer#compose   mastodon/app/serializers/initial_state_serializer.rb:36-47
    25.5: describe(#author)::context(when note is present)::it#appends summary element with type attribute and simplified note if present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:157-161
    25.5: describe(mention)::it#renders the body mastodon/spec/mailers/notification_mailer_spec.rb:33-35
    25.5: describe(favourite)::it#renders the body mastodon/spec/mailers/notification_mailer_spec.rb:66-68
    25.5: describe(reblog)::it#renders the body mastodon/spec/mailers/notification_mailer_spec.rb:83-85
    25.5: SignatureVerification#build_signed_string mastodon/app/controllers/concerns/signature_verification.rb:82-93
    25.4: describe(PUT #update)::describe(with an outsome of `assign_to_self`)::it#reopens the report mastodon/spec/controllers/admin/reports_controller_spec.rb:97-103
    25.4: describe(#unfollow_salmon)::it#appends activity:object element with target account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1244-1252
    25.4: describe(DELETE #destroy)::it#deletes note mastodon/spec/controllers/admin/report_notes_controller_spec.rb:85-87
    25.4: describe(DELETE #destroy)::it#destroys note mastodon/spec/controllers/admin/account_moderation_notes_controller_spec.rb:41-43
    25.2: describe(about/show.html.haml)::it#has valid open graph tags mastodon/spec/views/about/show.html.haml_spec.rb:11-34
    25.1: it#creates a new response status mastodon/spec/services/post_status_service_spec.rb:16-25
    25.1: Extractor#extract_mentions_or_lists_with_indices mastodon/app/lib/extractor.rb:9-32
    25.1: FeedManager#trim                 mastodon/app/lib/feed_manager.rb:56-77
    25.1: describe(.purge_old)::it#calls order.offset.destroy_all mastodon/spec/models/session_activation_spec.rb:109-113
    25.1: RejectFollowingBlockedUsers#up   mastodon/db/migrate/20180608213548_reject_following_blocked_users.rb:4-33
    25.1: describe(#show)::context(status is not permitted)::itraises ActiveRecord::RecordNotFound mastodon/spec/controllers/statuses_controller_spec.rb:21-29
    25.1: ActivityPub::TagManager#cc       mastodon/app/lib/activitypub/tag_manager.rb:71-85
    25.0: context(with an ActivityPub account)::it#returns new remote account mastodon/spec/services/resolve_account_service_spec.rb:100-105
    25.0: context(with an OStatus account)::it#follows a legitimate account redirection mastodon/spec/services/resolve_account_service_spec.rb:57-62
    25.0: FavouriteService#create_notification mastodon/app/services/favourite_service.rb:27-36
    25.0: describe(with valid params)::describe#that call account methods mastodon/spec/models/account_filter_spec.rb:62-69
    25.0: describe(discover_provider)::context(when status code is 200 and MIME type is text/html)::context(Both of JSON and XML provider are discoverable)::itreturns new OEmbed::Provider for JSON provider if :format option is set to :json mastodon/spec/services/fetch_oembed_service_spec.rb:24-28
    25.0: describe(discover_provider)::context(when status code is 200 and MIME type is text/html)::context(Both of JSON and XML provider are discoverable)::itreturns new OEmbed::Provider for XML provider if :format option is set to :xml mastodon/spec/services/fetch_oembed_service_spec.rb:30-34
    25.0: describe(discover_provider)::context(when status code is 200 and MIME type is text/html)::context(JSON provider is discoverable while XML provider is not)::itreturns new OEmbed::Provider for JSON provider mastodon/spec/services/fetch_oembed_service_spec.rb:46-50
    25.0: describe(discover_provider)::context(when status code is 200 and MIME type is text/html)::context(XML provider is discoverable while JSON provider is not)::itreturns new OEmbed::Provider for XML provider mastodon/spec/services/fetch_oembed_service_spec.rb:62-66
    25.0: describe(#role?)::it#returns true when role higher than needed mastodon/spec/models/user_spec.rb:318-324
    25.0: FetchOEmbedService#discover_endpoint! mastodon/app/services/fetch_oembed_service.rb:16-36
    24.9: describe(helper_method :single_user_mode?)::it#returns false if there is an account but it is not in single_user_mode mastodon/spec/controllers/application_controller_spec.rb:82-85
    24.9: describe(helper_method :single_user_mode?)::it#returns true if it is in single_user_mode and there is an account mastodon/spec/controllers/application_controller_spec.rb:88-91
    24.9: OStatus::Activity::Creation#invalid_origin? mastodon/app/lib/ostatus/activity/creation.rb:207-213
    24.9: describe(#mute!)::context(Mute does not exist yet)::context(arg :notifications is nil)::it#creates Mute, and returns Mute mastodon/spec/models/concerns/account_interactions_spec.rb:117-120
    24.9: describe(#mute!)::context(Mute does not exist yet)::context(arg :notifications is false)::it#creates Mute, and returns Mute mastodon/spec/models/concerns/account_interactions_spec.rb:127-130
    24.9: describe(#mute!)::context(Mute does not exist yet)::context(arg :notifications is true)::it#creates Mute, and returns Mute mastodon/spec/models/concerns/account_interactions_spec.rb:137-140
    24.8: describe(#call)::context(with a valid account)::it#returns a valid topic status and does not run confirm when no subscription mastodon/spec/services/pubsubhubbub/unsubscribe_service_spec.rb:20-25
    24.8: describe(#ancestors)::it#does not return conversation history user is not allowed to see mastodon/spec/models/concerns/status_threading_concern_spec.rb:20-24
    24.8: describe(#descendants)::it#does not return replies user is not allowed to see mastodon/spec/models/concerns/status_threading_concern_spec.rb:95-99
    24.8: StreamEntriesHelper#account_description mastodon/app/helpers/stream_entries_helper.rb:61-79
    24.8: describe(.as_public_timeline)::context(with a local_only option set)::context(without a viewer)::it#does not include remote instances statuses mastodon/spec/models/status_spec.rb:477-479
    24.8: describe(.as_public_timeline)::context(with a local_only option set)::context(with a viewer)::it#does not include remote instances statuses mastodon/spec/models/status_spec.rb:486-488
    24.8: context(with a user context)::let#token mastodon/spec/controllers/api/v1/timelines/tag_controller_spec.rb:15-15
    24.8: Api::V1::Accounts::StatusesController#account_media_status_ids mastodon/app/controllers/api/v1/accounts/statuses_controller.rb:50-57
    24.7: context(local account)::describe(unlocked account, no reblogs)::it#creates a following relation without reblogs mastodon/spec/services/follow_service_spec.rb:53-55
    24.7: context(local account)::describe(unlocked account)::it#creates a following relation with reblogs mastodon/spec/services/follow_service_spec.rb:40-42
    24.7: describe(#call)::context(when setting is set)::it#follows found accounts from account mastodon/spec/services/bootstrap_timeline_service_spec.rb:31-33
    24.7: describe(POST #create)::context(when successfully finds status)::it#returns a right response mastodon/spec/controllers/api/web/embeds_controller_spec.rb:19-21
    24.7: Status#set_conversation          mastodon/app/models/status.rb:425-433
    24.7: describe(POST #create)::it#replaces old subscription on repeat calls mastodon/spec/controllers/api/v1/push/subscriptions_controller_spec.rb:53-57
    24.5: describe(helper_method :current_theme)::it#returns instances's default theme when user didn't set theme mastodon/spec/controllers/application_controller_spec.rb:108-114
    24.5: describe(#call)::describe(with a non-url query)::context(that matches a tag)::it#does not include tag when starts with @ character mastodon/spec/services/search_service_spec.rb:86-92
    24.5: FixAccountsUniqueIndex#merge_accounts! mastodon/db/migrate/20180528141303_fix_accounts_unique_index.rb:74-101
    24.5: describe(delegated methods)::context(with a real status)::it#delegates target mastodon/spec/models/stream_entry_spec.rb:171-173
    24.5: describe(delegated methods)::context(with a real status)::it#delegates title mastodon/spec/models/stream_entry_spec.rb:176-178
    24.5: describe(delegated methods)::context(with a real status)::it#delegates content mastodon/spec/models/stream_entry_spec.rb:181-183
    24.5: describe(delegated methods)::context(with a real status)::it#delegates thread mastodon/spec/models/stream_entry_spec.rb:186-188
    24.5: describe(POST #create)::it#creates list mastodon/spec/controllers/api/v1/lists_controller_spec.rb:41-43
    24.5: PremailerWebpackStrategy#load    mastodon/lib/mastodon/premailer_webpack_strategy.rb:4-19
    24.5: FeedManager#filter_from_mentions? mastodon/app/lib/feed_manager.rb:184-197
    24.4: describe(#statuses_count)::it#is decremented when status is removed mastodon/spec/models/account_spec.rb:471-475
    24.4: OStatus::Activity::Creation#save_emojis mastodon/app/lib/ostatus/activity/creation.rb:178-193
    24.4: ProcessHashtagsService#call      mastodon/app/services/process_hashtags_service.rb:4-10
    24.3: EmailMxValidator#invalid_mx?     mastodon/app/validators/email_mx_validator.rb:13-22
    24.3: ResolveURLService#process_local_url mastodon/app/services/resolve_url_service.rb:71-84
    24.3: ProcessMentionsService#create_notification mastodon/app/services/process_mentions_service.rb:46-55
    24.3: describe(POST #update)::context#with invalid post data mastodon/spec/controllers/api/salmon_controller_spec.rb:52-61
    24.3: describe(when signed in)::describe(feed regeneration)::it#sets the regeneration marker to expire mastodon/spec/controllers/concerns/user_tracking_concern_spec.rb:72-75
    24.3: describe(GET #index)::it#returns http success with no media mastodon/spec/controllers/admin/statuses_controller_spec.rb:18-23
    24.3: describe(GET #index)::it#returns http success with media mastodon/spec/controllers/admin/statuses_controller_spec.rb:26-31
    24.3: ActivityPub::FetchRemoteAccountService#call mastodon/app/services/activitypub/fetch_remote_account_service.rb:10-27
    24.3: Request::ClientLimit#body_with_limit mastodon/app/lib/request.rb:113-135
    24.2: Api::V1::StreamingController#index mastodon/app/controllers/api/v1/streaming_controller.rb:6-13
    24.2: NotificationMailer#digest        mastodon/app/mailers/notification_mailer.rb:68-79
    24.2: Paperclip::GifTranscoder#make    mastodon/lib/paperclip/gif_transcoder.rb:7-16
    24.2: describe(#filter?)::context(for home feed)::it#returns false for followee's status mastodon/spec/lib/feed_manager_spec.rb:29-32
    24.1: describe(#author)::it#includes URI mastodon/spec/lib/ostatus/atom_serializer_spec.rb:294-300
    24.1: context#Temporarily-unreachable ActivityPub user mastodon/spec/services/process_mentions_service_spec.rb:45-62
    24.0: describe(.mutes_map)::it#contains true value mastodon/spec/models/status_spec.rb:245-247
    24.0: Admin::StatusesController#index  mastodon/app/controllers/admin/statuses_controller.rb:11-22
    24.0: describe#follow request rejection slap mastodon/spec/services/process_interaction_service_spec.rb:122-148
    24.0: describe#follow request authorization slap mastodon/spec/services/process_interaction_service_spec.rb:92-118
    23.9: describe(#feed)::it#appends link element for Salmon mastodon/spec/lib/ostatus/atom_serializer_spec.rb:695-701
    23.9: describe(#feed)::it#appends link element for hub mastodon/spec/lib/ostatus/atom_serializer_spec.rb:686-692
    23.9: describe(#follow_salmon)::it#appends activity:object element with target account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1126-1133
    23.9: describe(#unblock_salmon)::it#appends activity:object element with target account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:865-872
    23.9: describe(#block_salmon)::it#appends activity:object element with target account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:778-785
    23.9: namespace(api)::namespace#v1     mastodon/config/routes.rb:229-340
    23.9: describe(POST #disable)::context(when user is admin)::context(when target user is not admin)::it#succeeds in disabling account mastodon/spec/controllers/admin/accounts_controller_spec.rb:216-218
    23.9: describe(POST #memorialize)::context(when user is admin)::context(when target user is not admin)::it#succeeds in memorializing account mastodon/spec/controllers/admin/accounts_controller_spec.rb:138-140
    23.9: SearchService#call               mastodon/app/services/search_service.rb:6-19
    23.9: describe(#merge_into_timeline)::it#does not push source account's statuses whose reblogs are already inserted mastodon/spec/lib/feed_manager_spec.rb:298-306
    23.8: SharesController#initial_state_params mastodon/app/controllers/shares_controller.rb:16-25
    23.8: ActivityPub::LinkedDataSignature#sign! mastodon/app/lib/activitypub/linked_data_signature.rb:35-49
    23.8: REST::RelationshipSerializer#showing_reblogs mastodon/app/serializers/rest/relationship_serializer.rb:16-20
    23.8: describe(POST #dismiss)::it#destroys the notification mastodon/spec/controllers/api/v1/notifications_controller_spec.rb:28-33
    23.7: Admin::SuspensionsController#create mastodon/app/controllers/admin/suspensions_controller.rb:11-24
    23.7: InitialStateSerializer#accounts  mastodon/app/serializers/initial_state_serializer.rb:50-54
    23.7: describe(processing a feed)::context(when domain is set to reject media)::it#rejects remote user's avatar mastodon/spec/services/process_feed_service_spec.rb:85-88
    23.7: describe(.activate)::it#calls create! and purge_old mastodon/spec/models/session_activation_spec.rb:76-79
    23.7: context#protocol is :ostatus     mastodon/spec/services/fetch_remote_status_service_spec.rb:36-84
    23.7: ActivityPub::ProcessAccountService#set_immediate_attributes! mastodon/app/services/activitypub/process_account_service.rb:66-78
    23.7: AccountRelationshipsPresenter#cache_uncached! mastodon/app/presenters/account_relationships_presenter.rb:61-73
    23.6: MediaProxyController#show        mastodon/app/controllers/media_proxy_controller.rb:6-16
    23.6: TrendingTags::record_use!        mastodon/app/models/trending_tags.rb:10-15
    23.6: describe(remote ActivityPub)::it#removes follow request mastodon/spec/services/reject_follow_service_spec.rb:59-60
    23.6: describe(remote OStatus)::it#removes follow request mastodon/spec/services/reject_follow_service_spec.rb:34-35
    23.6: describe(local)::it#removes follow request mastodon/spec/services/reject_follow_service_spec.rb:16-17
    23.6: describe(#perform)::it#removes the follow request mastodon/spec/lib/activitypub/activity/reject_spec.rb:34-35
    23.6: context#with an ActivityPub account mastodon/spec/services/resolve_account_service_spec.rb:74-123
    23.6: describe(#entry)::it#appends activity:verb element with object type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:506-512
    23.6: describe(#entry)::it#appends activity:object-type element with object type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:499-503
    23.6: context(remote OStatus account)::describe(unlocked account)::it#sends a follow salmon slap mastodon/spec/services/follow_service_spec.rb:133-137
    23.6: context(remote OStatus account)::describe(locked account)::it#sends a follow request salmon slap mastodon/spec/services/follow_service_spec.rb:112-116
    23.6: namespace(api)::namespace(v1)::resources#accounts mastodon/config/routes.rb:315-332
    23.5: context(when prefetched_body is nil)::context#protocol is :ostatus mastodon/spec/services/fetch_remote_account_service_spec.rb:79-86
    23.5: describe(detect)::describe(when language can't be detected)::describe(because of a URL)::it#uses nil when sent just a URL mastodon/spec/lib/language_detector_spec.rb:74-81
    23.5: describe(#acct)::it#is fully qualified for embedded local accounts mastodon/spec/helpers/stream_entries_helper_spec.rb:33-40
    23.5: describe(#acct)::it#is fully qualified for non embedded local accounts mastodon/spec/helpers/stream_entries_helper_spec.rb:61-68
    23.4: describe(.[])::context(rails_initialized? is truthy)::context(Rails.cache does not exists)::context(RailsSettings::Settings.object returns truthy)::context(default_value is a Hash)::it#calls default_value.with_indifferent_access.merge! mastodon/spec/models/setting_spec.rb:70-74
    23.4: describe(helper_method :single_user_mode?)::it#returns false if it is in single_user_mode but there is no account mastodon/spec/controllers/application_controller_spec.rb:77-79
    23.4: describe(POST #demote)::it#demotes user mastodon/spec/controllers/admin/roles_controller_spec.rb:28-30
    23.4: describe(POST #promote)::it#promotes user mastodon/spec/controllers/admin/roles_controller_spec.rb:17-19
    23.4: describe(The webfinger route)::describe(asking for xml format)::it#returns an xml response for xml accept header mastodon/spec/requests/webfinger_request_spec.rb:23-28
    23.4: describe(The webfinger route)::describe(asking for json format)::it#returns a json response for json accept header mastodon/spec/requests/webfinger_request_spec.rb:40-45
    23.4: describe(#unfollow_salmon)::it#appends activity:verb element with follow mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1234-1241
    23.4: describe(#unfollow_salmon)::it#appends activity:object-type element with activity type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1224-1231
    23.4: describe(The webfinger route)::describe(asking for xml format)::it#returns an xml response for xml format mastodon/spec/requests/webfinger_request_spec.rb:16-20
    23.4: describe(The webfinger route)::describe(asking for json format)::it#returns a json response for json format mastodon/spec/requests/webfinger_request_spec.rb:33-37
    23.3: describe(.as_public_timeline)::it#filters out silenced accounts mastodon/spec/models/status_spec.rb:420-428
    23.3: Omniauthable#find_for_oauth      mastodon/app/models/concerns/omniauthable.rb:20-37
    23.3: context(when the status has been reblogged)::describe##perform mastodon/spec/lib/activitypub/activity/delete_spec.rb:31-48
    23.3: describe(POST #create)::it#confirms the user mastodon/spec/controllers/admin/confirmations_controller_spec.rb:11-17
    23.2: context#given a local account    mastodon/spec/services/verify_link_service_spec.rb:6-80
    23.2: describe(lease_seconds=)::it#sets expires_at to min expiration when small value is provided mastodon/spec/models/subscription_spec.rb:31-40
    23.2: describe(lease_seconds=)::it#sets expires_at to value when valid value is provided mastodon/spec/models/subscription_spec.rb:43-52
    23.2: describe(lease_seconds=)::it#sets expires_at to max expiration when large value is provided mastodon/spec/models/subscription_spec.rb:55-64
    23.2: describe(mention)::it#renders the headers mastodon/spec/mailers/notification_mailer_spec.rb:28-30
    23.2: describe(follow)::it#renders the headers mastodon/spec/mailers/notification_mailer_spec.rb:45-47
    23.2: describe(favourite)::it#renders the headers mastodon/spec/mailers/notification_mailer_spec.rb:61-63
    23.2: describe(reblog)::it#renders the headers mastodon/spec/mailers/notification_mailer_spec.rb:78-80
    23.2: describe(follow_request)::it#renders the headers mastodon/spec/mailers/notification_mailer_spec.rb:95-97
    23.2: Status#increment_counter_caches  mastodon/app/models/status.rb:453-464
    23.1: context(with an ActivityPub account)::it#fallback to OStatus if actor json did not have inbox_url mastodon/spec/services/resolve_account_service_spec.rb:91-97
    23.1: describe#.all_as_records         mastodon/spec/models/setting_spec.rb:116-158
    23.1: Scheduler::UserCleanupScheduler#perform mastodon/app/workers/scheduler/user_cleanup_scheduler.rb:8-11
    23.1: it#does not allow attaching both videos and images mastodon/spec/services/post_status_service_spec.rb:159-174
    23.1: describe(#filtered?)::context(with real account)::context#when status account domain is blocked mastodon/spec/lib/status_filter_spec.rb:49-55
    23.1: describe(#entry)::context(if status is present)::it#appends mastodon:scope element with visibility mastodon/spec/lib/ostatus/atom_serializer_spec.rb:401-407
    23.0: it#delivers status to home timeline mastodon/spec/services/fan_out_on_write_service_spec.rb:21-22
    23.0: Paperclip::LazyThumbnail#needs_different_geometry? mastodon/lib/paperclip/lazy_thumbnail.rb:26-29
    22.9: describe(POST #create)::it#renders new when failed to save mastodon/spec/controllers/admin/domain_blocks_controller_spec.rb:59-67
    22.8: describe(#entry)::it#appends id element with unique tag mastodon/spec/lib/ostatus/atom_serializer_spec.rb:472-477
    22.8: describe(GET #new)::context(when signed in)::context#when app is already authorized mastodon/spec/controllers/oauth/authorizations_controller_spec.rb:41-59
    22.7: describe(#title)::context(unless destroyed?)::context(if reblog?)::it#returns "#{account.acct} shared a status by #{reblog.account.acct}" mastodon/spec/models/status_spec.rb:99-101
    22.7: describe(POST #enable)::context(when user is admin)::it#succeeds in enabling account mastodon/spec/controllers/admin/accounts_controller_spec.rb:178-180
    22.6: ActivityPub::Activity::Create#process_status_params mastodon/app/lib/activitypub/activity/create.rb:48-64
    22.6: StatusPolicy#mention_exists?     mastodon/app/policies/status_policy.rb:56-62
    22.6: ActivityPub::NoteSerializer#conversation mastodon/app/serializers/activitypub/note_serializer.rb:86-92
    22.6: describe(#call)::context(when actor differs from sender)::it#does not process payload if invalid signature exists mastodon/spec/services/activitypub/process_collection_service_spec.rb:45-51
    22.5: it#obfusticates filename if the given parameter is specified mastodon/spec/controllers/concerns/obfuscate_filename_spec.rb:20-24
    22.5: describe(GET #show)::it#redirects to status page mastodon/spec/controllers/stream_entries_controller_spec.rb:69-74
    22.5: describe(GET #embed)::it#redirects to new embed page mastodon/spec/controllers/stream_entries_controller_spec.rb:87-92
    22.5: describe(rate limiting)::context(throttling is on)::it#applies rate limiting reset header mastodon/spec/controllers/concerns/rate_limit_headers_spec.rb:51-52
    22.4: describe(#cc)::it#returns URIs of mentions for non-direct status mastodon/spec/lib/activitypub/tag_manager_spec.rb:67-71
    22.4: describe(POST #create)::it#creates a report mastodon/spec/controllers/api/v1/reports_controller_spec.rb:25-27
    22.4: describe(remote OStatus)::it#sends an unfollow salmon slap mastodon/spec/services/unfollow_service_spec.rb:34-38
    22.4: describe(remote OStatus)::it#sends an unblock salmon slap mastodon/spec/services/unblock_service_spec.rb:34-38
    22.4: describe(remote OStatus)::it#sends a follow request rejection salmon slap mastodon/spec/services/reject_follow_service_spec.rb:42-46
    22.4: describe(remote OStatus)::it#sends a salmon slap mastodon/spec/services/favourite_service_spec.rb:34-38
    22.4: describe(remote OStatus)::it#sends a block salmon slap mastodon/spec/services/block_service_spec.rb:32-36
    22.4: describe(remote OStatus)::it#sends a follow request authorization salmon slap mastodon/spec/services/authorize_follow_service_spec.rb:42-46
    22.4: describe(#filter?)::context(for mentions feed)::it#returns true for status by silenced account who recipient is not following mastodon/spec/lib/feed_manager_spec.rb:169-172
    22.4: PreviewCard#none
    22.4: describe(#mentions)::context#orphaned? is false mastodon/spec/models/stream_entry_spec.rb:111-120
    22.4: namespace(admin)::resources#accounts mastodon/config/routes.rb:166-193
    22.4: ActivityPub::Activity::klass     mastodon/app/lib/activitypub/activity.rb:25-53
    22.3: let#recipient                    mastodon/spec/services/notify_service_spec.rb:9-9
    22.3: describe(.deactivate)::context(id exists)::it#calls where.destroy_all mastodon/spec/models/session_activation_spec.rb:99-103
    22.3: describe(GET #edit)::context(with invalid reset_password_token)::it#redirects to #new mastodon/spec/controllers/auth/passwords_controller_spec.rb:32-34
    22.3: describe(PUT #update)::context(when parameter is valid)::it#succeeds in updating custom emoji mastodon/spec/controllers/admin/custom_emojis_controller_spec.rb:67-69
    22.3: describe(PUT #update)::context(when parameter is invalid)::it#fails to update custom emoji mastodon/spec/controllers/admin/custom_emojis_controller_spec.rb:76-78
    22.3: it#does not force ssl if Rails.env.production? is not 'true' mastodon/spec/controllers/application_controller_spec.rb:50-54
    22.3: ActivityPub::Activity::Create#detected_language mastodon/app/lib/activitypub/activity/create.rb:231-240
    22.3: describe(response's body_with_limit method)::it#rejects body by given size mastodon/spec/lib/request_spec.rb:103-106
    22.3: shared_examples(follow request salmon)::it#appends activity:object with target account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:32-39
    22.3: describe(before_validation)::it#sets account being replied to correctly over intermediary nodes mastodon/spec/models/status_spec.rb:654-659
    22.3: Goldfinger::finger               mastodon/config/initializers/http_client_proxy.rb:17-22
    22.2: context(when prefetched_body is nil)::context#protocol is :activitypub mastodon/spec/services/fetch_remote_account_service_spec.rb:70-76
    22.2: describe(perform)::it#performs a request mastodon/spec/workers/activitypub/delivery_worker_spec.rb:12-15
    22.2: describe(#entry)::context(it is root)::it#appends author element mastodon/spec/lib/ostatus/atom_serializer_spec.rb:336-342
    22.2: ActivityPub::Activity::Delete#forward_for_reblogs mastodon/app/lib/activitypub/activity/delete.rb:37-44
    22.2: main#sign_in                     mastodon/spec/rails_helper.rb:23-32
    22.1: describe(#perform)::context(with valid host)::it#executes a HTTP request mastodon/spec/lib/request_spec.rb:45-47
    22.1: describe(digest)::it#includes activities since the date specified by :since option mastodon/spec/mailers/notification_mailer_spec.rb:129-132
    22.1: shared_examples(checks for enabled registrations)::it#redirects if it is in single user mode while it is open for registration mastodon/spec/controllers/auth/registrations_controller_spec.rb:13-20
    22.0: create_table#media_attachments   mastodon/db/schema.rb:280-297
    22.0: ApplicationController#none
    21.9: describe(The webfinger route)::describe(requested with standard accepts headers)::it#returns a json response mastodon/spec/requests/webfinger_request_spec.rb:7-11
    21.9: describe(#object)::it#appends activity:verb element with verb mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1503-1509
    21.9: describe(#object)::it#appends activity:object-type element with object type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1494-1500
    21.9: describe(#reject_follow_request_salmon)::it#appends activity:verb element with authorize mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1424-1428
    21.9: describe(#reject_follow_request_salmon)::it#appends activity:object-type element with activity type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1417-1421
    21.9: describe(#authorize_follow_request_salmon)::it#appends activity:verb element with authorize mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1359-1365
    21.9: describe(#authorize_follow_request_salmon)::it#appends activity:object-type element with activity type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1350-1356
    21.9: describe(#follow_salmon)::it#appends activity:verb element with follow mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1117-1123
    21.9: describe(#follow_salmon)::it#appends activity:object-type element with activity type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1108-1114
    21.9: describe(#unfavourite_salmon)::it#appends activity:verb element with favorite mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1025-1031
    21.9: describe(#favourite_salmon)::it#appends activity:verb element with favorite mastodon/spec/lib/ostatus/atom_serializer_spec.rb:925-931
    21.9: describe(#unblock_salmon)::it#appends activity:object-type element with activity type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:847-853
    21.9: describe(#unblock_salmon)::it#appends activity:verb element with block mastodon/spec/lib/ostatus/atom_serializer_spec.rb:856-862
    21.9: describe(#block_salmon)::it#appends activity:verb element with block mastodon/spec/lib/ostatus/atom_serializer_spec.rb:769-775
    21.9: describe(#block_salmon)::it#appends activity:object-type element with activity type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:760-766
    21.9: describe(#author)::it#appends activity:object-type element with person type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:185-191
    21.9: describe(#show)::it#raises when not permitted to view mastodon/spec/controllers/media_controller_spec.rb:30-36
    21.9: shared_examples#respond_with_error mastodon/spec/controllers/application_controller_spec.rb:24-36
    21.9: context(with an ActivityPub account)::it#fallback to OStatus if actor json could not be fetched mastodon/spec/services/resolve_account_service_spec.rb:82-88
    21.9: describe(#show)::context(status is a reblog)::it#redirects to the original status mastodon/spec/controllers/statuses_controller_spec.rb:34-41
    21.8: it#forces ssl if Rails.env.production? is 'true' mastodon/spec/controllers/application_controller_spec.rb:57-61
    21.8: OStatus::Activity::Creation#perform mastodon/app/lib/ostatus/activity/creation.rb:4-23
    21.8: describe(response's body_with_limit method)::it#rejects too large monolithic body mastodon/spec/lib/request_spec.rb:113-116
    21.8: describe(When signed in as an admin)::describe(PUT #update)::it#updates a settings value mastodon/spec/controllers/admin/settings_controller_spec.rb:57-62
    21.8: describe(When signed in as an admin)::describe(PUT #update)::it#typecasts open_registrations to boolean mastodon/spec/controllers/admin/settings_controller_spec.rb:73-78
    21.8: Formatter#link_html              mastodon/app/lib/formatter.rb:235-242
    21.8: ResolveAccountService#ostatus_ready? mastodon/app/services/resolve_account_service.rb:69-75
    21.7: FeedManager#populate_feed        mastodon/app/lib/feed_manager.rb:117-135
    21.7: OStatus::Activity::Creation#save_mentions mastodon/app/lib/ostatus/activity/creation.rb:128-141
    21.7: User::ldap_get_user              mastodon/app/models/user.rb:303-311
    21.7: ActivityPub::Activity#fetch_remote_original_status mastodon/app/lib/activitypub/activity.rb:124-130
    21.7: describe(when an IP address is provided)::it#filters with IP when valid mastodon/spec/models/account_filter_spec.rb:21-26
    21.7: describe(POST #create)::it#redirects to settings path with successful following import mastodon/spec/controllers/settings/imports_controller_spec.rb:18-28
    21.7: describe(POST #create)::it#redirects to settings path with successful blocking import mastodon/spec/controllers/settings/imports_controller_spec.rb:31-41
    21.6: Tag#history                      mastodon/app/models/tag.rb:24-37
    21.6: describe##muting_notifications?  mastodon/spec/models/concerns/account_interactions_spec.rb:437-457
    21.6: RSSBuilder#image                 mastodon/app/lib/rss_builder.rb:72-81
    21.6: context(with signature header)::context#with body mastodon/spec/controllers/concerns/signature_verification_spec.rb:100-133
    21.6: context(with signature header)::context#without body mastodon/spec/controllers/concerns/signature_verification_spec.rb:43-71
    21.6: describe(GET #index)::context(with wrong scopes)::it#returns http forbidden mastodon/spec/controllers/api/v1/mutes_controller_spec.rb:57-59
    21.6: Settings::TwoFactorAuthentication::ConfirmationsController#create mastodon/app/controllers/settings/two_factor_authentication/confirmations_controller.rb:15-28
    21.5: describe(cache_collection)::shared_examples(cacheable)::itcalls cache_ids of raw if it is an ActiveRecord::Relation mastodon/spec/controllers/application_controller_spec.rb:343-347
    21.5: context(with streaming api on different host)::before#each mastodon/spec/controllers/api/v1/streaming_controller_spec.rb:27-29
    21.5: ActivityPub::Activity::Add#perform mastodon/app/lib/activitypub/activity/add.rb:4-12
    21.5: describe(#sign!)::it#contains signature mastodon/spec/lib/activitypub/linked_data_signature_spec.rb:70-72
    21.5: describe(helper_method :current_theme)::it#returns instances's theme when user is not signed in mastodon/spec/controllers/application_controller_spec.rb:102-105
    21.5: SuspendAccountService#purge_content! mastodon/app/services/suspend_account_service.rb:24-43
    21.5: JsonLdHelper#load_jsonld_context mastodon/app/helpers/jsonld_helper.rb:101-114
    21.5: describe(.as_tag_timeline)::it#includes statuses with a tag mastodon/spec/models/status_spec.rb:580-587
    21.5: describe(#unblock_domain!)::context(blocking the domain)::it#returns destroyed AccountDomainBlock mastodon/spec/models/concerns/account_interactions_spec.rb:331-335
    21.5: describe(PUT #update)::describe(with an outsome of `unassign`)::it#reopens the report mastodon/spec/controllers/admin/reports_controller_spec.rb:108-114
    21.4: describe(#entry)::context(if status is not present)::it#appends title element saying the status is deleted mastodon/spec/lib/ostatus/atom_serializer_spec.rb:443-450
    21.4: describe(#ancestors)::it#does not return conversation history from blocked users mastodon/spec/models/concerns/status_threading_concern_spec.rb:27-29
    21.4: describe(#ancestors)::it#does not return conversation history from muted users mastodon/spec/models/concerns/status_threading_concern_spec.rb:32-34
    21.4: describe(#descendants)::it#does not return replies from blocked users mastodon/spec/models/concerns/status_threading_concern_spec.rb:102-104
    21.4: describe(#descendants)::it#does not return replies from muted users mastodon/spec/models/concerns/status_threading_concern_spec.rb:107-109
    21.4: FollowService#request_follow     mastodon/app/services/follow_service.rb:41-53
    21.4: describe(scopes)::describe(partitioned)::it#returns a relation of accounts partitioned by domain mastodon/spec/models/account_spec.rb:725-731
    21.4: Attachmentable#set_file_extensions mastodon/app/models/concerns/attachmentable.rb:17-23
    21.4: Settings::ScopedSettings#[]      mastodon/app/lib/settings/scoped_settings.rb:53-61
    21.4: describe(POST #create)::context(using two-factor authentication)::context#when the server has an decryption error mastodon/spec/controllers/auth/sessions_controller_spec.rb:238-249
    21.3: describe(#author)::context(when note is present)::it#appends poco:note element with note for local account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:139-145
    21.3: describe(#author)::context(when note is present)::it#appends poco:note element with tags-stripped note for remote account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:148-154
    21.3: context(when OStatus privacy is not used)::describe(with private status)::it#does not deliver anything mastodon/spec/workers/pubsubhubbub/distribution_worker_spec.rb:29-32
    21.3: context(when OStatus privacy is not used)::describe(with direct status)::it#does not deliver payload mastodon/spec/workers/pubsubhubbub/distribution_worker_spec.rb:39-42
    21.3: describe(GET #index)::context(with token)::context#without valid resource owner mastodon/spec/controllers/api/v1/favourites_controller_spec.rb:31-42
    21.3: describe(.as_public_timeline)::it#does not include replies mastodon/spec/models/status_spec.rb:402-408
    21.3: describe(.as_public_timeline)::it#does not include boosts mastodon/spec/models/status_spec.rb:411-417
    21.3: describe(#create)::context(with a valid acct)::context#when webfinger values are good mastodon/spec/controllers/remote_follow_controller_spec.rb:56-71
    21.2: Account::advanced_search_for     mastodon/app/models/account.rb:391-431
    21.2: ActivityPub::ProcessAccountService#set_fetchable_attributes! mastodon/app/services/activitypub/process_account_service.rb:81-89
    21.1: Request::Socket::open            mastodon/app/lib/request.rb:141-152
    21.1: describe(#show)::context(account is not suspended and status is permitted)::it#assigns @ancestors for ancestors of the status if it is a reply mastodon/spec/controllers/statuses_controller_spec.rb:70-76
    21.1: describe(#object)::it#appends id element with URL for status mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1457-1460
    21.1: describe(.exclusive)::it#calls where.destroy_all mastodon/spec/models/session_activation_spec.rb:120-124
    21.0: Report#history                   mastodon/app/models/report.rb:67-90
    21.0: context(when is remote)::it#does not generate keys mastodon/spec/models/account_spec.rb:786-789
    21.0: describe(#feed)::it#appends stream entries mastodon/spec/lib/ostatus/atom_serializer_spec.rb:704-710
    21.0: StatusThreadingConcern#find_statuses_from_tree_path mastodon/app/models/concerns/status_threading_concern.rb:79-88
    21.0: it#removes old media records     mastodon/spec/workers/scheduler/media_cleanup_scheduler_spec.rb:9-13
    21.0: ActivityPub::ProcessCollectionService#call mastodon/app/services/activitypub/process_collection_service.rb:6-24
    21.0: OStatus::Activity::Deletion#perform mastodon/app/lib/ostatus/activity/deletion.rb:4-13
    20.9: describe(lease_seconds)::it#returns the time remaining until expiration mastodon/spec/models/subscription_spec.rb:21-25
    20.9: it#purge followers from blocked domain mastodon/spec/services/after_block_domain_from_account_service_spec.rb:14-17
    20.8: let#app                          mastodon/spec/controllers/oauth/authorizations_controller_spec.rb:8-8
    20.8: describe(#unfollow_salmon)::it#appends author element with account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1214-1221
    20.8: Sanitize::Config#none
    20.8: describe(#feed)::it#does not append link element for the next if it does not have 20 stream entries mastodon/spec/lib/ostatus/atom_serializer_spec.rb:676-682
    20.8: describe(#author)::it#does not append link element for header if not present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:251-257
    20.8: describe(#author)::it#does not have link element for avatar if not present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:229-235
    20.7: describe(#ancestors)::it#can return more records than previously requested mastodon/spec/models/concerns/status_threading_concern_spec.rb:58-66
    20.7: describe(#ancestors)::it#can return fewer records than previously requested mastodon/spec/models/concerns/status_threading_concern_spec.rb:69-77
    20.7: describe(#to)::it#returns URIs of mentions for direct status mastodon/spec/lib/activitypub/tag_manager_spec.rb:38-42
    20.7: it#re-subscribes for all expiring accounts mastodon/spec/workers/scheduler/subscriptions_scheduler_spec.rb:14-17
    20.7: describe(#call)::it#sends a delete actor activity to all known inboxes mastodon/spec/services/suspend_account_service_spec.rb:40-43
    20.7: describe(.call)::describe(should not include suspended accounts)::it#returns the fuzzy match first, and does not return suspended exacts mastodon/spec/services/account_search_service_spec.rb:142-148
    20.7: describe(POST #create)::context#when fails to find status mastodon/spec/controllers/api/web/embeds_controller_spec.rb:25-48
    20.7: describe(GET #index)::context(with token)::context(with read scope and valid resource owner)::it#shows favourites owned by the user mastodon/spec/controllers/api/v1/favourites_controller_spec.rb:52-58
    20.7: describe(#create)::context#when fails to unfollow remote account mastodon/spec/controllers/remote_unfollows_controller_spec.rb:29-34
    20.7: describe(#create)::context#when successfully unfollow remote account mastodon/spec/controllers/remote_unfollows_controller_spec.rb:20-25
    20.6: context(remote OStatus account)::describe#unlocked account mastodon/spec/services/follow_service_spec.rb:120-141
    20.6: describe(.[])::context(rails_initialized? is truthy)::context(Rails.cache does not exists)::context(RailsSettings::Settings.object returns falsey)::it#returns default_settings[key] mastodon/spec/models/setting_spec.rb:90-91
    20.6: describe##create                 mastodon/spec/controllers/remote_unfollows_controller_spec.rb:8-34
    20.6: describe(#favourites_count)::it#is the number of favorites mastodon/spec/models/status_spec.rb:209-213
    20.6: describe(#reblogs_count)::it#is the number of reblogs mastodon/spec/models/status_spec.rb:172-176
    20.6: AccountConversation::remove_status mastodon/app/models/account_conversation.rb:67-82
    20.6: shared_examples(checks for enabled registrations)::it#redirects if it is not open for registration while it is not in single user mode mastodon/spec/controllers/auth/registrations_controller_spec.rb:23-29
    20.5: Api::BaseController#none
    20.5: describe(#perform)::itdelegates to ActivityPub::ProcessCollectionService mastodon/spec/workers/activitypub/processing_worker_spec.rb:9-12
    20.5: FetchRemoteStatusService#process_atom mastodon/app/services/fetch_remote_status_service.rb:24-39
    20.5: it#removes statuses from author's home feed mastodon/spec/services/batched_remove_status_service_spec.rb:32-33
    20.5: it#removes statuses from local follower's home feed mastodon/spec/services/batched_remove_status_service_spec.rb:36-37
    20.5: describe(GET #index)::it#paginates accounts mastodon/spec/controllers/admin/accounts_controller_spec.rb:52-59
    20.4: describe(#unfollow_salmon)::it#appends title element with description mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1192-1200
    20.4: describe(#unfollow_salmon)::it#appends content element with description mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1203-1211
    20.4: describe(validations)::it#is valid if account is only on the brink of following too many people mastodon/spec/models/follow_spec.rb:34-38
    20.4: describe(digest)::it#includes activities since the receiver was last emailed if :since option is unavailable mastodon/spec/mailers/notification_mailer_spec.rb:135-138
    20.4: describe(digest)::it#includes activities since the receiver last signed in if :since option and the last emailed date are unavailable mastodon/spec/mailers/notification_mailer_spec.rb:141-144
    20.3: describe(.call)::describe(when there is a domain but no exact match)::it#follows the remote account when resolve is true mastodon/spec/services/account_search_service_spec.rb:124-129
    20.3: describe(#mute_conversation!)::it#creates and returns ConversationMute mastodon/spec/models/concerns/account_interactions_spec.rb:232-235
    20.3: describe(#block_domain!)::it#creates and returns AccountDomainBlock mastodon/spec/models/concerns/account_interactions_spec.rb:244-247
    20.3: describe(#call)::context(when URI and WebFinger share the same host)::it#sets username and domain from webfinger mastodon/spec/services/activitypub/fetch_remote_account_service_spec.rb:82-84
    20.3: describe(#call)::context(when WebFinger presents different domain than URI)::it#sets username and domain from final webfinger mastodon/spec/services/activitypub/fetch_remote_account_service_spec.rb:114-116
    20.3: describe(#url_for)::context(activity object)::it#returns the unique tag for status mastodon/spec/lib/tag_manager_spec.rb:131-133
    20.3: describe(#url_for)::context(comment object)::it#returns the unique tag for status mastodon/spec/lib/tag_manager_spec.rb:140-142
    20.3: describe(#url_for)::context(note object)::it#returns the unique tag for status mastodon/spec/lib/tag_manager_spec.rb:149-151
    20.3: describe(#uri_for)::context(comment object)::it#returns the unique tag for status mastodon/spec/lib/ostatus/tag_manager_spec.rb:46-48
    20.3: describe(#uri_for)::context(note object)::it#returns the unique tag for status mastodon/spec/lib/ostatus/tag_manager_spec.rb:55-57
    20.3: Account#fields_attributes=       mastodon/app/models/account.rb:225-243
    20.3: describe(POST #create)::it#creates user mastodon/spec/controllers/auth/registrations_controller_spec.rb:102-106
    20.3: shared_examples(follow request salmon)::it#appends activity:verb element with request_friend type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:23-29
    20.3: shared_examples(follow request salmon)::it#appends activity:object-type element with activity type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:14-20
    20.2: it#delivers status to public timeline mastodon/spec/services/fan_out_on_write_service_spec.rb:34-35
    20.2: describe(GET #index)::it#returns pagination headers mastodon/spec/controllers/api/v1/conversations_controller_spec.rb:26-28
    20.2: MediaAttachment::file_styles     mastodon/app/models/media_attachment.rb:141-156
    20.1: ActivityPub::Activity::Delete#delete_note mastodon/app/lib/activitypub/activity/delete.rb:19-35
    20.1: describe(show_landing_strip?)::describe(when signed out)::it#does not show landing strip on single user instance mastodon/spec/helpers/application_helper_spec.rb:102-105
    20.1: describe(show_landing_strip?)::describe(when signed out)::it#shows landing strip on multi user instance mastodon/spec/helpers/application_helper_spec.rb:108-111
    20.1: Request#perform                  mastodon/app/lib/request.rb:40-50
    20.1: describe(#unfavourite_salmon)::it#appends activity:object-type element with activity type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1016-1022
    20.1: describe(#favourite_salmon)::it#appends activity:object-type element with activity type mastodon/spec/lib/ostatus/atom_serializer_spec.rb:916-922
    20.1: describe(#author)::it#appends mastodon:scope element with 'public' if unlocked mastodon/spec/lib/ostatus/atom_serializer_spec.rb:285-291
    20.1: describe(#author)::it#appends poco:displayName element with display name if present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:261-267
    20.1: describe(#author)::it#appends mastodon:scope element with 'private' if locked mastodon/spec/lib/ostatus/atom_serializer_spec.rb:276-282
    20.1: describe(with invalid params)::it#raises with key error mastodon/spec/models/report_filter_spec.rb:13-16
    20.0: describe(extract_mentions_or_lists_with_indices)::it#yields mentions if a block is given mastodon/spec/lib/extractor_spec.rb:27-32
    20.0: describe(extract_hashtags_with_indices)::it#yields hashtags if a block is given mastodon/spec/lib/extractor_spec.rb:62-67
    20.0: shared_examples(status attributes)::it#appends summary element with spoiler text if present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:64-71
    20.0: describe(#entry)::it#does not append ostatus:conversation if conversation id is not present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:579-585
    19.9: FollowService#direct_follow      mastodon/app/services/follow_service.rb:56-69
    19.9: describe(#call)::context#when the account does not have a inbox mastodon/spec/services/activitypub/fetch_remote_account_service_spec.rb:39-60
    19.9: describe(.call)::describe(searching local and remote users)::describe(when there is a domain)::describe(and there is an account provided)::it#uses advanced_search_for to find matches mastodon/spec/services/account_search_service_spec.rb:82-87
    19.9: NotifyService#blocked?           mastodon/app/services/notify_service.rb:81-93
    19.9: JsonLdHelper#url_to_href         mastodon/app/helpers/jsonld_helper.rb:18-31
    19.9: describe(#unfollow!)::context(following target_account)::it#returns destroyed Follow mastodon/spec/models/concerns/account_interactions_spec.rb:255-258
    19.9: describe(#unblock!)::context(blocking target_account)::it#returns destroyed Block mastodon/spec/models/concerns/account_interactions_spec.rb:273-276
    19.9: describe(#unmute!)::context(muting target_account)::it#returns destroyed Mute mastodon/spec/models/concerns/account_interactions_spec.rb:291-294
    19.9: describe(#unmute_conversation!)::context(muting the conversation)::it#returns destroyed ConversationMute mastodon/spec/models/concerns/account_interactions_spec.rb:311-314
    19.9: describe(#entry)::context(if status is present)::it#appends category elements for tags mastodon/spec/lib/ostatus/atom_serializer_spec.rb:380-386
    19.8: context(when status is a reblog)::it#invalidates if the reblogged status is already a favourite mastodon/spec/models/favourite_spec.rb:10-12
    19.8: context(without an oauth token)::context(with a public status)::let#status mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:104-104
    19.8: context(without an oauth token)::context(with a private status)::let#status mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:75-75
    19.7: describe(#ancestors)::it#does not return conversation history from silenced and not followed users mastodon/spec/models/concerns/status_threading_concern_spec.rb:37-39
    19.7: describe(#descendants)::it#does not return replies from silenced and not followed users mastodon/spec/models/concerns/status_threading_concern_spec.rb:112-114
    19.7: describe(#ancestors)::it#does not return conversation history from blocked domains mastodon/spec/models/concerns/status_threading_concern_spec.rb:42-44
    19.7: describe(#descendants)::it#does not return replies from blocked domains mastodon/spec/models/concerns/status_threading_concern_spec.rb:117-119
    19.7: describe(#push_to_home)::context(reblogs)::it#does not save a new reblog of a recent status mastodon/spec/lib/feed_manager_spec.rb:205-212
    19.7: FetchAtomService#process_html    mastodon/app/services/fetch_atom_service.rb:68-77
    19.7: describe(#call)::context#when URI and WebFinger share the same host mastodon/spec/services/activitypub/fetch_remote_account_service_spec.rb:64-87
    19.6: describe(response's body_with_limit method)::it#rejects too large chunked body mastodon/spec/lib/request_spec.rb:108-111
    19.6: describe(response's body_with_limit method)::it#accepts body less than 1 megabyte by default mastodon/spec/lib/request_spec.rb:98-100
    19.6: describe(response's body_with_limit method)::it#rejects body more than 1 megabyte by default mastodon/spec/lib/request_spec.rb:93-96
    19.6: describe(.as_public_timeline)::it#only includes statuses with public visibility mastodon/spec/models/status_spec.rb:393-399
    19.6: context(Remotable module is included)::describe(#hoge_remote_url)::context(scheme is https, parsed_url.host isn't empty, and foo[attribute_name] != url)::context(an error raised during the request)::it#calls Rails.logger.debug mastodon/spec/models/concerns/remotable_spec.rb:189-191
    19.6: describe(.favourites_map)::it#contains true value mastodon/spec/models/status_spec.rb:261-263
    19.6: describe(.reblogs_map)::it#contains true value mastodon/spec/models/status_spec.rb:277-279
    19.6: Api::V1::AccountsController#none
    19.6: describe(#show)::context(account is not suspended and status is permitted)::it#assigns @account mastodon/spec/controllers/statuses_controller_spec.rb:46-49
    19.6: describe(#show)::context(account is not suspended and status is permitted)::it#assigns @stream_entry mastodon/spec/controllers/statuses_controller_spec.rb:58-61
    19.6: describe(#entry)::context(if status is not present)::it#appends content element saying status is deleted mastodon/spec/lib/ostatus/atom_serializer_spec.rb:434-440
    19.6: SearchService#perform_statuses_search! mastodon/app/services/search_service.rb:29-36
    19.5: FetchRemoteStatusService#confirmed_domain? mastodon/app/services/fetch_remote_status_service.rb:42-44
    19.5: describe(#follow_request_salmon)::it#appends title element with description mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1290-1295
    19.5: describe#validations             mastodon/spec/models/user_spec.rb:18-46
    19.5: describe(scopes)::describe(inactive)::it#returns a relation of inactive users mastodon/spec/models/user_spec.rb:76-80
    19.5: Api::V1::FollowsController#create mastodon/app/controllers/api/v1/follows_controller.rb:9-20
    19.5: UserMailer#confirmation_instructions mastodon/app/mailers/user_mailer.rb:11-22
    19.5: StatusFinder#status              mastodon/app/lib/status_finder.rb:10-22
    19.4: REST::StatusSerializer#muted     mastodon/app/serializers/rest/status_serializer.rb:67-72
    19.4: describe(GET #show)::context#when signed in mastodon/spec/controllers/settings/two_factor_authentications_controller_spec.rb:11-30
    19.4: Api::V1::Push::SubscriptionsController#create mastodon/app/controllers/api/v1/push/subscriptions_controller.rb:8-21
    19.4: describe(.call)::describe(with an exact match)::it#returns exact match first, and does not return duplicates mastodon/spec/services/account_search_service_spec.rb:94-100
    19.4: describe(#validate)::it#counts URLs as 23 characters flat mastodon/spec/validators/status_length_validator_spec.rb:28-33
    19.4: describe(#validate)::it#counts only the front part of remote usernames mastodon/spec/validators/status_length_validator_spec.rb:36-41
    19.4: describe##verb                   mastodon/spec/models/stream_entry_spec.rb:60-91
    19.4: describe(password_change)::it#renders password change notification mastodon/spec/mailers/user_mailer_spec.rb:66-68
    19.4: describe(email_changed)::it#renders email change notification mastodon/spec/mailers/user_mailer_spec.rb:78-80
    19.4: describe(helper_method :current_theme)::it#returns "default" when theme wasn't changed in admin settings mastodon/spec/controllers/application_controller_spec.rb:96-99
    19.4: context(without an oauth token)::describe(GET #show)::it#returns http unauthorized mastodon/spec/controllers/api/v1/apps/credentials_controller_spec.rb:37-39
    19.4: create_table#oauth_applications  mastodon/db/schema.rb:358-373
    19.4: describe(scopes)::describe(alphabetic)::it#sorts by alphabetic order of domain and username mastodon/spec/models/account_spec.rb:649-657
    19.4: describe(#call)::context(with Note object)::it#creates status mastodon/spec/services/activitypub/fetch_remote_status_service_spec.rb:33-37
    19.4: describe(#perform)::context(direct)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:120-124
    19.4: describe(#perform)::context(private)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:100-104
    19.4: describe(#perform)::context(unlisted)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:82-86
    19.4: describe(#perform)::context(public)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:64-68
    19.4: describe(#perform)::context(standalone)::it#creates status mastodon/spec/lib/activitypub/activity/create_spec.rb:39-43
    19.4: describe(#perform)::context(standalone)::it#missing to/cc defaults to direct privacy mastodon/spec/lib/activitypub/activity/create_spec.rb:46-50
    19.4: describe(perform)::context(when the follow does not exist)::it#catches a raise and returns true mastodon/spec/workers/after_remote_follow_worker_spec.rb:10-15
    19.4: describe(perform)::context(when the follow_request does not exist)::it#catches a raise and returns true mastodon/spec/workers/after_remote_follow_request_worker_spec.rb:10-15
    19.4: Admin::ActionLogsHelper#log_target_from_history mastodon/app/helpers/admin/action_logs_helper.rb:29-40
    19.3: describe(#object)::it#appends author element with account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1485-1491
    19.3: describe(#follow_salmon)::it#appends author element with account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1099-1105
    19.3: describe(#unfavourite_salmon)::it#appends author element with account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1007-1013
    19.3: describe(#favourite_salmon)::it#appends author element with account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:907-913
    19.3: describe(#unblock_salmon)::it#appends author element with account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:838-844
    19.3: describe(#block_salmon)::it#appends author element with account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:751-757
    19.3: describe(#following?)::it#returns true when the target is followed mastodon/spec/models/account_spec.rb:34-36
    19.3: describe(DELETE #destroy)::context(with a regular user)::it#does not delete redirect location with continue=true mastodon/spec/controllers/auth/sessions_controller_spec.rb:34-38
    19.3: StreamEntriesController#set_stream_entry mastodon/app/controllers/stream_entries_controller.rb:51-60
    19.2: AccountConversation::paginate_by_min_id mastodon/app/models/account_conversation.rb:45-48
    19.2: context(in a local status)::let#status mastodon/spec/services/fetch_link_card_service_spec.rb:70-70
    19.2: describe(#disable!)::it#disables user mastodon/spec/models/user_spec.rb:349-350
    19.2: describe(.[])::context(rails_initialized? is truthy)::context(Rails.cache does not exists)::context(RailsSettings::Settings.object returns truthy)::context(default_value is not a Hash)::it#returns db_val.value mastodon/spec/models/setting_spec.rb:81-82
    19.2: Api::V1::StatusesController#context mastodon/app/controllers/api/v1/statuses_controller.rb:24-34
    19.2: ActivityPub::Activity::Announce#perform mastodon/app/lib/activitypub/activity/announce.rb:4-24
    19.2: describe(.search_for)::it#ranks multiple matches higher mastodon/spec/models/account_spec.rb:401-408
    19.1: describe(PATCH #update)::context(success)::it#updates existing application mastodon/spec/controllers/settings/applications_controller_spec.rb:129-131
    19.1: describe(POST #create)::context(when fails to find status)::context(when successfully fetching oembed)::it#returns a right response mastodon/spec/controllers/api/web/embeds_controller_spec.rb:37-39
    19.1: describe(GET #show)::it#returns 404 if you dont own app mastodon/spec/controllers/settings/applications_controller_spec.rb:31-35
    19.1: describe(title)::it#returns site title on production enviroment mastodon/spec/helpers/application_helper_spec.rb:123-126
    19.1: describe(open_registrations?)::it#returns false when closed for registrations mastodon/spec/helpers/application_helper_spec.rb:78-83
    19.1: describe(open_registrations?)::it#returns true when open for registrations mastodon/spec/helpers/application_helper_spec.rb:70-75
    19.1: describe(POST #create)::context(using password authentication)::context#using an unconfirmed password mastodon/spec/controllers/auth/sessions_controller_spec.rb:154-164
    19.0: describe(DELETE #create)::it#expires invite mastodon/spec/controllers/invites_controller_spec.rb:67-69
    19.0: describe(DELETE #destroy)::it#expires invite mastodon/spec/controllers/admin/invites_controller_spec.rb:38-40
    19.0: describe(POST #enable)::it#enables custom emoji mastodon/spec/controllers/admin/custom_emojis_controller_spec.rb:99-101
    19.0: describe(POST #disable)::it#enables custom emoji mastodon/spec/controllers/admin/custom_emojis_controller_spec.rb:110-112
    19.0: describe(#reject_follow_request_salmon)::it#appends title element with description mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1409-1414
    19.0: describe(#authorize_follow_request_salmon)::it#appends title element with description mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1340-1347
    19.0: describe(#unblock_salmon)::it#appends title element with description mastodon/spec/lib/ostatus/atom_serializer_spec.rb:828-835
    19.0: describe(#block_salmon)::it#appends title element with description mastodon/spec/lib/ostatus/atom_serializer_spec.rb:741-748
    18.9: describe(GET #show)::it#returns http success with Atom mastodon/spec/controllers/stream_entries_controller_spec.rb:77-80
    18.9: AccountSearchService#search_service_results mastodon/app/services/account_search_service.rb:17-23
    18.9: ReblogService#call               mastodon/app/services/reblog_service.rb:11-29
    18.8: ActivityPub::OutboxesController#set_statuses mastodon/app/controllers/activitypub/outboxes_controller.rb:50-55
    18.8: describe(validations)::it#is invalid without a target_account mastodon/spec/models/follow_spec.rb:21-24
    18.8: describe#follow request slap     mastodon/spec/services/process_interaction_service_spec.rb:39-60
    18.8: context#given a relay            mastodon/spec/lib/activitypub/activity/reject_spec.rb:39-61
    18.8: describe(status delete slap)::it#deletes a record mastodon/spec/services/process_interaction_service_spec.rb:33-35
    18.8: StreamEntriesHelper#account_badge mastodon/app/helpers/stream_entries_helper.rb:37-48
    18.8: describe(#ancestors)::it#ignores deleted records mastodon/spec/models/concerns/status_threading_concern_spec.rb:47-55
    18.8: PushUpdateWorker#perform         mastodon/app/workers/push_update_worker.rb:6-14
    18.8: around#each                      mastodon/spec/controllers/api/v1/streaming_controller_spec.rb:6-10
    18.7: describe(#entry)::it#appends title element with status title mastodon/spec/lib/ostatus/atom_serializer_spec.rb:492-496
    18.7: describe#about/show.html.haml    mastodon/spec/views/about/show.html.haml_spec.rb:5-34
    18.7: describe(The catch all route)::describe(with a simple value)::it#returns a 404 page as html mastodon/spec/requests/catch_all_route_request_spec.rb:5-9
    18.7: describe(The catch all route)::describe(with an implied format)::it#returns a 404 page as html mastodon/spec/requests/catch_all_route_request_spec.rb:14-18
    18.7: shared_examples(before_action)::context(when account is suspended)::it#returns http status 410 mastodon/spec/controllers/stream_entries_controller_spec.rb:29-35
    18.7: Request#initialize               mastodon/app/lib/request.rb:11-22
    18.7: it#crawls links                  mastodon/spec/services/post_status_service_spec.rb:114-120
    18.7: describe(DELETE #destroy)::it#removes the subscription mastodon/spec/controllers/api/v1/push/subscriptions_controller_spec.rb:76-80
    18.7: describe(PUT #update)::context(when not attached to a status)::it#updates the description mastodon/spec/controllers/api/v1/media_controller_spec.rb:118-120
    18.7: Admin::SettingsController#update mastodon/app/controllers/admin/settings_controller.rb:53-67
    18.7: UnsubscribeService#call          mastodon/app/services/unsubscribe_service.rb:4-19
    18.6: describe(#show)::it#redirects to the file url when attached to a status mastodon/spec/controllers/media_controller_spec.rb:9-14
    18.6: describe#email                   mastodon/spec/services/notify_service_spec.rb:137-157
    18.6: describe(whitelist)::it#should not allow a user to be created with a specific blacklisted subdomain even if the top domain is whitelisted mastodon/spec/models/user_spec.rb:246-250
    18.6: describe(GET #edit)::it#returns http success mastodon/spec/controllers/auth/registrations_controller_spec.rb:34-38
    18.6: namespace(api)::namespace(v1)::resources(statuses)::scope#module mastodon/config/routes.rb:231-245
    18.6: ActivityPub::Activity::Create#text_from_content mastodon/app/lib/activitypub/activity/create.rb:205-212
    18.6: describe(before_action :store_current_location)::it#does not store location for user if it is devise controller mastodon/spec/controllers/application_controller_spec.rb:166-169
    18.6: DisallowedHashtagsValidator#validate mastodon/app/validators/disallowed_hashtags_validator.rb:4-10
    18.6: permissions(show?)::it#denies access when viewer is blocked mastodon/spec/policies/status_policy_spec.rb:17-22
    18.6: permissions(show?)::it#grants access when private and account is following viewer mastodon/spec/policies/status_policy_spec.rb:53-58
    18.6: describe(#push_to_home)::it#does not push when the given status's reblog is already inserted mastodon/spec/lib/feed_manager_spec.rb:276-282
    18.6: describe(GET #show)::it#returns http not found when account can not be found with alternate domains mastodon/spec/controllers/well_known/webfinger_controller_spec.rb:90-96
    18.6: describe(GET #index)::it#returns a csv of the blocking accounts mastodon/spec/controllers/settings/exports/blocked_accounts_controller_spec.rb:7-14
    18.6: describe(GET #index)::it#returns a csv of the following accounts mastodon/spec/controllers/settings/exports/following_accounts_controller_spec.rb:7-14
    18.6: describe(GET #index)::it#returns a csv of the muting accounts mastodon/spec/controllers/settings/exports/muted_accounts_controller_spec.rb:7-14
    18.5: describe(#entry)::it#does not append thr:in-reply-to element if not threaded mastodon/spec/lib/ostatus/atom_serializer_spec.rb:563-566
    18.5: describe(#entry)::it#does not append activity:object element if target is not present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:525-528
    18.5: describe(.call)::describe(when there is a domain but no exact match)::it#does not follow the remote account when resolve is false mastodon/spec/services/account_search_service_spec.rb:132-137
    18.5: describe(.call)::describe(should not include suspended accounts)::it#does not return suspended remote accounts mastodon/spec/services/account_search_service_spec.rb:151-156
    18.4: permissions(show?)::it#grants access when direct and viewer is mentioned mastodon/spec/policies/status_policy_spec.rb:33-37
    18.4: permissions(show?)::it#grants access when private and viewer is mentioned mastodon/spec/policies/status_policy_spec.rb:61-65
    18.4: StreamEntry#none
    18.4: let#activity                     mastodon/spec/services/notify_service_spec.rb:116-116
    18.4: Status#unlink_from_conversations mastodon/app/models/status.rb:479-486
    18.4: ActivityPub::Activity::Create#process_tags mastodon/app/lib/activitypub/activity/create.rb:81-91
    18.3: FeedManager#push_to_list         mastodon/app/lib/feed_manager.rb:42-47
    18.3: describe(When signed in as an admin)::describe#PUT #update mastodon/spec/controllers/admin/settings_controller_spec.rb:21-78
    18.3: shared_examples(before_action)::context(when activity is nil)::itraises ActiveRecord::RecordNotFound mastodon/spec/controllers/stream_entries_controller_spec.rb:40-47
    18.3: describe(#object)::it#does not append ostatus:conversation element if conversation_id is nil mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1541-1547
    18.3: describe(#reblogged?)::context(when the status is an original status)::it#is true when this account has reblogged it mastodon/spec/models/account_spec.rb:296-299
    18.3: describe(#reblogged?)::context(when the status is a reblog of another status)::it#is true when this account has reblogged it mastodon/spec/models/account_spec.rb:284-287
    18.3: describe(#favourited?)::context(when the status is a reblog of another status)::it#is is true when this account has favourited it mastodon/spec/models/account_spec.rb:246-249
    18.3: describe(#favourited?)::context(when the status is an original status)::it#is is true when this account has favourited it mastodon/spec/models/account_spec.rb:258-261
    18.3: describe(#perform)::context(with Announce)::it#deletes the reblog mastodon/spec/lib/activitypub/activity/undo_spec.rb:37-39
    18.3: context(protocol is :activitypub)::it#creates status mastodon/spec/services/fetch_remote_status_service_spec.rb:28-32
    18.3: describe(active_nav_class)::it#returns active when on the current page mastodon/spec/helpers/application_helper_spec.rb:5-9
    18.3: describe(active_nav_class)::it#returns empty string when not on current page mastodon/spec/helpers/application_helper_spec.rb:20-24
    18.3: describe(.call)::describe(searching local and remote users)::describe(when there is a domain)::describe(and there is no account provided)::it#uses search_for to find matches mastodon/spec/services/account_search_service_spec.rb:73-77
    18.2: describe(validations)::it#is invalid if account already follows too many people mastodon/spec/models/follow_spec.rb:27-31
    18.2: context(when account is not suspended)::it#sets link headers mastodon/spec/controllers/concerns/account_controller_concern_spec.rb:33-36
    18.2: FetchRemoteAccountService#trusted_domain? mastodon/app/services/fetch_remote_account_service.rb:41-44
    18.2: describe##get                    mastodon/spec/models/home_feed_spec.rb:8-41
    18.1: ActivityPub::ProcessAccountService#collection_total_items mastodon/app/services/activitypub/process_account_service.rb:171-179
    18.1: describe##mentions               mastodon/spec/models/stream_entry_spec.rb:96-120
    18.1: describe##locked?                mastodon/spec/models/remote_profile_spec.rb:120-139
    18.1: describe(human_locale)::it#finds the human readable local description from a key mastodon/spec/helpers/settings_helper_spec.rb:15-19
    18.1: describe(DELETE #destroy)::context(when session activation exists)::it#destroys session activation mastodon/spec/controllers/settings/sessions_controller_spec.rb:16-18
    18.1: create_table#custom_emojis       mastodon/db/schema.rb:154-168
    18.1: describe(#perform)::context(with valid host)::it#closes underlaying connection mastodon/spec/lib/request_spec.rb:64-66
    18.1: describe(#show)::context(account is not suspended and status is permitted)::it#returns a success mastodon/spec/controllers/statuses_controller_spec.rb:128-131
    18.1: describe(POST #create)::context(when parameters are invalid)::it#falls to create a note mastodon/spec/controllers/admin/account_moderation_notes_controller_spec.rb:28-30
    18.1: OStatus::Activity::Creation#account_from_href mastodon/app/lib/ostatus/activity/creation.rb:197-204
    18.0: describe(.call)::describe(searching local and remote users)::describe#when only '@' mastodon/spec/services/account_search_service_spec.rb:34-42
    18.0: describe(.call)::describe(searching local and remote users)::describe#when no domain mastodon/spec/services/account_search_service_spec.rb:46-58
    18.0: describe(#[]= and #[])::it#sets [key] = val mastodon/spec/lib/settings/scoped_settings_spec.rb:28-31
    18.0: it#sends delete activity to followers mastodon/spec/services/remove_status_service_spec.rb:41-42
    18.0: describe(DELETE #destroy)::context(with a suspended user)::it#redirects to home after sign out mastodon/spec/controllers/auth/sessions_controller_spec.rb:43-48
    18.0: Web::PushSubscription#push_payload mastodon/app/models/web/push_subscription.rb:64-76
    18.0: REST::StatusSerializer#favourited mastodon/app/serializers/rest/status_serializer.rb:51-56
    18.0: REST::StatusSerializer#reblogged mastodon/app/serializers/rest/status_serializer.rb:59-64
    18.0: REST::StatusSerializer#pinned    mastodon/app/serializers/rest/status_serializer.rb:75-80
    18.0: context(remote OStatus account)::describe#already followed account mastodon/spec/services/follow_service_spec.rb:145-162
    18.0: context(local account)::describe#already followed account, turning reblogs on mastodon/spec/services/follow_service_spec.rb:85-94
    18.0: context(local account)::describe#already followed account, turning reblogs off mastodon/spec/services/follow_service_spec.rb:72-81
    18.0: context(local account)::describe#already followed account mastodon/spec/services/follow_service_spec.rb:59-68
    18.0: describe(#get)::context#when feed is generated mastodon/spec/models/home_feed_spec.rb:16-28
    18.0: StatusesController#show          mastodon/app/controllers/statuses_controller.rb:26-41
    18.0: describe(POST #update)::context(with unknown mode)::it#returns an unknown mode error mastodon/spec/controllers/api/push_controller_spec.rb:51-55
    17.9: Settings::DeletesController#destroy mastodon/app/controllers/settings/deletes_controller.rb:13-20
    17.9: describe(favicon_path)::it#returns /favicon.ico on production enviromnent mastodon/spec/helpers/application_helper_spec.rb:63-65
    17.9: describe(.filter)::it#removes URLs that are unavailable mastodon/spec/lib/delivery_failure_tracker_spec.rb:45-49
    17.9: describe(#author)::context(when note is not present)::it#does not append poco:note element mastodon/spec/lib/ostatus/atom_serializer_spec.rb:166-169
    17.9: describe(#author)::context(when note is not present)::it#does not append summary element mastodon/spec/lib/ostatus/atom_serializer_spec.rb:172-175
    17.9: describe(#validate)::it#adds an error when text and content warning are over 500 characters total mastodon/spec/validators/status_length_validator_spec.rb:22-25
    17.8: ActivityPub::Activity::Like#perform mastodon/app/lib/activitypub/activity/like.rb:4-10
    17.8: Settings::MigrationsController#update mastodon/app/controllers/settings/migrations_controller.rb:12-21
    17.8: SearchService#full_text_searchable? mastodon/app/services/search_service.rb:63-66
    17.8: ResolveURLService#process_url    mastodon/app/services/resolve_url_service.rb:20-25
    17.8: describe(response's body_with_limit method)::it#uses binary encoding if Content-Type does not tell encoding mastodon/spec/lib/request_spec.rb:118-121
    17.8: describe(response's body_with_limit method)::it#uses binary encoding if Content-Type tells unknown encoding mastodon/spec/lib/request_spec.rb:123-126
    17.8: describe(response's body_with_limit method)::it#uses encoding specified by Content-Type mastodon/spec/lib/request_spec.rb:128-131
    17.8: ActivityPub::TagManager#uri_for  mastodon/app/lib/activitypub/tag_manager.rb:27-37
    17.8: describe(.initialize)::context(options[:following_map] is set)::it#sets @following merged with default_map and options[:following_map] mastodon/spec/presenters/account_relationships_presenter_spec.rb:37-38
    17.8: describe(.initialize)::context(options[:followed_by_map] is set)::it#sets @followed_by merged with default_map and options[:followed_by_map] mastodon/spec/presenters/account_relationships_presenter_spec.rb:45-46
    17.8: describe(.initialize)::context(options[:blocking_map] is set)::it#sets @blocking merged with default_map and options[:blocking_map] mastodon/spec/presenters/account_relationships_presenter_spec.rb:53-54
    17.8: describe(.initialize)::context(options[:muting_map] is set)::it#sets @muting merged with default_map and options[:muting_map] mastodon/spec/presenters/account_relationships_presenter_spec.rb:61-62
    17.8: describe(.initialize)::context(options[:requested_map] is set)::it#sets @requested merged with default_map and options[:requested_map] mastodon/spec/presenters/account_relationships_presenter_spec.rb:69-70
    17.8: describe(.initialize)::context(options[:domain_blocking_map] is set)::it#sets @domain_blocking merged with default_map and options[:domain_blocking_map] mastodon/spec/presenters/account_relationships_presenter_spec.rb:77-78
    17.8: feature(Log in)::scenario#A unconfirmed user is not able to log in mastodon/spec/features/log_in_spec.rb:34-39
    17.8: ActivityPub::NoteSerializer#virtual_tags mastodon/app/serializers/activitypub/note_serializer.rb:70-71
    17.8: ApplicationHelper#body_classes   mastodon/app/helpers/application_helper.rb:76-82
    17.8: Admin::AccountModerationNotesHelper#admin_account_link_to mastodon/app/helpers/admin/account_moderation_notes_helper.rb:4-11
    17.8: describe(GET #new)::context#when signed in mastodon/spec/controllers/settings/two_factor_authentication/confirmations_controller_spec.rb:24-30
    17.8: UnfavouriteService#create_notification mastodon/app/services/unfavourite_service.rb:13-20
    17.7: it#generates and keeps PuSH secret on successful call mastodon/spec/services/subscribe_service_spec.rb:13-16
    17.7: describe(POST #create)::it#redirects to account statuses page mastodon/spec/controllers/admin/statuses_controller_spec.rb:72-74
    17.7: AccountInteractions#domain_blocking_map mastodon/app/models/concerns/account_interactions.rb:47-50
    17.7: shared_examples(follow request salmon)::it#appends author element with account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:5-11
    17.7: Api::PushController#process_push_request mastodon/app/controllers/api/push_controller.rb:13-20
    17.6: TruncatePreviewCards#up          mastodon/db/migrate/20170901141119_truncate_preview_cards.rb:2-18
    17.6: Settings::FollowerDomainsController#show mastodon/app/controllers/settings/follower_domains_controller.rb:8-10
    17.6: REST::StatusSerializer#pinnable? mastodon/app/serializers/rest/status_serializer.rb:83-88
    17.6: it#attaches the given media to the created status mastodon/spec/services/post_status_service_spec.rb:123-134
    17.6: describe(GET #show)::it#returns the right response mastodon/spec/controllers/emojis_controller_spec.rb:12-14
    17.6: describe(#show)::context(account is not suspended and status is permitted)::it#assigns @status mastodon/spec/controllers/statuses_controller_spec.rb:52-55
    17.6: describe(#show)::context(account is not suspended and status is permitted)::it#assigns @type mastodon/spec/controllers/statuses_controller_spec.rb:64-67
    17.6: describe(#show)::context(account is not suspended and status is permitted)::it#assigns @ancestors for [] if it is not a reply mastodon/spec/controllers/statuses_controller_spec.rb:79-82
    17.6: describe(#show)::context(account is not suspended and status is permitted)::it#renders stream_entries/show mastodon/spec/controllers/statuses_controller_spec.rb:134-137
    17.6: describe(POST #follow)::context(with locked account)::it#returns JSON with following=false and requested=true mastodon/spec/controllers/api/v1/accounts_controller_spec.rb:72-76
    17.6: describe(POST #follow)::context(with unlocked account)::it#returns JSON with following=true and requested=false mastodon/spec/controllers/api/v1/accounts_controller_spec.rb:51-55
    17.6: describe(#feed)::it#appends author element mastodon/spec/lib/ostatus/atom_serializer_spec.rb:639-642
    17.5: it#sends subscription request to PuSH hub mastodon/spec/services/subscribe_service_spec.rb:7-10
    17.5: describe(#title)::context(if destroyed?)::it#returns "#{account.acct} deleted status" mastodon/spec/models/status_spec.rb:91-93
    17.5: ActivityPub::Activity::Remove#perform mastodon/app/lib/activitypub/activity/remove.rb:4-12
    17.5: NotificationMailer#mention       mastodon/app/mailers/notification_mailer.rb:8-17
    17.5: DeliveryFailureTracker::track_inverse_success! mastodon/app/lib/delivery_failure_tracker.rb:37-39
    17.5: StreamEntriesHelper#status_description mastodon/app/helpers/stream_entries_helper.rb:105-108
    17.4: ResolveAccountService#activitypub_ready? mastodon/app/services/resolve_account_service.rb:82-87
    17.4: ActivityPub::InboxesController#upgrade_account mastodon/app/controllers/activitypub/inboxes_controller.rb:28-35
    17.4: it#returns existing status when used twice with idempotency key mastodon/spec/services/post_status_service_spec.rb:178-182
    17.4: describe(#push_to_list)::it#does not push when the given status's reblog is already inserted mastodon/spec/lib/feed_manager_spec.rb:287-293
    17.4: describe(GET #show)::it#renders report mastodon/spec/controllers/admin/reports_controller_spec.rb:39-45
    17.4: describe(history)::let#report    mastodon/spec/models/report_spec.rb:105-105
    17.4: describe(#perform)::context(with Announce)::context(with atomUri)::it#deletes the reblog by atomUri mastodon/spec/lib/activitypub/activity/undo_spec.rb:48-50
    17.4: let#list                         mastodon/spec/controllers/api/v1/timelines/list_controller_spec.rb:9-9
    17.4: Import::RelationshipWorker#perform mastodon/app/workers/import/relationship_worker.rb:8-23
    17.4: describe(.as_public_timeline)::describe(with an account passed in)::it#excludes statuses from accounts from personally blocked domains mastodon/spec/models/status_spec.rb:531-537
    17.4: Admin::AccountModerationNotesController#create mastodon/app/controllers/admin/account_moderation_notes_controller.rb:7-19
    17.4: describe(token_for_app)::it#persists a token mastodon/spec/models/user_spec.rb:273-275
    17.4: describe(#content)::it#returns the text of the reblogged status mastodon/spec/models/status_spec.rb:149-151
    17.4: describe(helper_method :current_account)::it#returns account if signed in mastodon/spec/controllers/application_controller_spec.rb:69-72
    17.4: FollowLimitValidator#validate    mastodon/app/validators/follow_limit_validator.rb:7-9
    17.4: describe(update)::it#updates the user settings value for email notifications mastodon/spec/lib/user_settings_decorator_spec.rb:10-14
    17.4: describe(update)::it#updates the user settings value for interactions mastodon/spec/lib/user_settings_decorator_spec.rb:17-21
    17.3: describe(#follow_request_salmon)::it#appends id element with unique tag mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1284-1287
    17.3: describe(#ancestors)::it#returns conversation history mastodon/spec/models/concerns/status_threading_concern_spec.rb:16-17
    17.3: describe(#descendants)::it#returns replies mastodon/spec/models/concerns/status_threading_concern_spec.rb:91-92
    17.3: describe(#display_name)::it#calls author.at_xpath.content mastodon/spec/models/remote_profile_spec.rb:65-71
    17.3: describe(#note)::it#calls author.at_xpath.content mastodon/spec/models/remote_profile_spec.rb:78-85
    17.3: describe(#scope)::it#calls author.at_xpath.content mastodon/spec/models/remote_profile_spec.rb:92-98
    17.2: describe##web_domain?            mastodon/spec/lib/tag_manager_spec.rb:29-50
    17.2: describe##local_domain?          mastodon/spec/lib/tag_manager_spec.rb:4-25
    17.2: it#creates a new status          mastodon/spec/services/post_status_service_spec.rb:6-13
    17.2: BlockService#call                mastodon/app/services/block_service.rb:6-16
    17.2: describe(GET #new)::context(when signed in)::context(when app is already authorized)::it#does not redirect to callback with force_login=true mastodon/spec/controllers/oauth/authorizations_controller_spec.rb:57-59
    17.2: describe(#statuses_count)::it#counts statuses mastodon/spec/models/account_spec.rb:460-463
    17.2: describe(#track_failure!)::it#repeated calls on the same day do not count mastodon/spec/lib/delivery_failure_tracker_spec.rb:32-36
    17.2: describe(#follow_salmon)::it#appends id element with unique tag mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1093-1096
    17.2: describe(#favourite_salmon)::it#appends id element with unique tag mastodon/spec/lib/ostatus/atom_serializer_spec.rb:901-904
    17.2: it#logs error on subscription failure mastodon/spec/services/unsubscribe_service_spec.rb:16-21
    17.2: describe#status delete slap      mastodon/spec/services/process_interaction_service_spec.rb:10-35
    17.2: describe(#uri_to_local_id)::it#returns the local ID mastodon/spec/lib/activitypub/tag_manager_spec.rb:87-89
    17.1: Web::NotificationSerializer#body mastodon/app/serializers/web/notification_serializer.rb:35-37
    17.1: describe(#object)::it#appends title element with title mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1476-1482
    17.1: describe(The host_meta route)::describe(requested without accepts headers)::it#returns an xml response mastodon/spec/requests/host_meta_request_spec.rb:5-9
    17.1: describe(GET #finish_signup)::it#renders finish_signup mastodon/spec/controllers/auth/confirmations_controller_spec.rb:63-66
    17.1: context(with an oauth token)::describe(POST #destroy)::it#destroys the conversation mute mastodon/spec/controllers/api/v1/statuses/mutes_controller_spec.rb:45-46
    17.1: context(with an oauth token)::describe(POST #create)::it#creates a conversation mute mastodon/spec/controllers/api/v1/statuses/mutes_controller_spec.rb:28-29
    17.1: describe(#filtered?)::context(without an account)::context#when status policy does not allow show mastodon/spec/lib/status_filter_spec.rb:24-29
    17.1: describe(#filtered?)::context(with real account)::context#when status account is blocked mastodon/spec/lib/status_filter_spec.rb:41-46
    17.1: describe(#filtered?)::context(with real account)::context#when status account is muted mastodon/spec/lib/status_filter_spec.rb:58-63
    17.1: describe(#filtered?)::context(with real account)::context#when status policy does not allow show mastodon/spec/lib/status_filter_spec.rb:74-79
    17.1: context(Temporarily-unreachable ActivityPub user)::it#creates a mention mastodon/spec/services/process_mentions_service_spec.rb:57-58
    17.1: context(ActivityPub)::it#creates a mention mastodon/spec/services/process_mentions_service_spec.rb:36-37
    17.1: context(OStatus)::it#creates a mention mastodon/spec/services/process_mentions_service_spec.rb:17-18
    17.0: Setting::all_as_records          mastodon/app/models/setting.rb:41-50
    17.0: describe(GET #index)::context(with token)::context#with read scope and valid resource owner mastodon/spec/controllers/api/v1/favourites_controller_spec.rb:45-73
    17.0: describe(GET #index)::context(with token)::context#without read scope mastodon/spec/controllers/api/v1/favourites_controller_spec.rb:18-28
    17.0: PushConversationWorker#perform   mastodon/app/workers/push_conversation_worker.rb:6-13
    17.0: describe(POST #disable)::context(when user is admin)::context(when target user is admin)::it#fails to disable account mastodon/spec/controllers/admin/accounts_controller_spec.rb:207-209
    17.0: describe(POST #disable)::context(when user is not admin)::context(when target user is admin)::it#fails to disable account mastodon/spec/controllers/admin/accounts_controller_spec.rb:229-231
    17.0: describe(POST #disable)::context(when user is not admin)::context(when target user is not admin)::it#fails to disable account mastodon/spec/controllers/admin/accounts_controller_spec.rb:238-240
    17.0: describe(POST #memorialize)::context(when user is admin)::context(when target user is admin)::it#fails to memorialize account mastodon/spec/controllers/admin/accounts_controller_spec.rb:129-131
    17.0: describe(POST #memorialize)::context(when user is not admin)::context(when target user is admin)::it#fails to memorialize account mastodon/spec/controllers/admin/accounts_controller_spec.rb:151-153
    17.0: describe(POST #memorialize)::context(when user is not admin)::context(when target user is not admin)::it#fails to memorialize account mastodon/spec/controllers/admin/accounts_controller_spec.rb:160-162
    17.0: describe(#feed)::it#appends logo element with full asset URL for original account avatar mastodon/spec/lib/ostatus/atom_serializer_spec.rb:633-636
    17.0: describe(#uri_to_resource)::it#returns the local status for OStatus StreamEntry URL mastodon/spec/lib/activitypub/tag_manager_spec.rb:114-117
    17.0: describe(total_storage)::it#returns the total size of the media attachments mastodon/spec/models/export_spec.rb:42-45
    16.9: it#does still notify when sender's domain is blocked but sender is followed mastodon/spec/services/notify_service_spec.rb:35-38
    16.9: it#sends Reject->Follow to followers from blocked domain mastodon/spec/services/after_block_domain_from_account_service_spec.rb:20-23
    16.9: describe(user_facing_flashes)::it#returns user facing flashes mastodon/spec/helpers/flashes_helper_spec.rb:7-17
    16.9: describe(GET #show)::it#assigns @account mastodon/spec/controllers/settings/follower_domains_controller_spec.rb:17-20
    16.8: describe(The account show page)::it#Has an h-feed with correct number of h-entry objects in it mastodon/spec/requests/account_show_page_spec.rb:6-14
    16.8: describe(#show)::context(account is suspended)::it#returns gone mastodon/spec/controllers/statuses_controller_spec.rb:10-16
    16.8: NotificationMailer#favourite     mastodon/app/mailers/notification_mailer.rb:31-41
    16.8: NotificationMailer#reblog        mastodon/app/mailers/notification_mailer.rb:44-54
    16.8: describe(#object)::it#does not append thr:in-reply-to element if thread is nil mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1535-1538
    16.8: describe(#author)::it#does not append poco:displayName element with display name if not present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:270-273
    16.8: describe(.as_tag_timeline)::it#allows replies to be included mastodon/spec/models/status_spec.rb:590-596
    16.8: it#notifies streaming API of followers mastodon/spec/services/batched_remove_status_service_spec.rb:40-41
    16.8: it#notifies streaming API of author mastodon/spec/services/batched_remove_status_service_spec.rb:44-45
    16.8: describe(#demote!)::context(when user is not an admin)::context(when user is a moderator)::it#changes user into a plain user mastodon/spec/models/user_spec.rb:488-490
    16.8: describe(#demote!)::context(when user is not an admin)::context(when user is not a moderator)::it#does not change any fields mastodon/spec/models/user_spec.rb:497-499
    16.8: describe(#promote!)::context(when user is an admin)::context(when user is a moderator)::it#changes moderator filed false mastodon/spec/models/user_spec.rb:414-416
    16.8: describe(#promote!)::context(when user is an admin)::context(when user is not a moderator)::it#does not change status mastodon/spec/models/user_spec.rb:423-425
    16.8: describe(#promote!)::context(when user is not admin)::context(when user is a moderator)::it#changes user into an admin mastodon/spec/models/user_spec.rb:436-438
    16.8: describe(#promote!)::context(when user is not admin)::context(when user is not a moderator)::it#changes user into a moderator mastodon/spec/models/user_spec.rb:445-447
    16.8: describe(#demote!)::context(when user is an admin)::context(when user is a moderator)::it#changes user into a moderator mastodon/spec/models/user_spec.rb:466-468
    16.8: describe(#demote!)::context(when user is an admin)::context(when user is not a moderator)::it#changes user into a moderator mastodon/spec/models/user_spec.rb:475-477
    16.8: describe(.[])::context(rails_initialized? is truthy)::context(Rails.cache does not exists)::itcalls RailsSettings::Settings.object mastodon/spec/models/setting_spec.rb:58-60
    16.8: describe(GET #index)::context(with exclude replies)::it#returns http success mastodon/spec/controllers/api/v1/accounts/statuses_controller_spec.rb:35-38
    16.8: describe(GET #index)::context(with only pinned)::it#returns http success mastodon/spec/controllers/api/v1/accounts/statuses_controller_spec.rb:47-50
    16.8: Mastodon::MigrationHelpers#bulk_queue_background_migration_jobs_by_range mastodon/lib/mastodon/migration_helpers.rb:928-948
    16.8: Admin::CustomEmojisController#copy mastodon/app/controllers/admin/custom_emojis_controller.rb:51-65
    16.8: describe(#title)::context(unless destroyed?)::context(unless reblog?)::it#returns "New status by #{account.acct}" mastodon/spec/models/status_spec.rb:106-108
    16.8: Twitter::Regex#none
    16.8: it#logs error on connection failure mastodon/spec/services/unsubscribe_service_spec.rb:24-29
    16.8: describe#POST #unmute            mastodon/spec/controllers/api/v1/accounts_controller_spec.rb:207-224
    16.8: describe#POST #mute with notifications set to false mastodon/spec/controllers/api/v1/accounts_controller_spec.rb:179-204
    16.8: describe#POST #unblock           mastodon/spec/controllers/api/v1/accounts_controller_spec.rb:131-148
    16.8: describe#POST #mute              mastodon/spec/controllers/api/v1/accounts_controller_spec.rb:151-176
    16.8: describe#POST #block             mastodon/spec/controllers/api/v1/accounts_controller_spec.rb:107-128
    16.8: describe#POST #unfollow          mastodon/spec/controllers/api/v1/accounts_controller_spec.rb:87-104
    16.7: UnfollowService#create_notification mastodon/app/services/unfollow_service.rb:37-42
    16.7: UnblockService#create_notification mastodon/app/services/unblock_service.rb:14-19
    16.7: RejectFollowService#create_notification mastodon/app/services/reject_follow_service.rb:13-18
    16.7: BlockService#create_notification mastodon/app/services/block_service.rb:21-26
    16.7: AuthorizeFollowService#create_notification mastodon/app/services/authorize_follow_service.rb:18-23
    16.7: ActivityPub::Activity::Undo#undo_announce mastodon/app/lib/activitypub/activity/undo.rb:21-30
    16.7: describe(#local?)::it#returns false if a remote URI is set mastodon/spec/models/status_spec.rb:15-18
    16.7: describe(POST #create)::context(video/webm)::xit#returns media ID in JSON mastodon/spec/controllers/api/v1/media_controller_spec.rb:99-100
    16.7: describe(POST #create)::context(image/gif)::it#returns media ID in JSON mastodon/spec/controllers/api/v1/media_controller_spec.rb:77-78
    16.7: describe(POST #create)::context(image/jpeg)::it#returns media ID in JSON mastodon/spec/controllers/api/v1/media_controller_spec.rb:55-56
    16.7: UniqueUsernameValidator#validate mastodon/app/validators/unique_username_validator.rb:4-12
    16.7: describe(before_action :store_current_location)::it#stores location for user if it is not devise controller mastodon/spec/controllers/application_controller_spec.rb:156-159
    16.7: it#requires administrator or moderator mastodon/spec/controllers/admin/base_controller_spec.rb:12-17
    16.7: it#renders admin layout as a moderator mastodon/spec/controllers/admin/base_controller_spec.rb:20-25
    16.7: it#renders admin layout as an admin mastodon/spec/controllers/admin/base_controller_spec.rb:27-32
    16.6: ActivityPub::DeliveryWorker#perform mastodon/app/workers/activitypub/delivery_worker.rb:13-25
    16.6: describe(when signed in)::it#tracks when sign in is older than one day mastodon/spec/controllers/concerns/user_tracking_concern_spec.rb:38-43
    16.6: context(with a true notifications parameter)::it#mutes notifications from the account mastodon/spec/services/mute_service_spec.rb:49-52
    16.6: ThreadResolveWorker#none
    16.6: Mastodon::MigrationHelpers#replace_sql mastodon/lib/mastodon/migration_helpers.rb:843-857
    16.6: describe(GET #index)::context(when format is json)::subject#response mastodon/spec/controllers/following_accounts_controller_spec.rb:28-28
    16.6: describe(POST #reject)::it#removes follow request mastodon/spec/controllers/api/v1/follow_requests_controller_spec.rb:54-55
    16.6: describe#whitelist               mastodon/spec/models/user_spec.rb:213-250
    16.6: describe(.[])::context#rails_initialized? is truthy mastodon/spec/models/setting_spec.rb:31-110
    16.6: describe(POST #create)::it#returns client ID and client secret mastodon/spec/controllers/api/v1/apps_controller_spec.rb:19-23
    16.6: describe(#validate)::it#adds an error when the username is already used with ignoring dots mastodon/spec/validators/unique_username_validator_spec.rb:18-23
    16.6: describe#Local domain user methods mastodon/spec/models/account_spec.rb:57-78
    16.5: CustomFilter#none
    16.5: context(remote OStatus account)::describe#locked account mastodon/spec/services/follow_service_spec.rb:100-116
    16.5: describe#POST #resernd           mastodon/spec/controllers/admin/confirmations_controller_spec.rb:34-60
    16.5: Auth::RegistrationsController#build_resource mastodon/app/controllers/auth/registrations_controller.rb:24-30
    16.5: ActivityPub::Activity::Block#perform mastodon/app/lib/activitypub/activity/block.rb:4-10
    16.5: describe(#on_behalf_of)::it#when used, adds signature header mastodon/spec/lib/request_spec.rb:28-30
    16.5: describe(#refresh!)::context(domain is present)::it#calls ResolveAccountService#call mastodon/spec/models/account_spec.rb:197-199
    16.5: describe(#perform)::context(with Accept)::it#deletes follow from recipient to sender mastodon/spec/lib/activitypub/activity/undo_spec.rb:70-72
    16.5: describe(#perform)::context(with Accept)::it#creates a follow request from recipient to sender mastodon/spec/lib/activitypub/activity/undo_spec.rb:75-77
    16.5: describe(#perform)::context(with Block)::it#deletes block from sender to recipient mastodon/spec/lib/activitypub/activity/undo_spec.rb:97-99
    16.5: describe(#perform)::context(with Follow)::it#deletes follow from sender to recipient mastodon/spec/lib/activitypub/activity/undo_spec.rb:119-121
    16.5: describe(#perform)::context(with Like)::it#deletes favourite from sender to status mastodon/spec/lib/activitypub/activity/undo_spec.rb:141-143
    16.5: describe(PUT #update)::it#returns http success mastodon/spec/controllers/api/v1/lists_controller_spec.rb:54-55
    16.5: shared_examples(forbidden for wrong scope)::it#returns http forbidden mastodon/spec/controllers/api/v1/domain_blocks_controller_spec.rb:17-18
    16.5: BackupService#dump_media_attachments! mastodon/app/services/backup_service.rb:63-69
    16.5: describe##unfollow!              mastodon/spec/models/concerns/account_interactions_spec.rb:251-264
    16.5: Mastodon::Snowflake::id_at       mastodon/lib/mastodon/snowflake.rb:141-145
    16.5: describe(Link headers)::describe(on the account show page)::it#contains webfinger url in link header mastodon/spec/requests/link_headers_spec.rb:13-17
    16.5: describe(Link headers)::describe(on the account show page)::it#contains atom url in link header mastodon/spec/requests/link_headers_spec.rb:20-24
    16.4: describe(#push_to_home)::context(reblogs)::it#saves reblogs of unseen statuses mastodon/spec/lib/feed_manager_spec.rb:197-202
    16.4: it#delivers status to hashtag    mastodon/spec/services/fan_out_on_write_service_spec.rb:30-31
    16.4: describe(detect)::it#detects english language for basic strings mastodon/spec/lib/language_detector_spec.rb:47-56
    16.4: StatusFilter#filtered?           mastodon/app/lib/status_filter.rb:12-15
    16.4: describe(#muting?)::context(muting target_account)::it#returns true mastodon/spec/models/concerns/account_interactions_spec.rb:404-407
    16.3: StatusThreadingConcern#ancestor_ids mastodon/app/models/concerns/status_threading_concern.rb:16-26
    16.3: describe(GET #index)::describe(with no options)::it#includes reblog mastodon/spec/controllers/api/v1/notifications_controller_spec.rb:70-71
    16.3: describe(GET #index)::describe(with no options)::it#includes mention mastodon/spec/controllers/api/v1/notifications_controller_spec.rb:74-75
    16.3: describe(GET #index)::describe(with no options)::it#includes favourite mastodon/spec/controllers/api/v1/notifications_controller_spec.rb:78-79
    16.3: describe(GET #index)::describe(with no options)::it#includes follow mastodon/spec/controllers/api/v1/notifications_controller_spec.rb:82-83
    16.3: describe(GET #index)::describe(with excluded mentions)::it#includes reblog mastodon/spec/controllers/api/v1/notifications_controller_spec.rb:96-97
    16.3: describe(GET #index)::describe(with excluded mentions)::it#excludes mention mastodon/spec/controllers/api/v1/notifications_controller_spec.rb:100-101
    16.3: describe(GET #index)::describe(with excluded mentions)::it#includes favourite mastodon/spec/controllers/api/v1/notifications_controller_spec.rb:104-105
    16.3: describe(GET #index)::describe(with excluded mentions)::it#includes follow mastodon/spec/controllers/api/v1/notifications_controller_spec.rb:108-109
    16.3: describe(#local_uri?)::it#returns true for local URIs mastodon/spec/lib/activitypub/tag_manager_spec.rb:80-82
    16.3: describe(#uri_to_resource)::it#returns the local account mastodon/spec/lib/activitypub/tag_manager_spec.rb:94-96
    16.3: describe(#uri_to_resource)::it#returns the local status for ActivityPub URI mastodon/spec/lib/activitypub/tag_manager_spec.rb:104-106
    16.3: describe(#uri_to_resource)::it#returns the local status for OStatus tag: URI mastodon/spec/lib/activitypub/tag_manager_spec.rb:109-111
    16.3: describe(GET #show)::context#with invalid subscription mastodon/spec/controllers/api/subscriptions_controller_spec.rb:23-30
    16.2: describe#.default_settings       mastodon/spec/models/setting_spec.rb:164-184
    16.2: Formatter#link_to_url            mastodon/app/lib/formatter.rb:202-210
    16.2: describe(POST #create)::context(using password authentication)::context(logging in from the user's page)::context(in non-single user mode)::it#redirects back to the user's page mastodon/spec/controllers/auth/sessions_controller_spec.rb:186-187
    16.2: AccountConversation::participants_from_status mastodon/app/models/account_conversation.rb:87-88
    16.1: Favourite#none
    16.1: Invite#none
    16.1: ActivityPub::Activity::Create#perform mastodon/app/lib/activitypub/activity/create.rb:7-19
    16.1: ActivityPub::TagManager#url_for  mastodon/app/lib/activitypub/tag_manager.rb:15-23
    16.1: it#does not notify when conversation is muted mastodon/spec/services/notify_service_spec.rb:118-120
    16.1: describe(#url_for)::context(person object)::it#returns the URL for account mastodon/spec/lib/tag_manager_spec.rb:158-160
    16.1: describe(#uri_for)::context(person object)::it#returns the URL for account mastodon/spec/lib/ostatus/tag_manager_spec.rb:64-66
    16.1: describe(POST #enable)::context(when user is not admin)::it#fails to enable account mastodon/spec/controllers/admin/accounts_controller_spec.rb:187-189
    16.1: describe(before_validation)::it#keeps conversation of parent node mastodon/spec/models/status_spec.rb:666-668
    16.1: NotifyService#call               mastodon/app/services/notify_service.rb:4-17
    16.0: describe#PATCH #finish_signup    mastodon/spec/controllers/auth/confirmations_controller_spec.rb:69-91
    16.0: describe(.search_for)::it#accepts arbitrary limits mastodon/spec/models/account_spec.rb:395-398
    16.0: BlockDomainService#clear_account_attachments! mastodon/app/services/block_domain_service.rb:60-66
    16.0: describe(#sign!)::it#can be verified again mastodon/spec/lib/activitypub/linked_data_signature_spec.rb:75-76
    16.0: describe(.all_as_records)::context(records includes Setting with var as the key)::it#includes the original Setting mastodon/spec/models/setting_spec.rb:135-137
    16.0: Settings::PreferencesController#update mastodon/app/controllers/settings/preferences_controller.rb:10-18
    16.0: BlockDomainService#clear_account_images! mastodon/app/services/block_domain_service.rb:52-56
    16.0: describe(GET #new)::it#assigns a new domain block mastodon/spec/controllers/admin/domain_blocks_controller_spec.rb:31-35
    16.0: describe(GET #new)::it#assigns a new email black mastodon/spec/controllers/admin/email_domain_blocks_controller_spec.rb:33-37
    15.9: AccountFinderConcern::AccountFinder#matching_domain mastodon/app/models/concerns/account_finder_concern.rb:54-58
    15.9: describe(media_attachments)::it#returns media attachments from statuses mastodon/spec/models/report_spec.rb:15-21
    15.9: describe(#perform)::context(with public status)::it#delivers to followers mastodon/spec/workers/activitypub/distribution_worker_spec.rb:20-22
    15.9: describe(#perform)::context(with private status)::it#delivers to followers mastodon/spec/workers/activitypub/distribution_worker_spec.rb:31-33
    15.9: describe(processing a feed)::context(when domain does not reject media)::it#creates posts mastodon/spec/services/process_feed_service_spec.rb:31-33
    15.9: describe(processing a feed)::context(when domain does not reject media)::it#ignores delete statuses unless they existed before mastodon/spec/services/process_feed_service_spec.rb:46-48
    15.9: describe(processing a feed)::context(when domain does not reject media)::it#does not create statuses for favourites mastodon/spec/services/process_feed_service_spec.rb:58-60
    15.9: describe(processing a feed)::context(when domain is set to reject media)::it#creates posts mastodon/spec/services/process_feed_service_spec.rb:91-93
    15.9: describe(.[])::context(rails_initialized? is falsey)::itcalls RailsSettings::Base#[] mastodon/spec/models/setting_spec.rb:25-27
    15.9: describe(.[])::context(rails_initialized? is truthy)::itcalls not RailsSettings::Base#[] mastodon/spec/models/setting_spec.rb:40-42
    15.9: describe(GET #index)::context(with only media)::it#returns http success mastodon/spec/controllers/api/v1/accounts/statuses_controller_spec.rb:23-26
    15.9: describe(.in_chosen_languages)::context(for accounts with language filters)::it#does not include statuses in not in chosen languages mastodon/spec/models/status_spec.rb:287-289
    15.9: describe(.in_chosen_languages)::context(for accounts with language filters)::it#includes status with unknown language mastodon/spec/models/status_spec.rb:292-294
    15.9: describe(#cc)::it#returns followers collection for public status mastodon/spec/lib/activitypub/tag_manager_spec.rb:47-49
    15.9: describe(#to)::it#returns followers collection for unlisted status mastodon/spec/lib/activitypub/tag_manager_spec.rb:28-30
    15.9: describe(#to)::it#returns followers collection for private status mastodon/spec/lib/activitypub/tag_manager_spec.rb:33-35
    15.8: describe#POST #disable           mastodon/spec/controllers/admin/custom_emojis_controller_spec.rb:105-112
    15.8: describe#POST #enable            mastodon/spec/controllers/admin/custom_emojis_controller_spec.rb:94-101
    15.8: Rack::Request#trusted_proxy?     mastodon/config/initializers/trusted_proxies.rb:3-7
    15.8: Mastodon::MigrationHelpers#check_trigger_permissions! mastodon/lib/mastodon/migration_helpers.rb:880-895
    15.8: Fabricator#media_attachment      mastodon/spec/fabricators/media_attachment_fabricator.rb:1-14
    15.8: context(without an oauth token)::context(with a public status)::describe#GET #index mastodon/spec/controllers/api/v1/statuses/reblogged_by_accounts_controller_spec.rb:53-60
    15.8: context(without an oauth token)::context(with a private status)::describe#GET #index mastodon/spec/controllers/api/v1/statuses/reblogged_by_accounts_controller_spec.rb:38-45
    15.8: AccountHeader#none
    15.8: describe(#validate)::it#adds an error when text is over 500 characters mastodon/spec/validators/status_length_validator_spec.rb:16-19
    15.8: describe(#validate)::it#adds an error when content warning is over 500 characters mastodon/spec/validators/status_length_validator_spec.rb:10-13
    15.8: Pubsubhubbub::DistributionWorker#perform mastodon/app/workers/pubsubhubbub/distribution_worker.rb:8-16
    15.8: describe(before_validation)::it#sets `local` to false for status by remote account mastodon/spec/models/status_spec.rb:675-677
    15.8: context(given a relay)::it#marks the relay as rejected mastodon/spec/lib/activitypub/activity/reject_spec.rb:59-61
    15.8: context(given a relay)::it#marks the relay as accepted mastodon/spec/lib/activitypub/activity/accept_spec.rb:59-61
    15.8: describe(GET #new)::shared_examples(stores location for user)::it#stores location for user mastodon/spec/controllers/oauth/authorizations_controller_spec.rb:16-18
    15.8: StatusPolicy#show?               mastodon/app/policies/status_policy.rb:14-21
    15.7: describe(#replies_count)::it#is the number of replies mastodon/spec/models/status_spec.rb:195-197
    15.7: it#mutes account                 mastodon/spec/services/mute_service_spec.rb:30-33
    15.7: context(without specifying a notifications parameter)::it#mutes notifications from the account mastodon/spec/services/mute_service_spec.rb:37-40
    15.7: describe(POST #create)::context(when signed in)::describe(when user requires otp for login already)::it#redirects to show page mastodon/spec/controllers/settings/two_factor_authentications_controller_spec.rb:50-54
    15.7: describe(DELETE #destroy)::context(with a regular user)::it#redirects to home after sign out mastodon/spec/controllers/auth/sessions_controller_spec.rb:27-31
    15.7: describe(GET #index)::context(with token)::context(with read scope and valid resource owner)::it#does not add pagination headers if not necessary mastodon/spec/controllers/api/v1/favourites_controller_spec.rb:70-73
    15.7: ActivityPub::FetchFeaturedCollectionService#call mastodon/app/services/activitypub/fetch_featured_collection_service.rb:6-19
    15.7: Expireable#none
    15.7: permissions(show?)::it#grants access when direct and account is viewer mastodon/spec/policies/status_policy_spec.rb:27-30
    15.7: permissions(show?)::it#grants access when private and account is viewer mastodon/spec/policies/status_policy_spec.rb:47-50
    15.7: describe(#disable_two_factor!)::it#saves cleared otp_backup_codes mastodon/spec/models/user_spec.rb:166-169
    15.7: describe(#object)::it#appends updated element with updated date mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1469-1473
    15.7: JsonLdHelper#fetch_resource_without_id_validation mastodon/app/helpers/jsonld_helper.rb:66-73
    15.7: describe(.as_public_timeline)::describe(with an account passed in)::it#excludes statuses from accounts blocked by the account mastodon/spec/models/status_spec.rb:504-510
    15.7: describe(.as_public_timeline)::describe(with an account passed in)::it#excludes statuses from accounts who have blocked the account mastodon/spec/models/status_spec.rb:513-519
    15.7: describe(.as_public_timeline)::describe(with an account passed in)::it#excludes statuses from accounts muted by the account mastodon/spec/models/status_spec.rb:522-528
    15.6: feature#Log in                   mastodon/spec/features/log_in_spec.rb:3-45
    15.6: context#remote ActivityPub account mastodon/spec/services/follow_service_spec.rb:167-180
    15.6: let!#alice                       mastodon/spec/workers/pubsubhubbub/distribution_worker_spec.rb:6-6
    15.6: describe(home timeline)::let#home_timeline_key mastodon/spec/services/mute_service_spec.rb:14-14
    15.6: describe(token_for_app)::it#is nil if user does not own app mastodon/spec/models/user_spec.rb:278-281
    15.6: describe(revoke_request!)::it#revokes the follow relation mastodon/spec/models/follow_spec.rb:60-62
    15.6: describe(revoke_request!)::it#creates a follow request mastodon/spec/models/follow_spec.rb:65-67
    15.6: describe(#perform)::it#creates a pin mastodon/spec/lib/activitypub/activity/add_spec.rb:21-23
    15.6: describe(POST #create)::it#does not create for user who is not signed in mastodon/spec/controllers/account_unfollow_controller_spec.rb:19-21
    15.6: describe(.search_for)::it#limits by 10 by default mastodon/spec/models/account_spec.rb:389-392
    15.6: AccountAvatar#none
    15.6: describe(GET #show)::context#when user is updating email mastodon/spec/controllers/auth/confirmations_controller_spec.rb:35-49
    15.6: describe(GET #show)::context#when user is unconfirmed mastodon/spec/controllers/auth/confirmations_controller_spec.rb:17-31
    15.5: describe(#expired?)::it#return true when expires_at is past mastodon/spec/models/subscription_spec.rb:9-11
    15.5: describe(#expired?)::it#return false when expires_at is future mastodon/spec/models/subscription_spec.rb:14-16
    15.5: describe(.[])::context(rails_initialized? is truthy)::context(Rails.cache exists)::it#does not query the database mastodon/spec/models/setting_spec.rb:101-106
    15.5: Follow#none
    15.5: describe(#fetch_resource)::context(when the second argument is false)::it#returns resource even if the retrieved ID and the given URI does not match mastodon/spec/helpers/jsonld_helper_spec.rb:34-38
    15.5: describe(#fetch_resource)::context(when the second argument is false)::it#returns nil if the object identified by the given URI and the object identified by the retrieved ID does not match mastodon/spec/helpers/jsonld_helper_spec.rb:41-45
    15.5: create_table#oauth_access_tokens mastodon/db/schema.rb:344-356
    15.5: create_table#reports             mastodon/db/schema.rb:430-442
    15.5: create_table#session_activations mastodon/db/schema.rb:444-456
    15.5: describe(GET #new)::it#renders new page mastodon/spec/controllers/admin/custom_emojis_controller_spec.rb:28-31
    15.5: CustomEmoji::from_text           mastodon/app/models/custom_emoji.rb:56-63
    15.5: Api::Web::EmbedsController#create mastodon/app/controllers/api/web/embeds_controller.rb:8-18
    15.5: describe(descriptions for remote attachments)::it#are cut off at 140 characters mastodon/spec/models/media_attachment_spec.rb:139-142
    15.5: describe#home timeline           mastodon/spec/services/mute_service_spec.rb:11-26
    15.5: Scheduler::EmailScheduler#eligible_users mastodon/app/workers/scheduler/email_scheduler.rb:17-23
    15.4: context(without an oauth token)::context(with a public status)::describe(GET #context)::it#returns http success mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:118-120
    15.4: context(without an oauth token)::context(with a private status)::describe(GET #context)::it#returns http unautharized mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:89-91
    15.4: FeedManager#unmerge_from_timeline mastodon/app/lib/feed_manager.rb:98-103
    15.4: describe(with delete action)::it#do not call RemovalWorker mastodon/spec/models/form/status_batch_spec.rb:47-49
    15.4: describe(with delete action)::it#call RemovalWorker mastodon/spec/models/form/status_batch_spec.rb:42-44
    15.4: describe(POST #create)::it#redirects to report page mastodon/spec/controllers/admin/reported_statuses_controller_spec.rb:54-56
    15.4: AddFromAccountIdToNotifications#up mastodon/db/migrate/20161203164520_add_from_account_id_to_notifications.rb:2-8
    15.4: describe#regenerate              mastodon/spec/controllers/settings/applications_controller_spec.rb:176-184
    15.4: describe(helper_method :new_user)::it#returns a new User mastodon/spec/controllers/about_controller_spec.rb:45-48
    15.4: VerifyAccountLinksWorker#perform mastodon/app/workers/verify_account_links_worker.rb:8-18
    15.4: it#creates a status for the given application mastodon/spec/services/post_status_service_spec.rb:58-64
    15.3: shared_examples(ScopedSettings)::xit#does not mutate defaults via the cache mastodon/spec/support/examples/lib/settings/scoped_settings.rb:66-72
    15.3: main#sign                        mastodon/spec/lib/activitypub/linked_data_signature_spec.rb:80-84
    15.3: describe(GET #new)::context(when signed in)::context(when app is already authorized)::it#redirects to callback mastodon/spec/controllers/oauth/authorizations_controller_spec.rb:52-54
    15.3: namespace#settings               mastodon/config/routes.rb:83-114
    15.3: describe(#filtered?)::context(without an account)::context#when status account is silenced mastodon/spec/lib/status_filter_spec.rb:16-21
    15.3: describe(#filtered?)::context(with real account)::context#when status account is silenced mastodon/spec/lib/status_filter_spec.rb:66-71
    15.3: describe(#object)::it#appends published element with created date mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1463-1466
    15.3: describe(#feed)::it#appends id element with account Atom URL mastodon/spec/lib/ostatus/atom_serializer_spec.rb:603-606
    15.3: describe(#feed)::it#appends title element with account display name if present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:609-612
    15.3: describe(#feed)::it#does not append title element with account username if account display name is not present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:615-618
    15.3: describe(#feed)::it#appends subtitle element with account note mastodon/spec/lib/ostatus/atom_serializer_spec.rb:621-624
    15.3: describe(#feed)::it#appends updated element with date account got updated mastodon/spec/lib/ostatus/atom_serializer_spec.rb:627-630
    15.3: describe(#entry)::it#appends published element with created date mastodon/spec/lib/ostatus/atom_serializer_spec.rb:480-483
    15.3: describe(#entry)::it#appends updated element with updated date mastodon/spec/lib/ostatus/atom_serializer_spec.rb:486-489
    15.3: describe(#author)::it#appends email element with username and domain for local account mastodon/spec/lib/ostatus/atom_serializer_spec.rb:194-197
    15.3: describe(#author)::it#appends email element with username and domain for remote user mastodon/spec/lib/ostatus/atom_serializer_spec.rb:200-203
    15.3: describe(before_action :check_suspension)::it#does nothing if user who signed in is not suspended mastodon/spec/controllers/application_controller_spec.rb:184-187
    15.3: describe(before_action :check_suspension)::it#returns http 403 if user who signed in is suspended mastodon/spec/controllers/application_controller_spec.rb:190-193
    15.3: Formatter#encode_and_link_urls   mastodon/app/lib/formatter.rb:101-116
    15.3: describe(#proper)::it#is the source status for reblogs mastodon/spec/models/status_spec.rb:229-231
    15.3: describe(#target)::it#returns the reblogged status mastodon/spec/models/status_spec.rb:165-167
    15.3: Api::V1::Accounts::CredentialsController#user_settings_params mastodon/app/controllers/api/v1/accounts/credentials_controller.rb:27-35
    15.3: ActivityPub::Activity::Undo#undo_like mastodon/app/lib/activitypub/activity/undo.rb:52-61
    15.2: describe(#hub_link)::it#calls #link_href_from_xml mastodon/spec/models/remote_profile_spec.rb:56-58
    15.2: describe(#avatar)::it#calls #link_href_from_xml mastodon/spec/models/remote_profile_spec.rb:105-107
    15.2: describe(#header)::it#calls #link_href_from_xml mastodon/spec/models/remote_profile_spec.rb:114-116
    15.2: describe(.[])::context(rails_initialized? is truthy)::context(Rails.cache exists)::it#returns the cached value mastodon/spec/models/setting_spec.rb:109-110
    15.2: describe(POST #create)::context(using password authentication)::context(using an unconfirmed password)::it#shows a translated login error mastodon/spec/controllers/auth/sessions_controller_spec.rb:163-164
    15.2: describe(POST #create)::context(using two-factor authentication)::context#using upcase email and password mastodon/spec/controllers/auth/sessions_controller_spec.rb:214-220
    15.2: describe(POST #create)::context(using password authentication)::context#using email with uppercase letters mastodon/spec/controllers/auth/sessions_controller_spec.rb:126-136
    15.2: ActivityPub::UpdateDistributionWorker#perform mastodon/app/workers/activitypub/update_distribution_worker.rb:8-20
    15.2: shared_examples(status attributes)::it#does not append summary element with spoiler text if not present mastodon/spec/lib/ostatus/atom_serializer_spec.rb:74-77
    15.2: describe(#validate)::it#adds an error when the username is already used with ignoring cases mastodon/spec/validators/unique_username_validator_spec.rb:26-30
    15.2: StreamEntriesHelper#media_summary mastodon/app/helpers/stream_entries_helper.rb:82-97
    15.1: AuthorExtractor#author_from_xml  mastodon/app/services/concerns/author_extractor.rb:4-21
    15.1: ActivityPub::OutboxesController#outbox_presenter mastodon/app/controllers/activitypub/outboxes_controller.rb:21-38
    15.1: context(with an OStatus account)::it#returns an already existing remote account mastodon/spec/services/resolve_account_service_spec.rb:42-46
    15.1: context(protocol is :ostatus)::it#does not update account information if XML comes from an unverified domain mastodon/spec/services/fetch_remote_account_service_spec.rb:50-65
    15.1: describe(scopes)::describe(confirmed)::it#returns an array of users who are confirmed mastodon/spec/models/user_spec.rb:68-71
    15.1: describe(.permitted_for)::context#given blocked account mastodon/spec/models/status_spec.rb:627-632
    15.1: describe(.permitted_for)::context#given followed account mastodon/spec/models/status_spec.rb:640-645
    15.1: describe(POST #create)::context(when signed in)::describe(when creation fails)::it#renders the new view mastodon/spec/controllers/settings/two_factor_authentication/confirmations_controller_spec.rb:90-92
    15.1: describe(detect)::describe(when language can't be detected)::describe(with a non-`en` default locale)::it#uses nil for undetectable string mastodon/spec/lib/language_detector_spec.rb:125-129
    15.1: describe(whitelist)::around#each mastodon/spec/models/user_spec.rb:214-221
    15.1: describe(blacklist)::around#each mastodon/spec/models/user_spec.rb:110-117
    15.1: context(when status is a reblog)::it#replaces status with the reblogged one if it is a reblog mastodon/spec/models/favourite_spec.rb:15-17
    15.1: context(when status is not a reblog)::it#saves with the specified status mastodon/spec/models/favourite_spec.rb:24-26
    15.1: AfterBlockDomainFromAccountService#reject_follow! mastodon/app/services/after_block_domain_from_account_service.rb:29-40
    15.0: Mastodon::MigrationHelpers#add_column_with_default mastodon/lib/mastodon/migration_helpers.rb:432-463
    15.0: Account#excluded_from_timeline_account_ids mastodon/app/models/account.rb:297-298
    15.0: Mastodon::MigrationHelpers#add_timestamps_with_timezone mastodon/lib/mastodon/migration_helpers.rb:102-122
    15.0: describe(#perform)::it#delivers to followers mastodon/spec/workers/activitypub/update_distribution_worker_spec.rb:15-17
    15.0: describe(#create)::context(with a valid acct)::context(when webfinger values are good)::it#redirects to the remote location mastodon/spec/controllers/remote_follow_controller_spec.rb:68-71
    15.0: describe(POST #create)::describe(with paperclip errors)::context#when there is a generic error mastodon/spec/controllers/api/v1/media_controller_spec.rb:26-33
    15.0: describe(POST #create)::describe(with paperclip errors)::context#when imagemagick cant identify the file type mastodon/spec/controllers/api/v1/media_controller_spec.rb:15-22
    15.0: it#removes status from author's home feed mastodon/spec/services/remove_status_service_spec.rb:27-28
    15.0: it#removes status from local follower's home feed mastodon/spec/services/remove_status_service_spec.rb:31-32
    15.0: describe(update)::it#updates the user settings value for privacy mastodon/spec/lib/user_settings_decorator_spec.rb:24-28
    15.0: describe(update)::it#updates the user settings value for sensitive mastodon/spec/lib/user_settings_decorator_spec.rb:31-35
    15.0: describe(update)::it#updates the user settings value for unfollow modal mastodon/spec/lib/user_settings_decorator_spec.rb:38-42
    15.0: describe(update)::it#updates the user settings value for boost modal mastodon/spec/lib/user_settings_decorator_spec.rb:45-49
    15.0: describe(update)::it#updates the user settings value for delete toot modal mastodon/spec/lib/user_settings_decorator_spec.rb:52-56
    15.0: describe(update)::it#updates the user settings value for gif auto play mastodon/spec/lib/user_settings_decorator_spec.rb:59-63
    15.0: describe(update)::it#updates the user settings value for system font in UI mastodon/spec/lib/user_settings_decorator_spec.rb:66-70
    14.9: AddInReplyToAccountIdToStatuses#up mastodon/db/migrate/20161202132159_add_in_reply_to_account_id_to_statuses.rb:2-10
    14.9: context#for direct messages      mastodon/spec/services/notify_service_spec.rb:51-88
    14.9: WellKnown::WebfingerController#show mastodon/app/controllers/well_known/webfinger_controller.rb:9-24
    14.9: FixReblogsInFeeds#up             mastodon/db/migrate/20170920032311_fix_reblogs_in_feeds.rb:2-61
    14.9: ActivityPub::TagManager#local_uri? mastodon/app/lib/activitypub/tag_manager.rb:88-96
    14.9: context(with an oauth token)::describe#GET #index mastodon/spec/controllers/api/v1/statuses/reblogged_by_accounts_controller_spec.rb:15-25
    14.9: describe(#add_headers)::it#adds headers to the request mastodon/spec/lib/request_spec.rb:35-37
    14.9: describe(POST #create)::context(when successfully finds status)::let#url mastodon/spec/controllers/api/web/embeds_controller_spec.rb:17-17
    14.9: describe(detect)::describe(when language can't be detected)::describe(with an account)::it#uses the account locale when present mastodon/spec/lib/language_detector_spec.rb:86-90
    14.9: it#fails loudly if PuSH hub is unavailable mastodon/spec/services/subscribe_service_spec.rb:34-37
    14.9: it#fails loudly if rate limited  mastodon/spec/services/subscribe_service_spec.rb:39-42
    14.8: FetchRemoteAccountService#process_atom mastodon/app/services/fetch_remote_account_service.rb:24-38
    14.8: StatusesIndex::crutch#mentions   mastodon/app/chewy/statuses_index.rb:35-37
    14.8: StatusesIndex::crutch#favourites mastodon/app/chewy/statuses_index.rb:40-42
    14.8: StatusesIndex::crutch#reblogs    mastodon/app/chewy/statuses_index.rb:45-47
    14.8: context(for a remote account)::it#sends ActivityPub payload when forward is true mastodon/spec/services/report_service_spec.rb:15-17
    14.8: context(for a remote account)::it#does not send anything when forward is false mastodon/spec/services/report_service_spec.rb:20-22
    14.8: describe(#call)::context(when setting is empty)::it#follows admin accounts from account mastodon/spec/services/bootstrap_timeline_service_spec.rb:17-18
    14.8: context(with an oauth token)::describe(POST #destroy)::it#updates the reblogged attribute mastodon/spec/controllers/api/v1/statuses/reblogs_controller_spec.rb:61-62
    14.8: context(with an oauth token)::describe(POST #create)::it#updates the reblogged attribute mastodon/spec/controllers/api/v1/statuses/reblogs_controller_spec.rb:32-33
    14.8: context(with an oauth token)::describe(POST #destroy)::it#updates the pinned attribute mastodon/spec/controllers/api/v1/statuses/pins_controller_spec.rb:52-53
    14.8: context(with an oauth token)::describe(POST #create)::it#updates the pinned attribute mastodon/spec/controllers/api/v1/statuses/pins_controller_spec.rb:28-29
    14.8: context(with an oauth token)::describe(POST #destroy)::it#updates the favourited attribute mastodon/spec/controllers/api/v1/statuses/favourites_controller_spec.rb:61-62
    14.8: context(with an oauth token)::describe(POST #create)::it#updates the favourited attribute mastodon/spec/controllers/api/v1/statuses/favourites_controller_spec.rb:32-33
    14.8: describe(POST #follow)::context(with locked account)::it#creates a follow request relation between user and target user mastodon/spec/controllers/api/v1/accounts_controller_spec.rb:79-80
    14.8: describe(POST #follow)::context(with unlocked account)::it#creates a following relation between user and target user mastodon/spec/controllers/api/v1/accounts_controller_spec.rb:58-59
    14.8: describe(detect)::describe(when language can't be detected)::describe(with an account)::it#uses nil when account is present but has no locale mastodon/spec/lib/language_detector_spec.rb:93-96
    14.8: describe(#call)::context#request failed mastodon/spec/services/fetch_atom_service_spec.rb:13-18
    14.8: context(with an oauth token)::describe(PATCH #update)::describe#with valid data mastodon/spec/controllers/api/v1/accounts/credentials_controller_spec.rb:26-58
    14.8: describe(#format)::context#given a post with local status mastodon/spec/lib/formatter_spec.rb:198-283
    14.8: describe(POST #unsubscribe)::context#when user is admin mastodon/spec/controllers/admin/accounts_controller_spec.rb:103-106
    14.8: describe(POST #subscribe)::context#when user is admin mastodon/spec/controllers/admin/accounts_controller_spec.rb:84-87
    14.8: describe#.track_inverse_success! mastodon/spec/lib/delivery_failure_tracker_spec.rb:53-68
    14.8: StatusesController#none
    14.7: describe(#unfollow_salmon)::it#returns entry element mastodon/spec/lib/ostatus/atom_serializer_spec.rb:1169-1175
    14.7: describe(prepare_text)::it#returns unmodified string without special cases mastodon/spec/lib/language_detector_spec.rb:7-11
    14.7: describe(prepare_text)::it#collapses spacing in strings mastodon/spec/lib/language_detector_spec.rb:14-18
    14.7: describe(prepare_text)::it#strips usernames from strings before detection mastodon/spec/lib/language_detector_spec.rb:21-25
    14.7: describe(prepare_text)::it#strips URLs from strings before detection mastodon/spec/lib/language_detector_spec.rb:28-32
    14.7: describe(prepare_text)::it#strips #hashtags from strings before detection mastodon/spec/lib/language_detector_spec.rb:35-39
    14.7: PotentialFriendshipTracker::record mastodon/app/lib/potential_friendship_tracker.rb:14-22
    14.7: describe(#domain_blocking?)::context(blocking the domain)::it# returns true mastodon/spec/models/concerns/account_interactions_spec.rb:386-389
    14.7: Status::account_silencing_filter mastodon/app/models/status.rb:387-392
    14.6: ActivityPub::Activity::Follow#reject_follow_request! mastodon/app/lib/activitypub/activity/follow.rb:30-32
    14.6: describe#GET #edit               mastodon/spec/controllers/auth/registrations_controller_spec.rb:33-38
    14.6: describe(GET #show)::context(when tag exists)::it#returns http success mastodon/spec/controllers/tags_controller_spec.rb:13-15
    14.6: context(without an oauth token)::context(with a public status)::describe(GET #show)::it#returns http success mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:107-109
    14.6: context(without an oauth token)::context(with a public status)::describe(GET #card)::it#returns http success mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:125-127
    14.6: context(without an oauth token)::context(with a private status)::describe(GET #show)::it#returns http unautharized mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:78-80
    14.6: context(without an oauth token)::context(with a private status)::describe(GET #card)::it#returns http unautharized mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:96-98
    14.6: context(with an oauth token)::describe(GET #context)::it#returns http success mastodon/spec/controllers/api/v1/statuses_controller_spec.rb:33-35
    14.6: SignatureVerification#account_from_key_id mastodon/app/controllers/concerns/signature_verification.rb:119-126
    14.6: shared_examples(ScopedSettings)::describe(missing methods)::it#reads settings mastodon/spec/support/examples/lib/settings/scoped_settings.rb:36-39
    14.6: OStatus::Activity::Remote#perform mastodon/app/lib/ostatus/activity/remote.rb:4-9
    14.5: Web::NotificationSerializer#title mastodon/app/serializers/web/notification_serializer.rb:31-32
    14.5: AccountsController#filtered_status_page mastodon/app/controllers/accounts_controller.rb:112-116
    14.5: Streamable#none
    14.5: Admin::ActionLog#set_changes     mastodon/app/models/admin/action_log.rb:32-42
    14.5: describe(validations)::it#does not allow pins of reblogs mastodon/spec/models/status_pin_spec.rb:19-24
    14.5: Pubsubhubbub::SubscribeWorker#perform mastodon/app/workers/pubsubhubbub/subscribe_worker.rb:27-33
    14.5: it#fails loudly if there is a network error mastodon/spec/services/subscribe_service_spec.rb:29-32
    14.5: describe(.as_direct_timeline)::it#includes direct statuses mentioning recipient from followed mastodon/spec/models/status_spec.rb:379-382
    14.5: describe(.as_direct_timeline)::it#includes direct statuses mentioning recipient from non-followed mastodon/spec/models/status_spec.rb:385-388
    14.5: User#pam_setup                   mastodon/app/models/user.rb:118-127
    14.4: it#ignores statuses with an out-of-order delete mastodon/spec/services/process_feed_service_spec.rb:209-250
    14.4: Admin::CustomEmojisController#update mastodon/app/controllers/admin/custom_emojis_controller.rb:31-40
    14.4: describe(GET #index)::context#when signed in mastodon/spec/controllers/oauth/authorized_applications_controller_spec.rb:20-30
    14.4: VerifyLinkService#call           mastodon/app/services/verify_link_service.rb:4-17
    14.4: describe(#status)::context(with a stream entry url)::it#finds the stream entry mastodon/spec/lib/status_finder_spec.rb:32-33
    14.4: describe(DELETE #destroy)::it#revokes access tokens for the application mastodon/spec/controllers/oauth/authorized_applications_controller_spec.rb:54-55
    14.4: describe(GET #index)::context#with only pinned mastodon/spec/controllers/api/v1/accounts/statuses_controller_spec.rb:42-50
    14.4: describe(POST #update)::context#with valid post data mastodon/spec/controllers/api/salmon_controller_spec.rb:16-38
    14.4: describe##confirm!               mastodon/spec/models/user_spec.rb:366-396
    14.4: describe#GET #finish_signup      mastodon/spec/controllers/auth/confirmations_controller_spec.rb:54-66
    14.3: CopyStatusStats#up_fast          mastodon/db/migrate/20180812173710_copy_status_stats.rb:25-32
    14.3: it#ignores reblogs if it failed to retrieve reblogged statuses mastodon/spec/services/process_feed_service_spec.rb:169-206
    14.3: describe(#username)::describe(with a username and hostname value)::it#finds username for a local domain mastodon/spec/lib/webfinger_resource_spec.rb:76-81
    14.3: describe(#username)::describe(with a username and hostname value)::it#finds username for a web domain mastodon/spec/lib/webfinger_resource_spec.rb:84-89
    14.3: describe(#username)::describe(with an acct value)::it#finds the username for a local account if the domain is the local one mastodon/spec/lib/webfinger_resource_spec.rb:110-115
    14.3: describe(#username)::describe(with an acct value)::it#finds the username for a local account if the domain is the Web one mastodon/spec/lib/webfinger_resource_spec.rb:118-123
    14.3: TrendingTags::disallowed_hashtags mastodon/app/models/trending_tags.rb:55-60
